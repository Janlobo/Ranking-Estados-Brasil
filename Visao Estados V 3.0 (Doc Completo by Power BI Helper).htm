<html><style>body {
color: #000000;
background-color: #FFFFFF;
font-size: 24;
font-family: Serif;
font-weight: bold;
font-style: italic;
}
h1, h2, h3, h4, h5, h6 {
color: #000000;
background-color: #FFFFFF;
font-size: 24;
font-family: Serif;
font-weight: bold;
font-style: italic;
}
table, pre {
color: #000000;
background-color: #FFFFFF;
font-size: 16;
font-family: Serif;
font-weight: normal;
font-style: normal;
}

ul, #myUL {
  list-style-type: none;
}

#myUL {
  margin: 0;
  padding: 0;
}

.caret, .dropDownCaret {
  cursor: pointer;
}

.caret::before {
	content: "\25B6";
	color: black;
	display: inline - block;
	margin - right: 6px;
}

.dropDownCaret::before {
	content: "\25BC";
	color: black;
	display: inline - block;
	margin - right: 6px;
	float: right;
}


.nested {
  display: none;
}

.active {
  display: block;
}
</style><body><br></br><h1><div>Power BI Documentation</div></h1><br></br><hr></hr><h2><div>Generated by <a href="http://radacad.com/power-bi-helper">Power BI Helper</a> (Copyright &copy; <a href="http://radacad.com">RADACAD</a>).</div><br></br><div>Date: 05/01/2025 19:12:55</div><br></br></h2><h1><div>------------------******   Visualization    ******---------------------</div></h1><br></br><h2><div>File: Visao Estados V 3.0.pbix</div></h2><br></br><h3><div>Path: C:\Users\jan_e\OneDrive\!!Painel Politicos x Estados - PWBI\Visao Estados V 3.0.pbix</div></h2><br></br><hr></hr><br></br><h3><div>List of Pages:</div></h3><br></br><table border='1px' cellpadding='1'><tr ><td >DisplayName</td><td >Name</td><td >Ordinal</td><td >DisplayOption</td><td >Width</td><td >Height</td><td >PageIndex</td></tr><tr ><td >Visão Geral</td><td >616d1f36ac3be55214a0</td><td >0</td><td >1</td><td >1280</td><td >720</td><td >0</td></tr><tr ><td >Evolução PIB Estadual Histórico</td><td >6ea80f050c9559f7ac7c</td><td >1</td><td >1</td><td >960</td><td >720</td><td >1</td></tr><tr ><td >Ind-PIB</td><td >72b19a52b1b3882a8ca3</td><td >2</td><td >3</td><td >540</td><td >230</td><td >2</td></tr><tr ><td >10_ind_Gini</td><td >606c4c0c4b02ddf67593</td><td >3</td><td >1</td><td >207</td><td >360</td><td >3</td></tr><tr ><td >Ind-gini</td><td >b00700ce715bb7e02997</td><td >4</td><td >3</td><td >320</td><td >240</td><td >4</td></tr><tr ><td >10_ind_pobreza</td><td >0ae5fcc057ee59e634ae</td><td >5</td><td >1</td><td >207</td><td >360</td><td >5</td></tr><tr ><td >Ind-pobreza</td><td >eca910775c92bbb0287b</td><td >6</td><td >3</td><td >320</td><td >240</td><td >6</td></tr><tr ><td >10_ind_IDH</td><td >124355f28d4fc60bfeed</td><td >7</td><td >1</td><td >207</td><td >360</td><td >7</td></tr><tr ><td >Ind-IDH</td><td >197c41a5655ec1c3d7d6</td><td >8</td><td >3</td><td >320</td><td >240</td><td >8</td></tr><tr ><td >10_ind_Desemprego</td><td >e46fb9537361281e62ac</td><td >9</td><td >1</td><td >207</td><td >385</td><td >9</td></tr><tr ><td >Ind-TX-Desemprego</td><td >442f3551c573699e8429</td><td >10</td><td >3</td><td >320</td><td >240</td><td >10</td></tr><tr ><td >10_ind_TXAnalfab</td><td >a5ba4412a8a7999f5f7e</td><td >11</td><td >1</td><td >207</td><td >385</td><td >11</td></tr><tr ><td >Ind-TX-Analfa</td><td >aedeea2e3cadaaf2ae33</td><td >12</td><td >3</td><td >320</td><td >240</td><td >12</td></tr><tr ><td >10_ind_Alunos</td><td >7a6266fb9fde3f97c1f5</td><td >13</td><td >1</td><td >207</td><td >385</td><td >13</td></tr><tr ><td >Ind-%-Alunos</td><td >e73c097d2ac00025a702</td><td >14</td><td >3</td><td >320</td><td >240</td><td >14</td></tr><tr ><td >10_ind_Estab_Saude</td><td >745246171b66ad46213a</td><td >15</td><td >1</td><td >207</td><td >385</td><td >15</td></tr><tr ><td >Ind-Estab-Saude</td><td >2786b9cd25a921651022</td><td >16</td><td >3</td><td >320</td><td >240</td><td >16</td></tr><tr ><td >10_ind_Medicos</td><td >750445ae3cb707891096</td><td >17</td><td >1</td><td >207</td><td >385</td><td >17</td></tr><tr ><td >Ind-Med_por_Hab</td><td >202fcc2e4020152d8538</td><td >18</td><td >3</td><td >320</td><td >240</td><td >18</td></tr><tr ><td >10_ind_Renda</td><td >3c2f5de6e7ae2e5e96c6</td><td >19</td><td >1</td><td >207</td><td >360</td><td >19</td></tr><tr ><td >Ind-Renda_per_Capita</td><td >8f881920e53dacd6cce9</td><td >20</td><td >3</td><td >320</td><td >240</td><td >20</td></tr><tr ><td >10_ind_Receita-Despesas</td><td >b2ace04c12350f402457</td><td >21</td><td >1</td><td >207</td><td >385</td><td >21</td></tr><tr ><td >Ind-Receita-Despesa</td><td >33ae3a29e386e6629a22</td><td >22</td><td >3</td><td >320</td><td >240</td><td >22</td></tr><tr ><td >ind_Estupro</td><td >3a8e418c95526675986e</td><td >23</td><td >3</td><td >320</td><td >240</td><td >23</td></tr><tr ><td >Ind-Homicidios</td><td >dcb593c664b350009261</td><td >24</td><td >3</td><td >320</td><td >600</td><td >24</td></tr><tr ><td >10_ind_Homicidios</td><td >43da064816296e4cfbe4</td><td >25</td><td >1</td><td >207</td><td >385</td><td >25</td></tr><tr ><td >Ind-Tx-População</td><td >f02d6c65043288200d74</td><td >26</td><td >3</td><td >320</td><td >240</td><td >26</td></tr><tr ><td >Ajuda</td><td >a7dc1a73aa99f71734d1</td><td >27</td><td >1</td><td >1280</td><td >720</td><td >27</td></tr></table><hr></hr><br></br><h3><div>Visuals in Visão Geral:</div></h3><table border='1px' cellpadding='1'><tr ><td >Visual Type</td><td >Title</td><td >X</td><td >Y</td><td >Z</td><td >Width</td><td >Height</td><td >Name</td><td >tabOrder</td><td >VisualIndex</td><td >PageIndex</td></tr><tr ><td >shapeMap</td><td >''</td><td >0</td><td >4,18393231073052</td><td >1000</td><td >235,694853504486</td><td >214,775191950833</td><td >355ebc8f49127a30c9c3</td><td ></td><td >0</td><td >0</td></tr><tr ><td >card</td><td >'Território'</td><td >61</td><td >263,587735576023</td><td >2000</td><td >110,17688418257</td><td >71,1268492824188</td><td >4b3e5bc890edd3d580e0</td><td >1000</td><td >1</td><td >0</td></tr><tr ><td >card</td><td ></td><td >61,3643432981755</td><td >347,661026108959</td><td >3000</td><td >110</td><td >57,7446031845931</td><td >4bc547d4ac574472dd0d</td><td >2000</td><td >2</td><td >0</td></tr><tr ><td >card</td><td ></td><td >61,3643432981755</td><td >415,373447700416</td><td >4000</td><td >110</td><td >53,6199886714079</td><td >8dbf302521320940857d</td><td >3000</td><td >3</td><td >0</td></tr><tr ><td >card</td><td ></td><td >61,3643432981755</td><td >478,961254778688</td><td >5000</td><td >110</td><td >57,7446031845931</td><td >b3fc0ec10c0317006aa2</td><td >4000</td><td >4</td><td >0</td></tr><tr ><td >card</td><td ></td><td >20,341396729431</td><td >191,390865437698</td><td >6000</td><td >194,888035748002</td><td >77,3365221222229</td><td >96c8050e2321a1c0ec93</td><td >5000</td><td >5</td><td >0</td></tr><tr ><td >shape</td><td ></td><td >20,341396729431</td><td >191,047168540473</td><td >0</td><td >194,888035748002</td><td >515,576814148153</td><td >3275c40e03ccba2e575b</td><td >6000</td><td >6</td><td >0</td></tr><tr ><td >shape</td><td >'Brasil'</td><td >36,2607466929978</td><td >529,964759359199</td><td >11000</td><td >164,568004222067</td><td >145,042986771991</td><td >f0a0a26cad0bdb832038</td><td >7000</td><td >7</td><td >0</td></tr><tr ><td >tableEx</td><td >'Governador(a)'</td><td >21,7031535628814</td><td >525,21631622173</td><td >7000</td><td >84,6422988952374</td><td >108,515767814407</td><td >f2b03452bd889e538057</td><td >8000</td><td >8</td><td >0</td></tr><tr ><td >card</td><td >'Governador(a)'</td><td >95,6156115950614</td><td >550,919784815884</td><td >8000</td><td >106,208823714519</td><td >57,7446031845931</td><td >1c54730944657ab0dad2</td><td >9000</td><td >9</td><td >0</td></tr><tr ><td >card</td><td >'Desde'</td><td >37,7325225230334</td><td >633,696207290882</td><td >9000</td><td >58,0964294508742</td><td >47,6067963555774</td><td >5497db902086ca3d11d1</td><td >10000</td><td >10</td><td >0</td></tr><tr ><td >card</td><td >'Partido'</td><td >82,9186343181578</td><td >633,696207290882</td><td >10000</td><td >118,613543462201</td><td >47,6067963555774</td><td >42c527b8d88e198004a0</td><td >11000</td><td >11</td><td >0</td></tr><tr ><td >textbox</td><td >'Visão Geral dos Estados'</td><td >246,102930312731</td><td >8,06894853484363</td><td >12000</td><td >1005,39098744152</td><td >47,6067963555774</td><td >849b7e29d120a7e9e943</td><td >12000</td><td >12</td><td >0</td></tr><tr ><td >kpi</td><td >'Índice de Gini'</td><td >743,957054912583</td><td >69,3929573996553</td><td >13000</td><td >212,213346466388</td><td >132,330755971436</td><td >19f826b806d6de35ac7e</td><td >13000</td><td >13</td><td >0</td></tr><tr ><td >kpi</td><td >'IDH'</td><td >266,27530164984</td><td >68,5860625461709</td><td >14000</td><td >213,020241319872</td><td >132,330755971436</td><td >3cfe22b9b370ffd47dd5</td><td >14000</td><td >14</td><td >0</td></tr><tr ><td >kpi</td><td >'Taxa de Pobreza (%)'</td><td >504,309283427727</td><td >229,965033243044</td><td >15000</td><td >213,020241319872</td><td >132,330755971436</td><td >e28b57712255d7494323</td><td >15000</td><td >15</td><td >0</td></tr><tr ><td >kpi</td><td >'Taxa de Desemprego (%)'</td><td >266,27530164984</td><td >231,578822950012</td><td >16000</td><td >213,827136173356</td><td >132,330755971436</td><td >828808524011bad78a65</td><td >16000</td><td >16</td><td >0</td></tr><tr ><td >kpi</td><td >'Taxa de Analfabetismo'</td><td >985,218616104408</td><td >69,3929573996553</td><td >17000</td><td >213,020241319872</td><td >132,330755971436</td><td >b37f78d9d2358648a278</td><td >17000</td><td >17</td><td >0</td></tr><tr ><td >kpi</td><td >'% Alunos na Rede Pública'</td><td >505,116178281212</td><td >547,074710662398</td><td >18000</td><td >213,020241319872</td><td >132,330755971436</td><td >8c5992843ed9e7a755b1</td><td >18000</td><td >18</td><td >0</td></tr><tr ><td >kpi</td><td >'Estabelecimentos de Saúde'</td><td >504,309283427727</td><td >388,923319379463</td><td >19000</td><td >213,020241319872</td><td >132,330755971436</td><td >6372c08c7dd1bcaf93b5</td><td >19000</td><td >19</td><td >0</td></tr><tr ><td >kpi</td><td >'Médicos / 10 mil Habitantes'</td><td >743,957054912583</td><td >229,965033243044</td><td >20000</td><td >213,827136173356</td><td >133,13765082492</td><td >c8a7aac10bf9e45aa9be</td><td >20000</td><td >20</td><td >0</td></tr><tr ><td >cardVisual</td><td ></td><td >722,71501364395</td><td >110,544594927358</td><td >22000</td><td >52,4481654764836</td><td >48,4136912090618</td><td >e099dcb3105ae3c0d9bd</td><td >22000</td><td >21</td><td >0</td></tr><tr ><td >cardVisual</td><td ></td><td >245,969073712656</td><td >110,544594927358</td><td >23000</td><td >52,4481654764836</td><td >48,4136912090618</td><td >0414783c7764ff1d0aac</td><td >23000</td><td >22</td><td >0</td></tr><tr ><td >cardVisual</td><td >'Comp_Indice_Gini'</td><td >923,087712386112</td><td >45,1861117951244</td><td >24000</td><td >46,7999015020931</td><td >47,6067963555774</td><td >186a13db7877a2c514a7</td><td >24000</td><td >23</td><td >0</td></tr><tr ><td >kpi</td><td >'Homicídios / 100 mil Hab.'</td><td >985,218616104408</td><td >229,965033243044</td><td >25000</td><td >213,827136173356</td><td >133,13765082492</td><td >cb815e37060c1e0fd7a9</td><td >25000</td><td >24</td><td >0</td></tr><tr ><td >kpi</td><td >'Renda per Capita Média (R$)'</td><td >504,309283427727</td><td >68,5860625461709</td><td >26000</td><td >213,827136173356</td><td >133,13765082492</td><td >72e721d60d84a054347b</td><td >26000</td><td >25</td><td >0</td></tr><tr ><td >pivotTable</td><td ></td><td >743,53112309837</td><td >430,72671070974</td><td >71000</td><td >454,311170373962</td><td >260,670343657191</td><td >25835b55144c0e96da02</td><td >27000</td><td >26</td><td >0</td></tr><tr ><td >kpi</td><td >'% em relação ao PIB Brasil'</td><td >267,082196503324</td><td >388,923319379463</td><td >27000</td><td >213,020241319872</td><td >132,330755971436</td><td >c0d120c9a59d35924762</td><td >28000</td><td >27</td><td >0</td></tr><tr ><td >kpi</td><td >'Receita - Despesa Estadual'</td><td >267,082196503324</td><td >547,074710662398</td><td >28000</td><td >213,827136173356</td><td >133,13765082492</td><td >35a9cd66639fe67c9759</td><td >29000</td><td >28</td><td >0</td></tr><tr ><td >cardVisual</td><td ></td><td >486,874078260639</td><td >110,686083170695</td><td >29000</td><td >52,8110070030114</td><td >48,4703762904351</td><td >02a1500ca0524d32d902</td><td >30000</td><td >29</td><td >0</td></tr><tr ><td >cardVisual</td><td ></td><td >965,066895096126</td><td >110,686083170695</td><td >30000</td><td >52,0875685509153</td><td >48,4703762904351</td><td >811446f5ec08312f387d</td><td >31000</td><td >30</td><td >0</td></tr><tr ><td >cardVisual</td><td ></td><td >245,969073712656</td><td >273,459734892306</td><td >31000</td><td >52,8110070030114</td><td >48,4703762904351</td><td >a60c4a23d90df510760e</td><td >32000</td><td >31</td><td >0</td></tr><tr ><td >cardVisual</td><td ></td><td >486,874078260639</td><td >274,183173344402</td><td >32000</td><td >52,8110070030114</td><td >48,4703762904351</td><td >6e5ea0de9b3dd5fa2e0b</td><td >33000</td><td >32</td><td >0</td></tr><tr ><td >cardVisual</td><td ></td><td >722,71501364395</td><td >274,183173344402</td><td >33000</td><td >52,8110070030114</td><td >48,4703762904351</td><td >0f2877efacdaf907a5c8</td><td >34000</td><td >33</td><td >0</td></tr><tr ><td >cardVisual</td><td ></td><td >965,066895096126</td><td >274,906611796498</td><td >34000</td><td >52,8110070030114</td><td >48,4703762904351</td><td >9424a50e5c7c0f9a31fe</td><td >35000</td><td >34</td><td >0</td></tr><tr ><td >cardVisual</td><td ></td><td >245,969073712656</td><td >430,445878997148</td><td >35000</td><td >52,8110070030114</td><td >48,4703762904351</td><td >f45d8bba170742823454</td><td >36000</td><td >35</td><td >0</td></tr><tr ><td >cardVisual</td><td ></td><td >486,874078260639</td><td >431,169317449244</td><td >36000</td><td >52,8110070030114</td><td >48,4703762904351</td><td >8541f610d9a4c05da90c</td><td >37000</td><td >36</td><td >0</td></tr><tr ><td >cardVisual</td><td ></td><td >245,969073712656</td><td >588,878900006182</td><td >37000</td><td >52,8110070030114</td><td >48,4703762904351</td><td >cad05b112c056396983f</td><td >38000</td><td >37</td><td >0</td></tr><tr ><td >cardVisual</td><td ></td><td >486,874078260639</td><td >588,878900006182</td><td >38000</td><td >52,8110070030114</td><td >48,4703762904351</td><td >8e405503cef9b3eed43e</td><td >39000</td><td >38</td><td >0</td></tr><tr ><td >cardVisual</td><td >'Comp_Indice_Gini'</td><td >681,826151194287</td><td >207,371977345481</td><td >39000</td><td >46,7999015020931</td><td >47,6067963555774</td><td >fabd72e144671fa5a58e</td><td >40000</td><td >39</td><td >0</td></tr><tr ><td >cardVisual</td><td >'Comp_Indice_Gini'</td><td >440,564590002462</td><td >44,37921694164</td><td >40000</td><td >46,7999015020931</td><td >47,6067963555774</td><td >1235c43b826e118bfde0</td><td >41000</td><td >40</td><td >0</td></tr><tr ><td >cardVisual</td><td >'Comp_Indice_Gini'</td><td >440,564590002462</td><td >208,178872198966</td><td >41000</td><td >46,7999015020931</td><td >47,6067963555774</td><td >3ff44330085b4279f205</td><td >42000</td><td >41</td><td >0</td></tr><tr ><td >cardVisual</td><td >'Comp_Indice_Gini'</td><td >681,826151194287</td><td >45,1861117951244</td><td >42000</td><td >46,7999015020931</td><td >47,6067963555774</td><td >ee8f792f21011b78268c</td><td >43000</td><td >42</td><td >0</td></tr><tr ><td >cardVisual</td><td >'Comp_Indice_Gini'</td><td >1163,54237872445</td><td >45,9930066486087</td><td >43000</td><td >46,7999015020931</td><td >47,6067963555774</td><td >cb3503aa418987e4e60d</td><td >44000</td><td >43</td><td >0</td></tr><tr ><td >actionButton</td><td ></td><td >1225,67328244275</td><td >12,1034228022655</td><td >44000</td><td >54,0619551834524</td><td >40,3447426742182</td><td >4702b574da8d7fd76057</td><td >45000</td><td >44</td><td >0</td></tr><tr ><td >image</td><td >'Ajuda'</td><td >0</td><td >44,1720143789109</td><td >45000</td><td >1279,761416589</td><td >676,07722007722</td><td >f807350c10fdcba1c3d5</td><td >46000</td><td >45</td><td >0</td></tr><tr ><td >textbox</td><td >'Fontes: IPEA, IBGE,  wikimedia(Governadores), DATASUS, dados.mj.gov.br, Receita Federal'</td><td >24,7698744769875</td><td >704,267782426778</td><td >46000</td><td >718,326359832636</td><td >15,397489539749</td><td >f6d49fc1ebd314729b09</td><td >47000</td><td >46</td><td >0</td></tr><tr ><td >pivotTable</td><td ></td><td >744,60133592627</td><td >431,176122431724</td><td >70500</td><td >453,68732561089</td><td >258,013021053522</td><td >463aad9ec6b9e499de26</td><td >48000</td><td >47</td><td >0</td></tr><tr ><td >card</td><td ></td><td >332,840198091557</td><td >197,032491846841</td><td >47000</td><td >83,4883440028989</td><td >30,0558038410436</td><td >3ec465cb20757f38beb8</td><td >49000</td><td >48</td><td >0</td></tr><tr ><td >card</td><td ></td><td >569,94709505979</td><td >197,032491846841</td><td >48000</td><td >83,4883440028989</td><td >30,0558038410436</td><td >a638ba728c552ddafd9d</td><td >50000</td><td >49</td><td >0</td></tr><tr ><td >card</td><td ></td><td >809,2803478681</td><td >197,032491846841</td><td >49000</td><td >83,4883440028989</td><td >30,0558038410436</td><td >968b78cb610fec678f71</td><td >51000</td><td >50</td><td >0</td></tr><tr ><td >card</td><td ></td><td >1050,83995651649</td><td >197,032491846841</td><td >50000</td><td >83,4883440028989</td><td >30,0558038410436</td><td >0b4de102bde49f0f3de7</td><td >52000</td><td >51</td><td >0</td></tr><tr ><td >card</td><td ></td><td >333,74410864066</td><td >357,05711622953</td><td >51000</td><td >84,6630275595793</td><td >30,6750099853548</td><td >649436923bd77c084c33</td><td >53000</td><td >52</td><td >0</td></tr><tr ><td >card</td><td ></td><td >570,5551857276</td><td >357,05711622953</td><td >52000</td><td >83,4360271601651</td><td >30,6750099853548</td><td >c45eef2b4df42cefa901</td><td >54000</td><td >53</td><td >0</td></tr><tr ><td >card</td><td ></td><td >807,366262814539</td><td >357,05711622953</td><td >53000</td><td >84,6630275595793</td><td >30,6750099853548</td><td >7e4df897d666332260ba</td><td >55000</td><td >54</td><td >0</td></tr><tr ><td >card</td><td ></td><td >1050,31234189855</td><td >357,05711622953</td><td >54000</td><td >84,6630275595793</td><td >30,6750099853548</td><td >be0982046ff45fff26b1</td><td >56000</td><td >55</td><td >0</td></tr><tr ><td >card</td><td ></td><td >569,328185328185</td><td >516,567168153375</td><td >55000</td><td >83,4360271601651</td><td >30,6750099853548</td><td >4537b7bdb893ad148129</td><td >57000</td><td >56</td><td >0</td></tr><tr ><td >card</td><td ></td><td >333,74410864066</td><td >673,623219278392</td><td >56000</td><td >83,4360271601651</td><td >30,6750099853548</td><td >4766a6a40b5dc83c646f</td><td >58000</td><td >57</td><td >0</td></tr><tr ><td >card</td><td ></td><td >570,5551857276</td><td >673,623219278392</td><td >57000</td><td >83,4360271601651</td><td >30,6750099853548</td><td >10ef0a3a0951802e6277</td><td >59000</td><td >58</td><td >0</td></tr><tr ><td >card</td><td ></td><td >83,6786462146104</td><td >312,400279201212</td><td >60000</td><td >64,1536287645346</td><td >23,7089497608063</td><td >40aab771be0504c56067</td><td >60000</td><td >59</td><td >0</td></tr><tr ><td >cardVisual</td><td >'Comp_Indice_Gini'</td><td >1163,13318238308</td><td >207,801971432949</td><td >61000</td><td >47,4178995216126</td><td >47,4178995216126</td><td >52c185a132cb09ab11f6</td><td >61000</td><td >60</td><td >0</td></tr><tr ><td >cardVisual</td><td >'Comp_Indice_Gini'</td><td >917,675820153561</td><td >207,801971432949</td><td >62000</td><td >47,4178995216126</td><td >47,4178995216126</td><td >18f38c6a39b482a61776</td><td >62000</td><td >61</td><td >0</td></tr><tr ><td >cardVisual</td><td >'Comp_Indice_Gini'</td><td >681,980966649075</td><td >369,580687447863</td><td >63000</td><td >47,4178995216126</td><td >47,4178995216126</td><td >b7ce2ef43b2c487706fa</td><td >63000</td><td >62</td><td >0</td></tr><tr ><td >cardVisual</td><td >'Comp_Indice_Gini'</td><td >681,980966649075</td><td >522,991538841315</td><td >64000</td><td >47,4178995216126</td><td >47,4178995216126</td><td >e91adf78bbdb951d0921</td><td >64000</td><td >63</td><td >0</td></tr><tr ><td >cardVisual</td><td >'Comp_Indice_Gini'</td><td >440,707536730281</td><td >522,991538841315</td><td >65000</td><td >47,4178995216126</td><td >47,4178995216126</td><td >3eba7389b9128c4a63d3</td><td >65000</td><td >64</td><td >0</td></tr><tr ><td >shape</td><td ></td><td >743,345307206456</td><td >383,527128483631</td><td >66000</td><td >213,380547847257</td><td >47,4178995216126</td><td >cf4f42d025aeb6c8e290</td><td >66000</td><td >65</td><td >0</td></tr><tr ><td >shape</td><td ></td><td >984,618737125249</td><td >383,527128483631</td><td >67000</td><td >213,380547847257</td><td >47,4178995216126</td><td >444f4c4030e19a3a2da0</td><td >67000</td><td >66</td><td >0</td></tr><tr ><td >shape</td><td ></td><td >985,880392420374</td><td >382,709850826502</td><td >70000</td><td >212,410159924741</td><td >48,3031850557721</td><td >c741da9cc0948501da2c</td><td >68000</td><td >67</td><td >0</td></tr><tr ><td >shape</td><td ></td><td >745,603010348072</td><td >382,709850826502</td><td >69000</td><td >214,267974734579</td><td >48,3031850557721</td><td >cf598c910820c9880253</td><td >69000</td><td >68</td><td >0</td></tr></table><br></br><h3><div>Visuals in Evolução PIB Estadual Histórico:</div></h3><table border='1px' cellpadding='1'><tr ><td >Visual Type</td><td >Title</td><td >X</td><td >Y</td><td >Z</td><td >Width</td><td >Height</td><td >Name</td><td >tabOrder</td><td >VisualIndex</td><td >PageIndex</td></tr><tr ><td >wishyoulizationbarchartrace</td><td >'Evolução do Ranking dos Estados por tamanho do PIB'</td><td >53,0027876261874</td><td >54,8734742482882</td><td >1000</td><td >879,846274594712</td><td >586,772037132263</td><td >793ab1c14e9ed8c154c3</td><td ></td><td >0</td><td >1</td></tr><tr ><td >actionButton</td><td ></td><td >79,1924003355977</td><td >14,9654929768059</td><td >2000</td><td >69,2154050177271</td><td >39,9079812714823</td><td >55e7d5b20d6efa267c3b</td><td >1000</td><td >1</td><td >1</td></tr><tr ><td >RaceBarChart828E7F9A76D539488CE6C92657D234CF</td><td >'Evolução do Ranking dos Estados por tamanho do PIB'</td><td >192,680722076376</td><td >115,359008362879</td><td >0</td><td >730,191344826653</td><td >518,80375652927</td><td >ac0b4a0a7ebae9b23a55</td><td >2000</td><td >2</td><td >1</td></tr></table><br></br><h3><div>Visuals in Ind-PIB:</div></h3><table border='1px' cellpadding='1'><tr ><td >Visual Type</td><td >Title</td><td >X</td><td >Y</td><td >Z</td><td >Width</td><td >Height</td><td >Name</td><td >tabOrder</td><td >VisualIndex</td><td >PageIndex</td></tr><tr ><td >lineStackedColumnComboChart</td><td ></td><td >0</td><td >0</td><td >1</td><td >538</td><td >226</td><td >602d92f6d95630c96b3a</td><td >1</td><td >0</td><td >2</td></tr></table><br></br><h3><div>Visuals in 10_ind_Gini:</div></h3><table border='1px' cellpadding='1'><tr ><td >Visual Type</td><td >Title</td><td >X</td><td >Y</td><td >Z</td><td >Width</td><td >Height</td><td >Name</td><td >tabOrder</td><td >VisualIndex</td><td >PageIndex</td></tr><tr ><td >pivotTable</td><td ></td><td >0</td><td >0</td><td >0</td><td >206,749567301291</td><td >359,511117028358</td><td >6bc730ee33d17ca28d85</td><td ></td><td >0</td><td >3</td></tr><tr ><td >shape</td><td >'Média'</td><td >157,669551324724</td><td >0</td><td >1000</td><td >36,8100119824258</td><td >23,3130075888697</td><td >41d392e22fadc8b15c20</td><td >1000</td><td >1</td><td >3</td></tr></table><br></br><h3><div>Visuals in Ind-gini:</div></h3><table border='1px' cellpadding='1'><tr ><td >Visual Type</td><td >Title</td><td >X</td><td >Y</td><td >Z</td><td >Width</td><td >Height</td><td >Name</td><td >tabOrder</td><td >VisualIndex</td><td >PageIndex</td></tr><tr ><td >lineChart</td><td ></td><td >0</td><td >0</td><td >0</td><td >320</td><td >140</td><td >e9ab204de9de52d215b8</td><td ></td><td >0</td><td >4</td></tr><tr ><td >lineChart</td><td >'Índice Gini'</td><td >0</td><td >50</td><td >1000</td><td >320</td><td >190</td><td >b90aec7e044952d07882</td><td >1000</td><td >1</td><td >4</td></tr><tr ><td >card</td><td ></td><td >0</td><td >0</td><td >2000</td><td >320</td><td >50</td><td >03c681cf5e268b1050e3</td><td >2000</td><td >2</td><td >4</td></tr><tr ><td >card</td><td ></td><td >245</td><td >25</td><td >3000</td><td >75</td><td >25</td><td >ef889cebfd4aa8f8219d</td><td >3000</td><td >3</td><td >4</td></tr></table><br></br><h3><div>Visuals in 10_ind_pobreza:</div></h3><table border='1px' cellpadding='1'><tr ><td >Visual Type</td><td >Title</td><td >X</td><td >Y</td><td >Z</td><td >Width</td><td >Height</td><td >Name</td><td >tabOrder</td><td >VisualIndex</td><td >PageIndex</td></tr><tr ><td >pivotTable</td><td ></td><td >0</td><td >0</td><td >0</td><td >207,35224651977</td><td >359,220873044541</td><td >3bbbf1e919ae25a6a5d2</td><td ></td><td >0</td><td >5</td></tr><tr ><td >shape</td><td >'Média'</td><td >161,964052722673</td><td >0</td><td >1000</td><td >44,785514578618</td><td >23,3130075888697</td><td >66817d564e3cc10d87be</td><td >1000</td><td >1</td><td >5</td></tr></table><br></br><h3><div>Visuals in Ind-pobreza:</div></h3><table border='1px' cellpadding='1'><tr ><td >Visual Type</td><td >Title</td><td >X</td><td >Y</td><td >Z</td><td >Width</td><td >Height</td><td >Name</td><td >tabOrder</td><td >VisualIndex</td><td >PageIndex</td></tr><tr ><td >lineChart</td><td ></td><td >0</td><td >0</td><td >0</td><td >320</td><td >140</td><td >ab152a7b6888b0cbe2dd</td><td ></td><td >0</td><td >6</td></tr><tr ><td >lineChart</td><td >'Pobreza'</td><td >0</td><td >50</td><td >1000</td><td >320</td><td >190</td><td >6222ca57cab17cd83b69</td><td >1000</td><td >1</td><td >6</td></tr><tr ><td >card</td><td ></td><td >0</td><td >0</td><td >2000</td><td >320</td><td >50</td><td >4d747816e8f098a3d481</td><td >2000</td><td >2</td><td >6</td></tr><tr ><td >card</td><td ></td><td >245</td><td >25</td><td >3000</td><td >75</td><td >25</td><td >4bf99e51e803553dff49</td><td >3000</td><td >3</td><td >6</td></tr></table><br></br><h3><div>Visuals in 10_ind_IDH:</div></h3><table border='1px' cellpadding='1'><tr ><td >Visual Type</td><td >Title</td><td >X</td><td >Y</td><td >Z</td><td >Width</td><td >Height</td><td >Name</td><td >tabOrder</td><td >VisualIndex</td><td >PageIndex</td></tr><tr ><td >pivotTable</td><td ></td><td >0</td><td >0</td><td >0</td><td >207,35224651977</td><td >359,220873044541</td><td >34bceacb204488ea0d63</td><td ></td><td >0</td><td >7</td></tr><tr ><td >shape</td><td >'Média'</td><td >160,123552123552</td><td >0</td><td >1000</td><td >46,6260151777393</td><td >23,3130075888697</td><td >446650104e6dee20c815</td><td >1000</td><td >1</td><td >7</td></tr></table><br></br><h3><div>Visuals in Ind-IDH:</div></h3><table border='1px' cellpadding='1'><tr ><td >Visual Type</td><td >Title</td><td >X</td><td >Y</td><td >Z</td><td >Width</td><td >Height</td><td >Name</td><td >tabOrder</td><td >VisualIndex</td><td >PageIndex</td></tr><tr ><td >lineChart</td><td ></td><td >0</td><td >0</td><td >0</td><td >320</td><td >140</td><td >b2ebdd2de0aeaf75d9a4</td><td ></td><td >0</td><td >8</td></tr><tr ><td >lineChart</td><td >'Índice de Desenvolvimento Humano'</td><td >0</td><td >50</td><td >1000</td><td >320</td><td >190</td><td >399882a2d4d6e9e94d18</td><td >1000</td><td >1</td><td >8</td></tr><tr ><td >card</td><td ></td><td >0</td><td >0</td><td >2000</td><td >320</td><td >50</td><td >82e86f54c2209d13b603</td><td >2000</td><td >2</td><td >8</td></tr><tr ><td >card</td><td ></td><td >245</td><td >25</td><td >3000</td><td >75</td><td >25</td><td >d2bf70d11f11ca7c394d</td><td >3000</td><td >3</td><td >8</td></tr></table><br></br><h3><div>Visuals in 10_ind_Desemprego:</div></h3><table border='1px' cellpadding='1'><tr ><td >Visual Type</td><td >Title</td><td >X</td><td >Y</td><td >Z</td><td >Width</td><td >Height</td><td >Name</td><td >tabOrder</td><td >VisualIndex</td><td >PageIndex</td></tr><tr ><td >pivotTable</td><td ></td><td >0</td><td >0</td><td >0</td><td >207,143857953859</td><td >385,120908322261</td><td >b1c1f95c5d35eba5ed99</td><td ></td><td >0</td><td >9</td></tr><tr ><td >shape</td><td >'Média'</td><td >169,643676772557</td><td >0</td><td >1000</td><td >37,5001811813021</td><td >23,2143978741394</td><td >890c33cba20eb963ad9c</td><td >1000</td><td >1</td><td >9</td></tr></table><br></br><h3><div>Visuals in Ind-TX-Desemprego:</div></h3><table border='1px' cellpadding='1'><tr ><td >Visual Type</td><td >Title</td><td >X</td><td >Y</td><td >Z</td><td >Width</td><td >Height</td><td >Name</td><td >tabOrder</td><td >VisualIndex</td><td >PageIndex</td></tr><tr ><td >lineChart</td><td ></td><td >0</td><td >0</td><td >0</td><td >320</td><td >140</td><td >9d862a6440fccadf66f2</td><td ></td><td >0</td><td >10</td></tr><tr ><td >card</td><td ></td><td >0</td><td >0</td><td >1000</td><td >320</td><td >50</td><td >01e89991af75ef0f70b0</td><td >1000</td><td >1</td><td >10</td></tr><tr ><td >lineChart</td><td >'Taxa Desemprego'</td><td >0</td><td >50</td><td >2000</td><td >320</td><td >190</td><td >d75b71d4ecf161a448df</td><td >2000</td><td >2</td><td >10</td></tr><tr ><td >card</td><td ></td><td >245</td><td >25</td><td >3000</td><td >75</td><td >25</td><td >967b63e9e6395d08c396</td><td >3000</td><td >3</td><td >10</td></tr></table><br></br><h3><div>Visuals in 10_ind_TXAnalfab:</div></h3><table border='1px' cellpadding='1'><tr ><td >Visual Type</td><td >Title</td><td >X</td><td >Y</td><td >Z</td><td >Width</td><td >Height</td><td >Name</td><td >tabOrder</td><td >VisualIndex</td><td >PageIndex</td></tr><tr ><td >pivotTable</td><td ></td><td >0</td><td >0</td><td >0</td><td >207,422152433869</td><td >383,489793453316</td><td >a2d4602967997b64d9e9</td><td ></td><td >0</td><td >11</td></tr><tr ><td >shape</td><td >'Média'</td><td >160,297620485566</td><td >0</td><td >1000</td><td >46,7534726416234</td><td >23,3767363208117</td><td >2e7d62e0c4b6f78b08b5</td><td >1000</td><td >1</td><td >11</td></tr></table><br></br><h3><div>Visuals in Ind-TX-Analfa:</div></h3><table border='1px' cellpadding='1'><tr ><td >Visual Type</td><td >Title</td><td >X</td><td >Y</td><td >Z</td><td >Width</td><td >Height</td><td >Name</td><td >tabOrder</td><td >VisualIndex</td><td >PageIndex</td></tr><tr ><td >lineChart</td><td ></td><td >0</td><td >0</td><td >0</td><td >320</td><td >140</td><td >8f6b5d18037cf534ba31</td><td ></td><td >0</td><td >12</td></tr><tr ><td >card</td><td ></td><td >0</td><td >0</td><td >1000</td><td >320</td><td >50</td><td >d5f34b833cf7dd87fdef</td><td >1000</td><td >1</td><td >12</td></tr><tr ><td >lineChart</td><td >'Taxa Analfabetismo'</td><td >0</td><td >50</td><td >2000</td><td >320</td><td >190</td><td >bfbaa643a87ffd3d8495</td><td >2000</td><td >2</td><td >12</td></tr><tr ><td >card</td><td ></td><td >245</td><td >25</td><td >3000</td><td >75</td><td >25</td><td >a2a0c2b54baae329b282</td><td >3000</td><td >3</td><td >12</td></tr></table><br></br><h3><div>Visuals in 10_ind_Alunos:</div></h3><table border='1px' cellpadding='1'><tr ><td >Visual Type</td><td >Title</td><td >X</td><td >Y</td><td >Z</td><td >Width</td><td >Height</td><td >Name</td><td >tabOrder</td><td >VisualIndex</td><td >PageIndex</td></tr><tr ><td >shape</td><td >'Média'</td><td >154,184529356943</td><td >0</td><td >0</td><td >53,1444547996272</td><td >23,6197576887232</td><td >ec0e3dd82a6760f5d827</td><td ></td><td >0</td><td >13</td></tr><tr ><td >pivotTable</td><td ></td><td >0</td><td >0</td><td >1000</td><td >207,32898415657</td><td >385,133271202237</td><td >3b75e8f72866226ce621</td><td >1000</td><td >1</td><td >13</td></tr></table><br></br><h3><div>Visuals in Ind-%-Alunos:</div></h3><table border='1px' cellpadding='1'><tr ><td >Visual Type</td><td >Title</td><td >X</td><td >Y</td><td >Z</td><td >Width</td><td >Height</td><td >Name</td><td >tabOrder</td><td >VisualIndex</td><td >PageIndex</td></tr><tr ><td >lineChart</td><td ></td><td >0</td><td >0</td><td >0</td><td >320</td><td >140</td><td >75769f7aae69d3e90149</td><td ></td><td >0</td><td >14</td></tr><tr ><td >card</td><td ></td><td >0</td><td >0</td><td >1000</td><td >320</td><td >50</td><td >9e870da28ba2170aee89</td><td >1000</td><td >1</td><td >14</td></tr><tr ><td >areaChart</td><td >'% Alunos na Rede Pública'</td><td >0</td><td >50</td><td >2000</td><td >320</td><td >190</td><td >bbcbc702714940e69463</td><td >2000</td><td >2</td><td >14</td></tr><tr ><td >card</td><td ></td><td >245</td><td >25</td><td >3000</td><td >75</td><td >25</td><td >f73cfa7ca243a2398ece</td><td >3000</td><td >3</td><td >14</td></tr></table><br></br><h3><div>Visuals in 10_ind_Estab_Saude:</div></h3><table border='1px' cellpadding='1'><tr ><td >Visual Type</td><td >Title</td><td >X</td><td >Y</td><td >Z</td><td >Width</td><td >Height</td><td >Name</td><td >tabOrder</td><td >VisualIndex</td><td >PageIndex</td></tr><tr ><td >shape</td><td >'Média'</td><td >154,184529356943</td><td >0</td><td >0</td><td >53,1444547996272</td><td >23,6197576887232</td><td >5c15d24e91303a3629a7</td><td ></td><td >0</td><td >15</td></tr><tr ><td >pivotTable</td><td ></td><td >0</td><td >0</td><td >1000</td><td >207,32898415657</td><td >385,133271202237</td><td >d75f49467d50d1efdc8e</td><td >1000</td><td >1</td><td >15</td></tr></table><br></br><h3><div>Visuals in Ind-Estab-Saude:</div></h3><table border='1px' cellpadding='1'><tr ><td >Visual Type</td><td >Title</td><td >X</td><td >Y</td><td >Z</td><td >Width</td><td >Height</td><td >Name</td><td >tabOrder</td><td >VisualIndex</td><td >PageIndex</td></tr><tr ><td >lineChart</td><td ></td><td >0</td><td >0</td><td >0</td><td >320</td><td >140</td><td >a4bfb5290e5203772e92</td><td ></td><td >0</td><td >16</td></tr><tr ><td >card</td><td ></td><td >0</td><td >0</td><td >1000</td><td >320</td><td >50</td><td >66c2e7b013e2656715c6</td><td >1000</td><td >1</td><td >16</td></tr><tr ><td >lineChart</td><td >'Estabelecimentos de Saúde'</td><td >0</td><td >50</td><td >2000</td><td >320</td><td >190</td><td >6a3a37ec505c10005505</td><td >2000</td><td >2</td><td >16</td></tr><tr ><td >card</td><td ></td><td >245</td><td >25</td><td >3000</td><td >75</td><td >25</td><td >5e0c835fa04b39a4f67a</td><td >3000</td><td >3</td><td >16</td></tr></table><br></br><h3><div>Visuals in 10_ind_Medicos:</div></h3><table border='1px' cellpadding='1'><tr ><td >Visual Type</td><td >Title</td><td >X</td><td >Y</td><td >Z</td><td >Width</td><td >Height</td><td >Name</td><td >tabOrder</td><td >VisualIndex</td><td >PageIndex</td></tr><tr ><td >shape</td><td >'Média'</td><td >154,184529356943</td><td >0</td><td >0</td><td >53,1444547996272</td><td >23,6197576887232</td><td >bd3ed1a3cadb07676535</td><td ></td><td >0</td><td >17</td></tr><tr ><td >pivotTable</td><td ></td><td >0</td><td >0</td><td >1000</td><td >207,32898415657</td><td >385,133271202237</td><td >6853974b5265e4c0071a</td><td >1000</td><td >1</td><td >17</td></tr></table><br></br><h3><div>Visuals in Ind-Med_por_Hab:</div></h3><table border='1px' cellpadding='1'><tr ><td >Visual Type</td><td >Title</td><td >X</td><td >Y</td><td >Z</td><td >Width</td><td >Height</td><td >Name</td><td >tabOrder</td><td >VisualIndex</td><td >PageIndex</td></tr><tr ><td >lineChart</td><td ></td><td >0</td><td >0</td><td >0</td><td >320</td><td >140</td><td >9fca3ffb649421bc9c4d</td><td ></td><td >0</td><td >18</td></tr><tr ><td >card</td><td ></td><td >0</td><td >0</td><td >1000</td><td >320</td><td >50</td><td >439ae5dc5691b080e882</td><td >1000</td><td >1</td><td >18</td></tr><tr ><td >lineChart</td><td >'Médicos por 10.000 Habitantes'</td><td >0</td><td >50</td><td >2000</td><td >320</td><td >190</td><td >9ee3d47f7abb06129e81</td><td >2000</td><td >2</td><td >18</td></tr><tr ><td >card</td><td ></td><td >245</td><td >25</td><td >3000</td><td >75</td><td >25</td><td >87d8a122bcfa39d4b7af</td><td >3000</td><td >3</td><td >18</td></tr></table><br></br><h3><div>Visuals in 10_ind_Renda:</div></h3><table border='1px' cellpadding='1'><tr ><td >Visual Type</td><td >Title</td><td >X</td><td >Y</td><td >Z</td><td >Width</td><td >Height</td><td >Name</td><td >tabOrder</td><td >VisualIndex</td><td >PageIndex</td></tr><tr ><td >pivotTable</td><td ></td><td >0</td><td >0</td><td >0</td><td >207,35224651977</td><td >359,220873044541</td><td >982de50d4bb9aa35b7a8</td><td ></td><td >0</td><td >19</td></tr><tr ><td >shape</td><td >'Média'</td><td >162,868431662411</td><td >0</td><td >1000</td><td >44,2779196344577</td><td >23,2226851229673</td><td >af3c3169821dcb09d39d</td><td >1000</td><td >1</td><td >19</td></tr></table><br></br><h3><div>Visuals in Ind-Renda_per_Capita:</div></h3><table border='1px' cellpadding='1'><tr ><td >Visual Type</td><td >Title</td><td >X</td><td >Y</td><td >Z</td><td >Width</td><td >Height</td><td >Name</td><td >tabOrder</td><td >VisualIndex</td><td >PageIndex</td></tr><tr ><td >lineChart</td><td ></td><td >0</td><td >0</td><td >0</td><td >320</td><td >140</td><td >18e3fc8dc800e26aaa5b</td><td ></td><td >0</td><td >20</td></tr><tr ><td >card</td><td ></td><td >0</td><td >0</td><td >1000</td><td >320</td><td >50</td><td >dbe6c77570bda7473960</td><td >1000</td><td >1</td><td >20</td></tr><tr ><td >areaChart</td><td >'Renda per Capita'</td><td >0</td><td >50</td><td >2000</td><td >320</td><td >190</td><td >ef90e11b7329aa55a283</td><td >2000</td><td >2</td><td >20</td></tr><tr ><td >card</td><td ></td><td >245</td><td >25</td><td >3000</td><td >75</td><td >25</td><td >bcdb5f43cd9b4b253332</td><td >3000</td><td >3</td><td >20</td></tr></table><br></br><h3><div>Visuals in 10_ind_Receita-Despesas:</div></h3><table border='1px' cellpadding='1'><tr ><td >Visual Type</td><td >Title</td><td >X</td><td >Y</td><td >Z</td><td >Width</td><td >Height</td><td >Name</td><td >tabOrder</td><td >VisualIndex</td><td >PageIndex</td></tr><tr ><td >shape</td><td >'Média'</td><td >154,184529356943</td><td >0</td><td >0</td><td >53,1444547996272</td><td >23,6197576887232</td><td >127238f8e3304f98150a</td><td ></td><td >0</td><td >21</td></tr><tr ><td >pivotTable</td><td ></td><td >0</td><td >0</td><td >1000</td><td >207,32898415657</td><td >385,133271202237</td><td >3bd8e223b5aa2b808975</td><td >1000</td><td >1</td><td >21</td></tr></table><br></br><h3><div>Visuals in Ind-Receita-Despesa:</div></h3><table border='1px' cellpadding='1'><tr ><td >Visual Type</td><td >Title</td><td >X</td><td >Y</td><td >Z</td><td >Width</td><td >Height</td><td >Name</td><td >tabOrder</td><td >VisualIndex</td><td >PageIndex</td></tr><tr ><td >lineChart</td><td ></td><td >0</td><td >0</td><td >0</td><td >320</td><td >140</td><td >59d7e31a1a4caacb87ac</td><td ></td><td >0</td><td >22</td></tr><tr ><td >card</td><td ></td><td >0</td><td >0</td><td >1000</td><td >320</td><td >50</td><td >e72f7f27214ac09114e4</td><td >1000</td><td >1</td><td >22</td></tr><tr ><td >areaChart</td><td >'Receita - Despesa'</td><td >0</td><td >50</td><td >2000</td><td >320</td><td >190</td><td >f657adda81aa1064b0e9</td><td >2000</td><td >2</td><td >22</td></tr><tr ><td >card</td><td ></td><td >245</td><td >25</td><td >3000</td><td >75</td><td >25</td><td >51e0fd5e876acbdc68fd</td><td >3000</td><td >3</td><td >22</td></tr></table><br></br><h3><div>Visuals in ind_Estupro:</div></h3><table border='1px' cellpadding='1'><tr ><td >Visual Type</td><td >Title</td><td >X</td><td >Y</td><td >Z</td><td >Width</td><td >Height</td><td >Name</td><td >tabOrder</td><td >VisualIndex</td><td >PageIndex</td></tr><tr ><td >areaChart</td><td ></td><td >0</td><td >0</td><td >23000</td><td >320</td><td >120</td><td >e9174f381e353c61acee</td><td ></td><td >0</td><td >23</td></tr></table><br></br><h3><div>Visuals in Ind-Homicidios:</div></h3><table border='1px' cellpadding='1'><tr ><td >Visual Type</td><td >Title</td><td >X</td><td >Y</td><td >Z</td><td >Width</td><td >Height</td><td >Name</td><td >tabOrder</td><td >VisualIndex</td><td >PageIndex</td></tr><tr ><td >lineChart</td><td ></td><td >0</td><td >0</td><td >0</td><td >320</td><td >140</td><td >9e58843aaec8c844813d</td><td ></td><td >0</td><td >24</td></tr><tr ><td >card</td><td ></td><td >0</td><td >0</td><td >1000</td><td >320</td><td >50</td><td >bf9a5c950d8671b6ecdc</td><td >1000</td><td >1</td><td >24</td></tr><tr ><td >lineChart</td><td >'Homicidio por 100.000 Habitantes'</td><td >0</td><td >50</td><td >2000</td><td >320</td><td >190</td><td >866662841027349c033b</td><td >2000</td><td >2</td><td >24</td></tr><tr ><td >card</td><td ></td><td >245</td><td >25</td><td >3000</td><td >75</td><td >25</td><td >5de68d5a60d8e0868d95</td><td >3000</td><td >3</td><td >24</td></tr><tr ><td >areaChart</td><td ></td><td >0</td><td >240</td><td >3001</td><td >320</td><td >120</td><td >cedbbff98324ca36af24</td><td >3001</td><td >4</td><td >24</td></tr><tr ><td >areaChart</td><td ></td><td >0</td><td >360</td><td >3002</td><td >320</td><td >120</td><td >069d2533cad1f1bdaa3d</td><td >3002</td><td >5</td><td >24</td></tr><tr ><td >areaChart</td><td ></td><td >0</td><td >480</td><td >3003</td><td >320</td><td >120</td><td >8a8edf22c7224292a61b</td><td >3003</td><td >6</td><td >24</td></tr></table><br></br><h3><div>Visuals in 10_ind_Homicidios:</div></h3><table border='1px' cellpadding='1'><tr ><td >Visual Type</td><td >Title</td><td >X</td><td >Y</td><td >Z</td><td >Width</td><td >Height</td><td >Name</td><td >tabOrder</td><td >VisualIndex</td><td >PageIndex</td></tr><tr ><td >shape</td><td >'Média'</td><td >160,297620485566</td><td >0</td><td >0</td><td >46,7534726416234</td><td >23,3767363208117</td><td >fe028c0383135edd9a24</td><td ></td><td >0</td><td >25</td></tr><tr ><td >pivotTable</td><td ></td><td >0</td><td >0</td><td >1000</td><td >207,32898415657</td><td >385,133271202237</td><td >8fb43e4dd8bee67055ad</td><td >1000</td><td >1</td><td >25</td></tr></table><br></br><h3><div>Visuals in Ind-Tx-População:</div></h3><table border='1px' cellpadding='1'><tr ><td >Visual Type</td><td >Title</td><td >X</td><td >Y</td><td >Z</td><td >Width</td><td >Height</td><td >Name</td><td >tabOrder</td><td >VisualIndex</td><td >PageIndex</td></tr><tr ><td >lineChart</td><td ></td><td >0</td><td >0</td><td >0</td><td >320</td><td >140</td><td >fd8b9efbce6ad0e75080</td><td ></td><td >0</td><td >26</td></tr><tr ><td >card</td><td ></td><td >0</td><td >0</td><td >1000</td><td >320</td><td >50</td><td >8b676bc432193ad02384</td><td >1000</td><td >1</td><td >26</td></tr><tr ><td >lineChart</td><td >'População'</td><td >0</td><td >50</td><td >2000</td><td >320</td><td >190</td><td >b91af72c05e3340842e1</td><td >2000</td><td >2</td><td >26</td></tr></table><br></br><h3><div>Visuals in Ajuda:</div></h3><table border='1px' cellpadding='1'><tr ><td >Visual Type</td><td >Title</td><td >X</td><td >Y</td><td >Z</td><td >Width</td><td >Height</td><td >Name</td><td >tabOrder</td><td >VisualIndex</td><td >PageIndex</td></tr><tr ><td >image</td><td ></td><td >423,456790123457</td><td >208,641975308642</td><td >0</td><td >355,555555555556</td><td >355,555555555556</td><td >be5f6a98a38411049812</td><td ></td><td >0</td><td >27</td></tr><tr ><td ></td><td ></td><td >408,591133004926</td><td >69,939022766609</td><td >1000</td><td >241,719078684596</td><td >200,001065104513</td><td >434a0823f94a8a11e28d</td><td >1000</td><td >1</td><td >27</td></tr><tr ><td >shape</td><td ></td><td >65,0310211689522</td><td >92,0250299560644</td><td >3000</td><td >52,7610171748103</td><td >107,976035148449</td><td >a93368ba43431d2b4031</td><td >3000</td><td >2</td><td >27</td></tr><tr ><td >shape</td><td ></td><td >0</td><td >0</td><td >0</td><td >241,719078684596</td><td >92,0250299560644</td><td >b480f59d426e07911760</td><td >2000</td><td >3</td><td >27</td></tr><tr ><td ></td><td ></td><td >614,727200106511</td><td >103,068033550792</td><td >2000</td><td >492,027160165091</td><td >260,124084675809</td><td >96dd7c2065db6b2cd219</td><td >2000</td><td >4</td><td >27</td></tr><tr ><td >shape</td><td ></td><td >0</td><td >0</td><td >4000</td><td >100,614032751964</td><td >260,124084675809</td><td >b50527972b120f5b2ab0</td><td >4000</td><td >5</td><td >27</td></tr><tr ><td >shape</td><td ></td><td >25,767008387698</td><td >42,9450139794967</td><td >1000</td><td >466,260151777393</td><td >89,5710291572361</td><td >6ce9fd18376e6817cf49</td><td ></td><td >6</td><td >27</td></tr><tr ><td ></td><td ></td><td >703,071228864332</td><td >293,253095459992</td><td >3000</td><td >548,469178538144</td><td >132,516043136733</td><td >03cd62c3dbdac07ee35b</td><td >3000</td><td >7</td><td >27</td></tr><tr ><td >shape</td><td ></td><td >0</td><td >0</td><td >5000</td><td >250,308081480495</td><td >132,516043136733</td><td >b4bf8b7e9992c7eef22f</td><td >6000</td><td >8</td><td >27</td></tr><tr ><td >shape</td><td ></td><td >110,430035947277</td><td >20,8590067900412</td><td >12000</td><td >438,039142590867</td><td >111,657036346692</td><td >bcc8ff89596cfdf1e0e6</td><td >5000</td><td >9</td><td >27</td></tr><tr ><td ></td><td ></td><td >492,027160165091</td><td >458,898149380908</td><td >4000</td><td >739,881240846758</td><td >121,473039542005</td><td >230ae1091b0be44c497a</td><td >4000</td><td >10</td><td >27</td></tr><tr ><td >shape</td><td ></td><td >301,842098255891</td><td >7,36200239648514</td><td >12500</td><td >438,039142590867</td><td >111,657036346692</td><td >a97ffe013856be2bc97f</td><td >7000</td><td >11</td><td >27</td></tr><tr ><td >shape</td><td ></td><td >0</td><td >0</td><td >9000</td><td >501,843163360405</td><td >121,473039542005</td><td >5b2fcacb07c87bb8f046</td><td >10000</td><td >12</td><td >27</td></tr><tr ><td ></td><td ></td><td >74,8470243642657</td><td >328,836107043004</td><td >6000</td><td >365,646119025429</td><td >148,467048329117</td><td >648a23802f94459d91df</td><td >5000</td><td >13</td><td >27</td></tr><tr ><td >shape</td><td ></td><td >0</td><td >0</td><td >13000</td><td >285,891093063507</td><td >148,467048329117</td><td >f8de1df8d4b22e349d9a</td><td >9000</td><td >14</td><td >27</td></tr><tr ><td >shape</td><td ></td><td >267,486087072294</td><td >3,6810011982426</td><td >11000</td><td >98,1600319531354</td><td >107,976035148449</td><td >6dd39feb4a108f2a7ef5</td><td >11001</td><td >15</td><td >27</td></tr><tr ><td ></td><td ></td><td >94,4790307548928</td><td >414,726135001997</td><td >5000</td><td >468,714152576222</td><td >260,124084675809</td><td >d6f785f0ad528d85507a</td><td >6000</td><td >16</td><td >27</td></tr><tr ><td >shape</td><td ></td><td >368,100119824258</td><td >0</td><td >10000</td><td >100,614032751964</td><td >260,124084675809</td><td >377900b161ce53e19179</td><td >11000</td><td >17</td><td >27</td></tr><tr ><td >shape</td><td ></td><td >0</td><td >110,430035947277</td><td >8500</td><td >438,039142590867</td><td >111,657036346692</td><td >dce9cd082255b6c80109</td><td >8000</td><td >18</td><td >27</td></tr><tr ><td ></td><td ></td><td >0</td><td >180,369058713886</td><td >7000</td><td >873,624284382905</td><td >165,645053920916</td><td >5f2275220c69bd7373b0</td><td >7000</td><td >19</td><td >27</td></tr><tr ><td >shape</td><td ></td><td >0</td><td >28,2210091865264</td><td >1000</td><td >873,624284382905</td><td >137,42404473439</td><td >4d96114b665564b28923</td><td >1000</td><td >20</td><td >27</td></tr><tr ><td >shape</td><td ></td><td >49,0800159765677</td><td >0</td><td >2000</td><td >359,511117028358</td><td >132,516043136733</td><td >f119da74bacbc0f48b57</td><td ></td><td >21</td><td >27</td></tr><tr ><td >actionButton</td><td ></td><td >17,1780055917987</td><td >14,7240047929703</td><td >8000</td><td >125,154040740248</td><td >72,3930235654374</td><td >fca1ed11f8a31aa5d158</td><td >8000</td><td >22</td><td >27</td></tr></table><hr></hr><br></br><h3><div>List of Bookmarks:</div></h3><br></br><table border='1px' cellpadding='1'><tr ><td >DisplayName</td><td >Page Name</td><td >Index</td><td >Name</td></tr><tr ><td >Mapa Cor</td><td >bdfdd909be07ee7d2010</td><td >0</td><td >ec8feb9420e8498f1b3f</td></tr><tr ><td >Mapa Brasil</td><td >bdfdd909be07ee7d2010</td><td >1</td><td >b077fd7733ff809f55bc</td></tr><tr ><td >Ind-Tx-Desemprego</td><td >eca910775c92bbb0287b</td><td >2</td><td >37677aa4f9e9634c3f44</td></tr><tr ><td >Ind_Pobreza</td><td >eca910775c92bbb0287b</td><td >3</td><td >ad0ffaeaf068ce8cb541</td></tr><tr ><td >PIB Histórico</td><td >6ea80f050c9559f7ac7c</td><td >4</td><td >52347f95a2165fade427</td></tr><tr ><td >Melhores Atual</td><td >616d1f36ac3be55214a0</td><td >5</td><td >d4d82dced06e6748d71e</td></tr><tr ><td >Melhores Tendências</td><td >616d1f36ac3be55214a0</td><td >6</td><td >2dcca13d995de6551584</td></tr></table><hr></hr><br></br><h3><div>List of all Columns/Fields/Measures/Expressions Used in Visuals:</div></h3><br></br><table border='1px' cellpadding='1' cellspacing='1'><tr ><td >Name</td><td >Table Name</td><td >Aggregation</td><td >Expression</td><td >VisualIndex</td><td >PageIndex</td></tr><tr ><td >id_map</td><td ></td><td ></td><td >UFs(ibge).id_map</td><td >0</td><td >0</td></tr><tr ><td >Valor PIB Estadual </td><td >FIN_PIB Estadual</td><td >CountNonNull</td><td >CountNonNull(FIN_PIB Estadual.Valor PIB Estadual / 1000)</td><td >0</td><td >0</td></tr><tr ><td >Área do território </td><td ></td><td ></td><td >Min(Territorios(ipea).Área do território (em km²))</td><td >1</td><td >0</td></tr><tr ><td >Habitante por Km2</td><td ></td><td ></td><td >Territorios(ipea).Habitante por Km2</td><td >2</td><td >0</td></tr><tr ><td >Valor PIB Estadual</td><td >PIB Estadual</td><td >Sum</td><td >Sum(PIB Estadual.Valor PIB Estadual)</td><td >3</td><td >0</td></tr><tr ><td ></td><td >PIB Estadual</td><td >CountNonNull</td><td >CountNonNull(PIB Estadual.% Relação PIB Brasil)</td><td >4</td><td >0</td></tr><tr ><td >Selecionado_UF_ou_Brasil</td><td ></td><td ></td><td >UFs(ibge).Selecionado_UF_ou_Brasil</td><td >5</td><td >0</td></tr><tr ><td >Foto</td><td ></td><td ></td><td >Governadores (wikimedia).Foto</td><td >8</td><td >0</td></tr><tr ><td >Nome</td><td ></td><td ></td><td >Min(Governadores (wikimedia).Nome)</td><td >9</td><td >0</td></tr><tr ><td >No governo desde </td><td ></td><td ></td><td >Sum(Governadores (wikimedia).No governo desde )</td><td >10</td><td >0</td></tr><tr ><td >Partido</td><td ></td><td ></td><td >Min(Governadores (wikimedia).Partido)</td><td >11</td><td >0</td></tr><tr ><td >Ano</td><td >SOC_Indice de Gini</td><td ></td><td >SOC_Indice de Gini.Ano</td><td >13</td><td >0</td></tr><tr ><td >Tendencia_Gini_Valorizado</td><td >SOC_Indice de Gini</td><td ></td><td >SOC_Indice de Gini.Tendencia_Gini_Valorizado</td><td >13</td><td >0</td></tr><tr ><td >Gini mais recente</td><td >SOC_Indice de Gini</td><td ></td><td >SOC_Indice de Gini.Gini mais recente</td><td >13</td><td >0</td></tr><tr ><td >Tendencia_IDH_Valorizado</td><td >SOC_IDHM_por_UF</td><td ></td><td >SOC_IDHM_por_UF.Tendencia_IDH_Valorizado</td><td >14</td><td >0</td></tr><tr ><td >Ano</td><td >SOC_IDHM_por_UF</td><td ></td><td >SOC_IDHM_por_UF.Ano</td><td >14</td><td >0</td></tr><tr ><td >IDH mais recente</td><td >SOC_IDHM_por_UF</td><td ></td><td >SOC_IDHM_por_UF.IDH mais recente</td><td >14</td><td >0</td></tr><tr ><td >Taxa Pobreza Atual</td><td >SOC_Taxa de Pobreza</td><td ></td><td >SOC_Taxa de Pobreza.Taxa Pobreza Atual</td><td >15</td><td >0</td></tr><tr ><td >Ano</td><td >SOC_Taxa de Pobreza</td><td ></td><td >SOC_Taxa de Pobreza.Ano</td><td >15</td><td >0</td></tr><tr ><td >Tendencia_Pobreza_Valorizado</td><td >SOC_Taxa de Pobreza</td><td ></td><td >SOC_Taxa de Pobreza.Tendencia_Pobreza_Valorizado</td><td >15</td><td >0</td></tr><tr ><td >Tendencia_Desemprego_Valorizado</td><td ></td><td ></td><td >SOC_Taxa de desemprego por Ano (IBGE - Continua).Tendencia_Desemprego_Valorizado</td><td >16</td><td >0</td></tr><tr ><td >Ano</td><td ></td><td ></td><td >SOC_Taxa de desemprego por Ano (IBGE - Continua).Ano</td><td >16</td><td >0</td></tr><tr ><td >Taxa Desemprego Atual Anual</td><td ></td><td ></td><td >SOC_Taxa de desemprego por Ano (IBGE - Continua).Taxa Desemprego Atual Anual</td><td >16</td><td >0</td></tr><tr ><td >Ano</td><td > pessoas com 15 anos ou mais</td><td ></td><td >SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais.Ano</td><td >17</td><td >0</td></tr><tr ><td >Taxa Analfabetismo mais recente</td><td > pessoas com 15 anos ou mais</td><td ></td><td >SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais.Taxa Analfabetismo mais recente</td><td >17</td><td >0</td></tr><tr ><td >Tendencia_Analfabetismo_Valorizado</td><td > pessoas com 15 anos ou mais</td><td ></td><td >SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais.Tendencia_Analfabetismo_Valorizado</td><td >17</td><td >0</td></tr><tr ><td >Tendencia_</td><td > Alunos na Rede Pública</td><td ></td><td >EDU_% Alunos na Rede Pública.Tendencia_%Alunos_Valorizado</td><td >18</td><td >0</td></tr><tr ><td ></td><td > Alunos na Rede Pública</td><td ></td><td >EDU_% Alunos na Rede Pública.% Alunos mais recente</td><td >18</td><td >0</td></tr><tr ><td >Ano</td><td > Alunos na Rede Pública</td><td ></td><td >EDU_% Alunos na Rede Pública.Ano</td><td >18</td><td >0</td></tr><tr ><td >Tendencia_</td><td ></td><td ></td><td >SAU_Estabelecimento de saude(DataSUS).Tendencia_#Estabelecimentos_Saude_Valorizado</td><td >19</td><td >0</td></tr><tr ><td ></td><td ></td><td ></td><td >SAU_Estabelecimento de saude(DataSUS).# Estabelecimentos mais recente</td><td >19</td><td >0</td></tr><tr ><td >Ano</td><td ></td><td ></td><td >SAU_Estabelecimento de saude(DataSUS).Ano</td><td >19</td><td >0</td></tr><tr ><td >Tendência_</td><td >SAU_Medicos por 10k Habitantes</td><td ></td><td >SAU_Medicos por 10k Habitantes.Tendência_#_Medicos</td><td >20</td><td >0</td></tr><tr ><td ></td><td >SAU_Medicos por 10k Habitantes</td><td ></td><td >SAU_Medicos por 10k Habitantes.# Medicos mais recente</td><td >20</td><td >0</td></tr><tr ><td >Ano</td><td >SAU_Medicos por 10k Habitantes</td><td ></td><td >SAU_Medicos por 10k Habitantes.Ano</td><td >20</td><td >0</td></tr><tr ><td ></td><td >FIN_PIB Estadual</td><td >Sum</td><td >Sum(FIN_PIB Estadual.% Relação PIB Brasil)</td><td >21</td><td >0</td></tr><tr ><td ></td><td >FIN_PIB Estadual</td><td >Sum</td><td >Sum(FIN_PIB Estadual.% Relação PIB Brasil)</td><td >22</td><td >0</td></tr><tr ><td >Indice</td><td >Raking</td><td >Min</td><td >Min(Raking.Indice)</td><td >23</td><td >0</td></tr><tr ><td >Tendencia_Homicidios_Valorizado</td><td >SEG_Homicidios por 100k Habitantes</td><td ></td><td >SEG_Homicidios por 100k Habitantes.Tendencia_Homicidios_Valorizado</td><td >24</td><td >0</td></tr><tr ><td >Ano</td><td >SEG_Homicidios por 100k Habitantes</td><td ></td><td >SEG_Homicidios por 100k Habitantes.Ano</td><td >24</td><td >0</td></tr><tr ><td >Taxa Homicidios Atual Anual</td><td >SEG_Homicidios por 100k Habitantes</td><td ></td><td >SEG_Homicidios por 100k Habitantes.Taxa Homicidios Atual Anual</td><td >24</td><td >0</td></tr><tr ><td >Tendencia_RendaPerCapita_Valorizado</td><td ></td><td ></td><td >FIN_Renda per capita (Atlas DH - Pnad Contínua/A).Tendencia_RendaPerCapita_Valorizado</td><td >25</td><td >0</td></tr><tr ><td >Ano</td><td ></td><td ></td><td >FIN_Renda per capita (Atlas DH - Pnad Contínua/A).Ano</td><td >25</td><td >0</td></tr><tr ><td >Renda per Capita mais recente</td><td ></td><td ></td><td >FIN_Renda per capita (Atlas DH - Pnad Contínua/A).Renda per Capita mais recente</td><td >25</td><td >0</td></tr><tr ><td >Posicao</td><td ></td><td ></td><td >UFs(ibge).Posicao</td><td >26</td><td >0</td></tr><tr ><td >Pontuação dos Estados</td><td ></td><td ></td><td >UFs(ibge).Pontuação dos Estados</td><td >26</td><td >0</td></tr><tr ><td >Partido</td><td ></td><td ></td><td >Min(Governadores (wikimedia).Partido)</td><td >26</td><td >0</td></tr><tr ><td >Sigla_UF</td><td ></td><td ></td><td >UFs(ibge).Sigla_UF</td><td >26</td><td >0</td></tr><tr ><td >Ano</td><td >FIN_PIB Estadual</td><td ></td><td >FIN_PIB Estadual.Ano</td><td >27</td><td >0</td></tr><tr ><td >Tendencia_PIB_Valorizado</td><td >FIN_PIB Estadual</td><td ></td><td >FIN_PIB Estadual.Tendencia_PIB_Valorizado</td><td >27</td><td >0</td></tr><tr ><td ></td><td >FIN_PIB Estadual</td><td >CountNonNull</td><td >CountNonNull(FIN_PIB Estadual.% Relação PIB Brasil)</td><td >27</td><td >0</td></tr><tr ><td >Tendencia_RendaEstadual_Valorizado</td><td >FIN_Receitas x Despesas</td><td ></td><td >FIN_Receitas x Despesas.Tendencia_RendaEstadual_Valorizado</td><td >28</td><td >0</td></tr><tr ><td >Receita</td><td >FIN_Receitas x Despesas</td><td ></td><td >FIN_Receitas x Despesas.Receita-Despesa mais recente</td><td >28</td><td >0</td></tr><tr ><td >Ano</td><td >FIN_Receitas x Despesas</td><td ></td><td >FIN_Receitas x Despesas.Ano</td><td >28</td><td >0</td></tr><tr ><td ></td><td >FIN_PIB Estadual</td><td >Sum</td><td >Sum(FIN_PIB Estadual.% Relação PIB Brasil)</td><td >29</td><td >0</td></tr><tr ><td ></td><td >FIN_PIB Estadual</td><td >Sum</td><td >Sum(FIN_PIB Estadual.% Relação PIB Brasil)</td><td >30</td><td >0</td></tr><tr ><td ></td><td >FIN_PIB Estadual</td><td >Sum</td><td >Sum(FIN_PIB Estadual.% Relação PIB Brasil)</td><td >31</td><td >0</td></tr><tr ><td ></td><td >FIN_PIB Estadual</td><td >Sum</td><td >Sum(FIN_PIB Estadual.% Relação PIB Brasil)</td><td >32</td><td >0</td></tr><tr ><td ></td><td >FIN_PIB Estadual</td><td >Sum</td><td >Sum(FIN_PIB Estadual.% Relação PIB Brasil)</td><td >33</td><td >0</td></tr><tr ><td ></td><td >FIN_PIB Estadual</td><td >Sum</td><td >Sum(FIN_PIB Estadual.% Relação PIB Brasil)</td><td >34</td><td >0</td></tr><tr ><td ></td><td >FIN_PIB Estadual</td><td >Sum</td><td >Sum(FIN_PIB Estadual.% Relação PIB Brasil)</td><td >35</td><td >0</td></tr><tr ><td ></td><td >FIN_PIB Estadual</td><td >Sum</td><td >Sum(FIN_PIB Estadual.% Relação PIB Brasil)</td><td >36</td><td >0</td></tr><tr ><td ></td><td >FIN_PIB Estadual</td><td >Sum</td><td >Sum(FIN_PIB Estadual.% Relação PIB Brasil)</td><td >37</td><td >0</td></tr><tr ><td ></td><td >FIN_PIB Estadual</td><td >Sum</td><td >Sum(FIN_PIB Estadual.% Relação PIB Brasil)</td><td >38</td><td >0</td></tr><tr ><td >Indice</td><td >Raking</td><td >Min</td><td >Min(Raking.Indice)</td><td >39</td><td >0</td></tr><tr ><td >Indice</td><td >Raking</td><td >Min</td><td >Min(Raking.Indice)</td><td >40</td><td >0</td></tr><tr ><td >Indice</td><td >Raking</td><td >Min</td><td >Min(Raking.Indice)</td><td >41</td><td >0</td></tr><tr ><td >Indice</td><td >Raking</td><td >Min</td><td >Min(Raking.Indice)</td><td >42</td><td >0</td></tr><tr ><td >Indice</td><td >Raking</td><td >Min</td><td >Min(Raking.Indice)</td><td >43</td><td >0</td></tr><tr ><td >Sigla_UF</td><td >Indices Ano mais recente</td><td ></td><td >Indices Ano mais recente.Sigla_UF</td><td >47</td><td >0</td></tr><tr ><td >Posicao Geral mais recente</td><td >Indices Ano mais recente</td><td ></td><td >Indices Ano mais recente.Posicao Geral mais recente</td><td >47</td><td >0</td></tr><tr ><td >Pontuação Total</td><td >Indices Ano mais recente</td><td ></td><td >Indices Ano mais recente.Pontuação Total</td><td >47</td><td >0</td></tr><tr ><td >Partido</td><td >Indices Ano mais recente</td><td >Min</td><td >Min(Indices Ano mais recente.Partido)</td><td >47</td><td >0</td></tr><tr ><td >Sigla_UF</td><td >Indices Ano mais recente</td><td ></td><td >Indices Ano mais recente.Sigla_UF</td><td >47</td><td >0</td></tr><tr ><td >Posição entre os Estados</td><td >Indices Ano mais recente</td><td >Min</td><td >Min(Indices Ano mais recente.Posição entre os Estados)</td><td >48</td><td >0</td></tr><tr ><td >Posição entre os Estados</td><td >Indices Ano mais recente</td><td >Min</td><td >Min(Indices Ano mais recente.Posição entre os Estados)</td><td >49</td><td >0</td></tr><tr ><td >Posição entre os Estados</td><td >Indices Ano mais recente</td><td >Min</td><td >Min(Indices Ano mais recente.Posição entre os Estados)</td><td >50</td><td >0</td></tr><tr ><td >Posição entre os Estados</td><td >Indices Ano mais recente</td><td >Min</td><td >Min(Indices Ano mais recente.Posição entre os Estados)</td><td >51</td><td >0</td></tr><tr ><td >Posição entre os Estados</td><td >Indices Ano mais recente</td><td >Min</td><td >Min(Indices Ano mais recente.Posição entre os Estados)</td><td >52</td><td >0</td></tr><tr ><td >Posição entre os Estados</td><td >Indices Ano mais recente</td><td >Min</td><td >Min(Indices Ano mais recente.Posição entre os Estados)</td><td >53</td><td >0</td></tr><tr ><td >Posição entre os Estados</td><td >Indices Ano mais recente</td><td >Min</td><td >Min(Indices Ano mais recente.Posição entre os Estados)</td><td >54</td><td >0</td></tr><tr ><td >Posição entre os Estados</td><td >Indices Ano mais recente</td><td >Min</td><td >Min(Indices Ano mais recente.Posição entre os Estados)</td><td >55</td><td >0</td></tr><tr ><td >Posição entre os Estados</td><td >Indices Ano mais recente</td><td >Min</td><td >Min(Indices Ano mais recente.Posição entre os Estados)</td><td >56</td><td >0</td></tr><tr ><td >Posição entre os Estados</td><td >Indices Ano mais recente</td><td >Min</td><td >Min(Indices Ano mais recente.Posição entre os Estados)</td><td >57</td><td >0</td></tr><tr ><td >Posição entre os Estados</td><td >Indices Ano mais recente</td><td >Min</td><td >Min(Indices Ano mais recente.Posição entre os Estados)</td><td >58</td><td >0</td></tr><tr ><td >Relacao ao Território Nacional</td><td ></td><td ></td><td >Max(Territorios(ipea).Relacao ao Território Nacional)</td><td >59</td><td >0</td></tr><tr ><td >Indice</td><td >Raking</td><td >Min</td><td >Min(Raking.Indice)</td><td >60</td><td >0</td></tr><tr ><td >Indice</td><td >Raking</td><td >Min</td><td >Min(Raking.Indice)</td><td >61</td><td >0</td></tr><tr ><td >Indice</td><td >Raking</td><td >Min</td><td >Min(Raking.Indice)</td><td >62</td><td >0</td></tr><tr ><td >Indice</td><td >Raking</td><td >Min</td><td >Min(Raking.Indice)</td><td >63</td><td >0</td></tr><tr ><td >Indice</td><td >Raking</td><td >Min</td><td >Min(Raking.Indice)</td><td >64</td><td >0</td></tr><tr ><td >nome_UF</td><td ></td><td ></td><td >UFs(ibge).nome_UF</td><td >0</td><td >1</td></tr><tr ><td >Valor</td><td >PIB Estadual histórico</td><td ></td><td >PIB Estadual histórico.Valor</td><td >0</td><td >1</td></tr><tr ><td >Atributo</td><td >PIB Estadual histórico</td><td ></td><td >PIB Estadual histórico.Atributo</td><td >0</td><td >1</td></tr><tr ><td >DAX Colour</td><td >PIB Estadual histórico</td><td ></td><td >PIB Estadual histórico.DAX Colour</td><td >0</td><td >1</td></tr><tr ><td >DAX Colour</td><td >PIB Estadual histórico</td><td ></td><td >PIB Estadual histórico.DAX Colour</td><td >2</td><td >1</td></tr><tr ><td >Atributo</td><td >PIB Estadual histórico</td><td ></td><td >PIB Estadual histórico.Atributo</td><td >2</td><td >1</td></tr><tr ><td >Valor</td><td >PIB Estadual histórico</td><td >Sum</td><td >Sum(PIB Estadual histórico.Valor)</td><td >2</td><td >1</td></tr><tr ><td >Estado</td><td >PIB Estadual histórico</td><td ></td><td >PIB Estadual histórico.Estado</td><td >2</td><td >1</td></tr><tr ><td >Ano</td><td >PIB Estadual</td><td ></td><td >PIB Estadual.Ano</td><td >0</td><td >2</td></tr><tr ><td >Valor PIB Estadual</td><td >FIN_PIB Estadual</td><td >CountNonNull</td><td >CountNonNull(FIN_PIB Estadual.Valor PIB Estadual)</td><td >0</td><td >2</td></tr><tr ><td ></td><td >PIB Estadual</td><td >Sum</td><td >Sum(PIB Estadual.% Relação PIB Brasil)</td><td >0</td><td >2</td></tr><tr ><td ></td><td >PIB Estadual</td><td >Sum</td><td >Sum(PIB Estadual.% Relação PIB Brasil)</td><td >0</td><td >2</td></tr><tr ><td >Sigla_UF</td><td >Indices Ano mais recente</td><td ></td><td >Indices Ano mais recente.Sigla_UF</td><td >0</td><td >3</td></tr><tr ><td >Valor</td><td >Indices Ano mais recente</td><td >Sum</td><td >Sum(Indices Ano mais recente.Valor)</td><td >0</td><td >3</td></tr><tr ><td >Ano</td><td ></td><td ></td><td >Taxa de desemprego (IBGE - Continua).Trimestres.Variation.Hierarquia de datas.Ano</td><td >0</td><td >4</td></tr><tr ><td >Taxa Desemprego </td><td ></td><td ></td><td >Sum(Taxa de desemprego (IBGE - Continua).Taxa Desemprego %)</td><td >0</td><td >4</td></tr><tr ><td >Ano</td><td >SOC_Indice de Gini</td><td ></td><td >SOC_Indice de Gini.Ano</td><td >1</td><td >4</td></tr><tr ><td >Indice de Gini</td><td >SOC_Indice de Gini</td><td >Sum</td><td >Sum(SOC_Indice de Gini.Indice de Gini)</td><td >1</td><td >4</td></tr><tr ><td >Linha de Tendência</td><td >SOC_Indice de Gini</td><td ></td><td >SOC_Indice de Gini.Linha de Tendência</td><td >1</td><td >4</td></tr><tr ><td >Selecionado_UF_ou_Brasil</td><td ></td><td ></td><td >UFs(ibge).Selecionado_UF_ou_Brasil</td><td >2</td><td >4</td></tr><tr ><td >Tendência Gini</td><td >SOC_Indice de Gini</td><td ></td><td >SOC_Indice de Gini.Tendência Gini</td><td >3</td><td >4</td></tr><tr ><td >Sigla_UF</td><td >Indices Ano mais recente</td><td ></td><td >Indices Ano mais recente.Sigla_UF</td><td >0</td><td >5</td></tr><tr ><td >Valor</td><td >Indices Ano mais recente</td><td >Sum</td><td >Sum(Indices Ano mais recente.Valor)</td><td >0</td><td >5</td></tr><tr ><td >Ano</td><td ></td><td ></td><td >Taxa de desemprego (IBGE - Continua).Trimestres.Variation.Hierarquia de datas.Ano</td><td >0</td><td >6</td></tr><tr ><td >Taxa Desemprego </td><td ></td><td ></td><td >Sum(Taxa de desemprego (IBGE - Continua).Taxa Desemprego %)</td><td >0</td><td >6</td></tr><tr ><td >Ano</td><td >Taxa de Probreza</td><td ></td><td >Taxa de Probreza.Ano</td><td >1</td><td >6</td></tr><tr ><td >Taxa de Pobreza</td><td >Taxa de Probreza</td><td >Sum</td><td >Sum(Taxa de Probreza.Taxa de Pobreza)</td><td >1</td><td >6</td></tr><tr ><td >Linha de Tendência Pobreza</td><td >SOC_Taxa de Pobreza</td><td ></td><td >SOC_Taxa de Pobreza.Linha de Tendência Pobreza</td><td >1</td><td >6</td></tr><tr ><td >nome_UF</td><td ></td><td ></td><td >Min(UFs(ibge).nome_UF)</td><td >2</td><td >6</td></tr><tr ><td >Tendência TX Pobreza</td><td >SOC_Taxa de Pobreza</td><td ></td><td >SOC_Taxa de Pobreza.Tendência TX Pobreza</td><td >3</td><td >6</td></tr><tr ><td >Sigla_UF</td><td >Indices Ano mais recente</td><td ></td><td >Indices Ano mais recente.Sigla_UF</td><td >0</td><td >7</td></tr><tr ><td >Valor</td><td >Indices Ano mais recente</td><td >Sum</td><td >Sum(Indices Ano mais recente.Valor)</td><td >0</td><td >7</td></tr><tr ><td >Ano</td><td ></td><td ></td><td >Taxa de desemprego (IBGE - Continua).Trimestres.Variation.Hierarquia de datas.Ano</td><td >0</td><td >8</td></tr><tr ><td >Taxa Desemprego </td><td ></td><td ></td><td >Sum(Taxa de desemprego (IBGE - Continua).Taxa Desemprego %)</td><td >0</td><td >8</td></tr><tr ><td >Ano</td><td >IDHM_por_UF</td><td ></td><td >IDHM_por_UF.Ano</td><td >1</td><td >8</td></tr><tr ><td >IDHM_UF</td><td >IDHM_por_UF</td><td >Max</td><td >Max(IDHM_por_UF.IDHM_UF)</td><td >1</td><td >8</td></tr><tr ><td >Linha de Tendência IDH</td><td >SOC_IDHM_por_UF</td><td ></td><td >SOC_IDHM_por_UF.Linha de Tendência IDH</td><td >1</td><td >8</td></tr><tr ><td >nome_UF</td><td ></td><td ></td><td >Min(UFs(ibge).nome_UF)</td><td >2</td><td >8</td></tr><tr ><td >Tendência UF</td><td >SOC_IDHM_por_UF</td><td ></td><td >SOC_IDHM_por_UF.Tendência UF</td><td >3</td><td >8</td></tr><tr ><td >Sigla_UF</td><td >Indices Ano mais recente</td><td ></td><td >Indices Ano mais recente.Sigla_UF</td><td >0</td><td >9</td></tr><tr ><td >Valor</td><td >Indices Ano mais recente</td><td >Sum</td><td >Sum(Indices Ano mais recente.Valor)</td><td >0</td><td >9</td></tr><tr ><td >Ano</td><td ></td><td ></td><td >Taxa de desemprego (IBGE - Continua).Trimestres.Variation.Hierarquia de datas.Ano</td><td >0</td><td >10</td></tr><tr ><td >Taxa Desemprego </td><td ></td><td ></td><td >Sum(Taxa de desemprego (IBGE - Continua).Taxa Desemprego %)</td><td >0</td><td >10</td></tr><tr ><td >nome_UF</td><td ></td><td ></td><td >Min(UFs(ibge).nome_UF)</td><td >1</td><td >10</td></tr><tr ><td >Ano</td><td ></td><td ></td><td >SOC_Taxa de desemprego por Ano (IBGE - Continua).Ano</td><td >2</td><td >10</td></tr><tr ><td >Taxa Desemprego Atual Anual</td><td ></td><td ></td><td >SOC_Taxa de desemprego por Ano (IBGE - Continua).Taxa Desemprego Atual Anual</td><td >2</td><td >10</td></tr><tr ><td >Linha de Tendência Desemprego</td><td ></td><td ></td><td >SOC_Taxa de desemprego por Ano (IBGE - Continua).Linha de Tendência Desemprego</td><td >2</td><td >10</td></tr><tr ><td >Tendência TX Desemprego por ano</td><td ></td><td ></td><td >SOC_Taxa de desemprego por Ano (IBGE - Continua).Tendência TX Desemprego por ano</td><td >3</td><td >10</td></tr><tr ><td >Sigla_UF</td><td >Indices Ano mais recente</td><td ></td><td >Indices Ano mais recente.Sigla_UF</td><td >0</td><td >11</td></tr><tr ><td >Valor</td><td >Indices Ano mais recente</td><td >Sum</td><td >Sum(Indices Ano mais recente.Valor)</td><td >0</td><td >11</td></tr><tr ><td >Ano</td><td ></td><td ></td><td >Taxa de desemprego (IBGE - Continua).Trimestres.Variation.Hierarquia de datas.Ano</td><td >0</td><td >12</td></tr><tr ><td >Taxa Desemprego </td><td ></td><td ></td><td >Sum(Taxa de desemprego (IBGE - Continua).Taxa Desemprego %)</td><td >0</td><td >12</td></tr><tr ><td >nome_UF</td><td ></td><td ></td><td >Min(UFs(ibge).nome_UF)</td><td >1</td><td >12</td></tr><tr ><td >Ano</td><td > pessoas com 15 anos ou mais</td><td ></td><td >Taxa de analfabetismo - pessoas com 15 anos ou mais.Ano</td><td >2</td><td >12</td></tr><tr ><td >Taxa Analfabetismo</td><td > pessoas com 15 anos ou mais</td><td ></td><td >Sum(Taxa de analfabetismo - pessoas com 15 anos ou mais.Taxa Analfabetismo)</td><td >2</td><td >12</td></tr><tr ><td >Linha de Tendência Analfa</td><td > pessoas com 15 anos ou mais</td><td ></td><td >SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais.Linha de Tendência Analfa</td><td >2</td><td >12</td></tr><tr ><td >Tendência_TX_Analfa</td><td > pessoas com 15 anos ou mais</td><td ></td><td >SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais.Tendência_TX_Analfa</td><td >3</td><td >12</td></tr><tr ><td >Sigla_UF</td><td >Indices Ano mais recente</td><td ></td><td >Indices Ano mais recente.Sigla_UF</td><td >1</td><td >13</td></tr><tr ><td >Valor</td><td >Indices Ano mais recente</td><td >Sum</td><td >Sum(Indices Ano mais recente.Valor)</td><td >1</td><td >13</td></tr><tr ><td >Ano</td><td ></td><td ></td><td >Taxa de desemprego (IBGE - Continua).Trimestres.Variation.Hierarquia de datas.Ano</td><td >0</td><td >14</td></tr><tr ><td >Taxa Desemprego </td><td ></td><td ></td><td >Sum(Taxa de desemprego (IBGE - Continua).Taxa Desemprego %)</td><td >0</td><td >14</td></tr><tr ><td >nome_UF</td><td ></td><td ></td><td >Min(UFs(ibge).nome_UF)</td><td >1</td><td >14</td></tr><tr ><td >Ano</td><td > Alunos na Rede Pública</td><td ></td><td >% Alunos na Rede Pública.Ano</td><td >2</td><td >14</td></tr><tr ><td >Valor</td><td > Alunos na Rede Pública</td><td ></td><td >EDU_% Alunos na Rede Pública.Valor%Total</td><td >2</td><td >14</td></tr><tr ><td >Linha de Tendência </td><td > Alunos na Rede Pública</td><td ></td><td >EDU_% Alunos na Rede Pública.Linha de Tendência % Alunos</td><td >2</td><td >14</td></tr><tr ><td >Tendência</td><td > Alunos na Rede Pública</td><td ></td><td >EDU_% Alunos na Rede Pública.Tendência</td><td >3</td><td >14</td></tr><tr ><td >Sigla_UF</td><td >Indices Ano mais recente</td><td ></td><td >Indices Ano mais recente.Sigla_UF</td><td >1</td><td >15</td></tr><tr ><td >Valor</td><td >Indices Ano mais recente</td><td >Sum</td><td >Sum(Indices Ano mais recente.Valor)</td><td >1</td><td >15</td></tr><tr ><td >Ano</td><td ></td><td ></td><td >Taxa de desemprego (IBGE - Continua).Trimestres.Variation.Hierarquia de datas.Ano</td><td >0</td><td >16</td></tr><tr ><td >Taxa Desemprego </td><td ></td><td ></td><td >Sum(Taxa de desemprego (IBGE - Continua).Taxa Desemprego %)</td><td >0</td><td >16</td></tr><tr ><td >nome_UF</td><td ></td><td ></td><td >Min(UFs(ibge).nome_UF)</td><td >1</td><td >16</td></tr><tr ><td >Ano</td><td ></td><td ></td><td >Estabelecimento de saude(DataSUS).Ano</td><td >2</td><td >16</td></tr><tr ><td >Qtd Estabelecimentos de saude</td><td ></td><td ></td><td >Sum(Estabelecimento de saude(DataSUS).Qtd Estabelecimentos de saude)</td><td >2</td><td >16</td></tr><tr ><td >Linha de Tendência Estab Saude</td><td ></td><td ></td><td >SAU_Estabelecimento de saude(DataSUS).Linha de Tendência Estab Saude</td><td >2</td><td >16</td></tr><tr ><td >Tendência_</td><td ></td><td ></td><td >SAU_Estabelecimento de saude(DataSUS).Tendência_#_Estabelecimentos</td><td >3</td><td >16</td></tr><tr ><td >Sigla_UF</td><td >Indices Ano mais recente</td><td ></td><td >Indices Ano mais recente.Sigla_UF</td><td >1</td><td >17</td></tr><tr ><td >Valor</td><td >Indices Ano mais recente</td><td >Sum</td><td >Sum(Indices Ano mais recente.Valor)</td><td >1</td><td >17</td></tr><tr ><td >Ano</td><td ></td><td ></td><td >Taxa de desemprego (IBGE - Continua).Trimestres.Variation.Hierarquia de datas.Ano</td><td >0</td><td >18</td></tr><tr ><td >Taxa Desemprego </td><td ></td><td ></td><td >Sum(Taxa de desemprego (IBGE - Continua).Taxa Desemprego %)</td><td >0</td><td >18</td></tr><tr ><td >nome_UF</td><td ></td><td ></td><td >Min(UFs(ibge).nome_UF)</td><td >1</td><td >18</td></tr><tr ><td >000 Habitantes</td><td ></td><td ></td><td >CountNonNull(Medicos por 10k Habitantes.Médicos por 10.000 Habitantes)</td><td >2</td><td >18</td></tr><tr ><td >Ano</td><td >Medicos por 10k Habitantes</td><td ></td><td >Medicos por 10k Habitantes.Ano</td><td >2</td><td >18</td></tr><tr ><td >Linha de Tendência Medicos</td><td >SAU_Medicos por 10k Habitantes</td><td ></td><td >SAU_Medicos por 10k Habitantes.Linha de Tendência Medicos</td><td >2</td><td >18</td></tr><tr ><td >Tendência Médicos</td><td >SAU_Medicos por 10k Habitantes</td><td ></td><td >SAU_Medicos por 10k Habitantes.Tendência Médicos</td><td >3</td><td >18</td></tr><tr ><td >Sigla_UF</td><td >Indices Ano mais recente</td><td ></td><td >Indices Ano mais recente.Sigla_UF</td><td >0</td><td >19</td></tr><tr ><td >Valor</td><td >Indices Ano mais recente</td><td >Sum</td><td >Sum(Indices Ano mais recente.Valor)</td><td >0</td><td >19</td></tr><tr ><td >Ano</td><td ></td><td ></td><td >Taxa de desemprego (IBGE - Continua).Trimestres.Variation.Hierarquia de datas.Ano</td><td >0</td><td >20</td></tr><tr ><td >Taxa Desemprego </td><td ></td><td ></td><td >Sum(Taxa de desemprego (IBGE - Continua).Taxa Desemprego %)</td><td >0</td><td >20</td></tr><tr ><td >nome_UF</td><td ></td><td ></td><td >Min(UFs(ibge).nome_UF)</td><td >1</td><td >20</td></tr><tr ><td >Ano</td><td ></td><td ></td><td >FIN_Renda per capita (Atlas DH - Pnad Contínua/A).Ano</td><td >2</td><td >20</td></tr><tr ><td >Renda per Capita</td><td ></td><td ></td><td >CountNonNull(FIN_Renda per capita (Atlas DH - Pnad Contínua/A).Renda per Capita)</td><td >2</td><td >20</td></tr><tr ><td >Linha de Tendência Renda</td><td ></td><td ></td><td >FIN_Renda per capita (Atlas DH - Pnad Contínua/A).Linha de Tendência Renda</td><td >2</td><td >20</td></tr><tr ><td >Tendência_Renda_per_capita</td><td ></td><td ></td><td >FIN_Renda per capita (Atlas DH - Pnad Contínua/A).Tendência_Renda_per_capita</td><td >3</td><td >20</td></tr><tr ><td >Sigla_UF</td><td >Indices Ano mais recente</td><td ></td><td >Indices Ano mais recente.Sigla_UF</td><td >1</td><td >21</td></tr><tr ><td >Valor</td><td >Indices Ano mais recente</td><td >Sum</td><td >Sum(Indices Ano mais recente.Valor)</td><td >1</td><td >21</td></tr><tr ><td >Ano</td><td ></td><td ></td><td >Taxa de desemprego (IBGE - Continua).Trimestres.Variation.Hierarquia de datas.Ano</td><td >0</td><td >22</td></tr><tr ><td >Taxa Desemprego </td><td ></td><td ></td><td >Sum(Taxa de desemprego (IBGE - Continua).Taxa Desemprego %)</td><td >0</td><td >22</td></tr><tr ><td >nome_UF</td><td ></td><td ></td><td >Min(UFs(ibge).nome_UF)</td><td >1</td><td >22</td></tr><tr ><td >Ano</td><td >FIN_Receitas x Despesas</td><td ></td><td >FIN_Receitas x Despesas.Ano</td><td >2</td><td >22</td></tr><tr ><td >Receita </td><td >FIN_Receitas x Despesas</td><td >CountNonNull</td><td >CountNonNull(FIN_Receitas x Despesas.Receita - Despesa)</td><td >2</td><td >22</td></tr><tr ><td >Linha de Tendência Receita </td><td >FIN_Receitas x Despesas</td><td ></td><td >FIN_Receitas x Despesas.Linha de Tendência Receita - Despesa</td><td >2</td><td >22</td></tr><tr ><td >Tendência_Receita_Despesa</td><td >FIN_Receitas x Despesas</td><td ></td><td >FIN_Receitas x Despesas.Tendência_Receita_Despesa</td><td >3</td><td >22</td></tr><tr ><td >Ano</td><td >Ocorrências Criminais</td><td ></td><td >Ocorrências Criminais.Ano</td><td >0</td><td >23</td></tr><tr ><td >Vítimas</td><td >Ocorrências Criminais</td><td >Sum</td><td >Sum(Ocorrências Criminais.Vítimas)</td><td >0</td><td >23</td></tr><tr ><td >Ano</td><td ></td><td ></td><td >Taxa de desemprego (IBGE - Continua).Trimestres.Variation.Hierarquia de datas.Ano</td><td >0</td><td >24</td></tr><tr ><td >Taxa Desemprego </td><td ></td><td ></td><td >Sum(Taxa de desemprego (IBGE - Continua).Taxa Desemprego %)</td><td >0</td><td >24</td></tr><tr ><td >nome_UF</td><td ></td><td ></td><td >Min(UFs(ibge).nome_UF)</td><td >1</td><td >24</td></tr><tr ><td >Ano</td><td >Homicidios por 100k Habitantes</td><td ></td><td >Homicidios por 100k Habitantes.Ano</td><td >2</td><td >24</td></tr><tr ><td >000 Habitantes</td><td ></td><td ></td><td >Sum(Homicidios por 100k Habitantes.Tx Homicidio por 100.000 Habitantes)</td><td >2</td><td >24</td></tr><tr ><td >Linha de Tendência Homicidios</td><td >SEG_Homicidios por 100k Habitantes</td><td ></td><td >SEG_Homicidios por 100k Habitantes.Linha de Tendência Homicidios</td><td >2</td><td >24</td></tr><tr ><td >Tendência homicídios</td><td >SEG_Homicidios por 100k Habitantes</td><td ></td><td >SEG_Homicidios por 100k Habitantes.Tendência homicídios</td><td >3</td><td >24</td></tr><tr ><td >Ano</td><td >Ocorrências Criminais</td><td ></td><td >Ocorrências Criminais.Ano</td><td >4</td><td >24</td></tr><tr ><td >Vítimas</td><td >Ocorrências Criminais</td><td >Sum</td><td >Sum(Ocorrências Criminais.Vítimas)</td><td >4</td><td >24</td></tr><tr ><td >Ano</td><td >Ocorrências Criminais</td><td ></td><td >Ocorrências Criminais.Ano</td><td >5</td><td >24</td></tr><tr ><td >Vítimas</td><td >Ocorrências Criminais</td><td >Sum</td><td >Sum(Ocorrências Criminais.Vítimas)</td><td >5</td><td >24</td></tr><tr ><td >Ano</td><td >Ocorrências Criminais</td><td ></td><td >Ocorrências Criminais.Ano</td><td >6</td><td >24</td></tr><tr ><td >Vítimas</td><td >Ocorrências Criminais</td><td >Sum</td><td >Sum(Ocorrências Criminais.Vítimas)</td><td >6</td><td >24</td></tr><tr ><td >Sigla_UF</td><td >Indices Ano mais recente</td><td ></td><td >Indices Ano mais recente.Sigla_UF</td><td >1</td><td >25</td></tr><tr ><td >Valor</td><td >Indices Ano mais recente</td><td >Sum</td><td >Sum(Indices Ano mais recente.Valor)</td><td >1</td><td >25</td></tr><tr ><td >Ano</td><td ></td><td ></td><td >Taxa de desemprego (IBGE - Continua).Trimestres.Variation.Hierarquia de datas.Ano</td><td >0</td><td >26</td></tr><tr ><td >Taxa Desemprego </td><td ></td><td ></td><td >Sum(Taxa de desemprego (IBGE - Continua).Taxa Desemprego %)</td><td >0</td><td >26</td></tr><tr ><td >nome_UF</td><td ></td><td ></td><td >Min(UFs(ibge).nome_UF)</td><td >1</td><td >26</td></tr><tr ><td >Ano</td><td >Populacao Historica UFs</td><td ></td><td >Populacao Historica UFs.Ano</td><td >2</td><td >26</td></tr><tr ><td >População</td><td >Populacao Historica UFs</td><td >Sum</td><td >Sum(Populacao Historica UFs.População)</td><td >2</td><td >26</td></tr><tr ><td >Sigla_UF</td><td ></td><td ></td><td >UFs(ibge).Sigla_UF</td><td >2</td><td >26</td></tr></table><hr></hr><br></br><h3><div>List of Tables Used in Visuals:</div></h3><br></br><table border='1px' cellpadding='1' cellspacing='1'><tr ><td >Name</td></tr><tr ><td >UFs(ibge)</td></tr><tr ><td >FIN_PIB Estadual</td></tr><tr ><td >Populacao Historica UFs</td></tr><tr ><td >Territorios(ipea)</td></tr><tr ><td >FIN_PIB Brasil</td></tr><tr ><td >Governadores (wikimedia)</td></tr><tr ><td >SOC_Indice de Gini</td></tr><tr ><td >SOC_IDHM_por_UF</td></tr><tr ><td >SOC_Taxa de Pobreza</td></tr><tr ><td >SOC_Taxa de desemprego por Ano (IBGE - Continua)</td></tr><tr ><td >SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais</td></tr><tr ><td >EDU_% Alunos na Rede Pública</td></tr><tr ><td >SAU_Estabelecimento de saude(DataSUS)</td></tr><tr ><td >SAU_Medicos por 10k Habitantes</td></tr><tr ><td >Raking</td></tr><tr ><td >SEG_Homicidios por 100k Habitantes</td></tr><tr ><td >FIN_Renda per capita (Atlas DH - Pnad Contínua/A)</td></tr><tr ><td >FIN_Receitas x Despesas</td></tr><tr ><td >Indices Ano mais recente</td></tr><tr ><td >PIB Estadual histórico</td></tr><tr ><td >SOC_Taxa de desemprego (IBGE - Continua)</td></tr><tr ><td >Indices_mais_recentes</td></tr><tr ><td >SEG_Ocorrências Criminais</td></tr></table><hr></hr><br></br><h3><div>List of Columns Not Used in Visuals:</div></h3><br></br><table border='1px' cellpadding='1' cellspacing='1'><tr ><td >Name</td><td >Table Name</td><td >State</td><td >Data Category</td><td >Data Type</td><td >Description</td><td >Display Folder</td><td >Error Message</td><td >Format String</td><td >Is Hidden</td><td >Modified Time</td><td >Structure Modified Time</td><td >Sort by Column</td><td >Summarize By</td><td >Type</td><td >Expression</td></tr><tr ><td >UF_id</td><td >UFs(ibge)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Sigla_UF</td><td >UFs(ibge)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >nome_UF</td><td >UFs(ibge)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >regiao_id</td><td >UFs(ibge)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >País</td><td >UFs(ibge)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >id_map</td><td >UFs(ibge)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Sigla_UF</td><td >Populacao Historica UFs</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Sigla_UF</td><td >FIN_PIB Estadual</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Valor PIB Estadual / 1000</td><td >FIN_PIB Estadual</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >PIB Brasil no ano</td><td >FIN_PIB Estadual</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >% Relação PIB Brasil</td><td >FIN_PIB Estadual</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Tipo Regiao</td><td >Territorios(ipea)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Municipio_id</td><td >Territorios(ipea)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Município</td><td >Territorios(ipea)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >TERNOMEPADRAO</td><td >Territorios(ipea)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >CAPITAL</td><td >Territorios(ipea)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Área do território (em km²)</td><td >Territorios(ipea)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Relacao ao Território Nacional</td><td >Territorios(ipea)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Sigla_UF</td><td >Territorios(ipea)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Sigla_UF</td><td >SOC_IDHM_por_UF</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >IDHM_UF</td><td >SOC_IDHM_por_UF</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >.Ano</td><td >SOC_IDHM_por_UF</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Ano_Data</td><td >SOC_IDHM_por_UF</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Sigla_UF</td><td >EDU_% Alunos na Rede Pública</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Ano</td><td >EDU_% Alunos na Rede Pública</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Valor(%)</td><td >EDU_% Alunos na Rede Pública</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Ano_Data</td><td >EDU_% Alunos na Rede Pública</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Nome Fanta - Nome</td><td >Governadores (wikimedia)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Nome_UF</td><td >Governadores (wikimedia)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Nome</td><td >Governadores (wikimedia)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Mandato</td><td >Governadores (wikimedia)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Sigla_UF</td><td >Governadores (wikimedia)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Foto</td><td >Governadores (wikimedia)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Partido</td><td >Governadores (wikimedia)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >No governo desde </td><td >Governadores (wikimedia)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Sigla_UF</td><td >SOC_Taxa de desemprego (IBGE - Continua)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Codigo</td><td >SOC_Taxa de desemprego (IBGE - Continua)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Periodo</td><td >SOC_Taxa de desemprego (IBGE - Continua)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Taxa Desemprego %</td><td >SOC_Taxa de desemprego (IBGE - Continua)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Trimestres</td><td >SOC_Taxa de desemprego (IBGE - Continua)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Ano</td><td >SOC_Taxa de desemprego (IBGE - Continua)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Sigla_UF</td><td >SAU_Estabelecimento de saude(DataSUS)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Ano</td><td >SAU_Estabelecimento de saude(DataSUS)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Num_Estabelecimentos_Saude</td><td >SAU_Estabelecimento de saude(DataSUS)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Sigla_UF</td><td >FIN_PIB Brasil</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Ano</td><td >FIN_PIB Brasil</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Valor PIB Brasil em trilhao</td><td >FIN_PIB Brasil</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Valor PIB Brasil</td><td >FIN_PIB Brasil</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Sigla_UF</td><td >SAU_Medicos por 10k Habitantes</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Médicos por 10.000 Habitantes</td><td >SAU_Medicos por 10k Habitantes</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Sigla_UF</td><td >SEG_Homicidios por 100k Habitantes</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Tx Homicidio por 100.000 Habitantes</td><td >SEG_Homicidios por 100k Habitantes</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Sigla_UF</td><td >SOC_Taxa de Pobreza</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Taxa de Pobreza</td><td >SOC_Taxa de Pobreza</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Sigla_UF</td><td >FIN_Receita corrente - receita bruta - estadual</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Ano</td><td >FIN_Receita corrente - receita bruta - estadual</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Receita bruta</td><td >FIN_Receita corrente - receita bruta - estadual</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Indice</td><td >FIN_Receita corrente - receita bruta - estadual</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Sigla_UF</td><td >FIN_Despesas correntes - estadual</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Ano</td><td >FIN_Despesas correntes - estadual</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Despesas Correntes</td><td >FIN_Despesas correntes - estadual</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Indice</td><td >FIN_Despesas correntes - estadual</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Sigla_UF</td><td >FIN_Renda per capita (Atlas DH - Pnad Contínua/A)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Ano</td><td >FIN_Renda per capita (Atlas DH - Pnad Contínua/A)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Renda per Capita</td><td >FIN_Renda per capita (Atlas DH - Pnad Contínua/A)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Sigla_UF</td><td >FIN_Receitas x Despesas</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Receita bruta</td><td >FIN_Receitas x Despesas</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Despesas Correntes</td><td >FIN_Receitas x Despesas</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Receita - Despesa</td><td >FIN_Receitas x Despesas</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Sigla_UF</td><td >SOC_Indice de Gini</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Meta</td><td >SOC_Indice de Gini</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Ano</td><td >SEG_Ocorrências Criminais</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Tipo Crime</td><td >SEG_Ocorrências Criminais</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Vítimas</td><td >SEG_Ocorrências Criminais</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Sigla_UF</td><td >SEG_Ocorrências Criminais</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Date</td><td >Calendario</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Ano</td><td >Calendario</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Mês</td><td >Calendario</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Dia</td><td >Calendario</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Nome do Mês</td><td >Calendario</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Trimestre</td><td >Calendario</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Sigla_UF</td><td >PIB Estadual histórico</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Area</td><td >Raking</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Observações</td><td >Raking</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Referencias</td><td >Raking</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Sigla_UF</td><td >Indices_mais_recentes</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Ano</td><td >Indices_mais_recentes</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Indice</td><td >Indices_mais_recentes</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Valor</td><td >Indices_mais_recentes</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Indices_Ranking</td><td >Indices_mais_recentes</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Area</td><td >Indices_mais_recentes</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Ano Filtragem Indices</td><td >Ano Filtragem Indices</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Sigla_UF</td><td >SOC_Taxa de desemprego por Ano (IBGE - Continua)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Ano</td><td >SOC_Taxa de desemprego por Ano (IBGE - Continua)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Taxa Desemprego média anual %</td><td >SOC_Taxa de desemprego por Ano (IBGE - Continua)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Sigla_UF</td><td >SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Ano</td><td >SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Taxa Analfabetismo</td><td >SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Sigla_UF</td><td >Indices_agregados_classificados</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Ano</td><td >Indices_agregados_classificados</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Indice</td><td >Indices_agregados_classificados</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Valor</td><td >Indices_agregados_classificados</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Indices_Ranking</td><td >Indices_agregados_classificados</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Area</td><td >Indices_agregados_classificados</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Eh Ano mais recente</td><td >Indices_agregados_classificados</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Ano</td><td >Indices Ano mais recente</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Indice</td><td >Indices Ano mais recente</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Indices_Ranking</td><td >Indices Ano mais recente</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Area</td><td >Indices Ano mais recente</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Eh Ano mais recente</td><td >Indices Ano mais recente</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Classificacao</td><td >Indices Ano mais recente</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Posicao Normalizado</td><td >Indices Ano mais recente</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Pontuação Ponderada</td><td >Indices Ano mais recente</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Estado_Selecionado</td><td >UFs(ibge)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Ver_se__UF_Filtrada</td><td >UFs(ibge)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Ver_se__UF_Filtrada_Ind</td><td >UFs(ibge)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Selecionado_UF_ou_Brasil</td><td >UFs(ibge)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Ver_se__UF_Filtrada_Painel1</td><td >UFs(ibge)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Pontuação Média dos Estados</td><td >UFs(ibge)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Posicao</td><td >UFs(ibge)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Med_População</td><td >Populacao Historica UFs</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Tendência PIB</td><td >FIN_PIB Estadual</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Media</td><td >FIN_PIB Estadual</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >ultimo_valor</td><td >FIN_PIB Estadual</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >% Relação PIB mais recente</td><td >FIN_PIB Estadual</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Habitante por Km2</td><td >Territorios(ipea)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >soma_km2</td><td >Territorios(ipea)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >IDH Médio</td><td >SOC_IDHM_por_UF</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Média %</td><td >EDU_% Alunos na Rede Pública</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Tendência</td><td >EDU_% Alunos na Rede Pública</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Valor%Total</td><td >EDU_% Alunos na Rede Pública</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >% Alunos mais recente</td><td >EDU_% Alunos na Rede Pública</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Tendencia_%Alunos_Valorizado</td><td >EDU_% Alunos na Rede Pública</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Linha de Tendência % Alunos</td><td >EDU_% Alunos na Rede Pública</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >TX Desemprego Médio</td><td >SOC_Taxa de desemprego (IBGE - Continua)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Tendência TX Desemprego</td><td >SOC_Taxa de desemprego (IBGE - Continua)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Taxa Desemprego Atual</td><td >SOC_Taxa de desemprego (IBGE - Continua)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Tendência_#_Estabelecimentos</td><td >SAU_Estabelecimento de saude(DataSUS)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Média Estabelecimentos</td><td >SAU_Estabelecimento de saude(DataSUS)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td ># Estabelecimentos mais recente</td><td >SAU_Estabelecimento de saude(DataSUS)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Tendencia_#Estabelecimentos_Saude_Valorizado</td><td >SAU_Estabelecimento de saude(DataSUS)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Linha de Tendência Estab Saude</td><td >SAU_Estabelecimento de saude(DataSUS)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Médicos Média</td><td >SAU_Medicos por 10k Habitantes</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td ># Medicos mais recente</td><td >SAU_Medicos por 10k Habitantes</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Tendência_#_Medicos</td><td >SAU_Medicos por 10k Habitantes</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Taxa Homicídio Médio</td><td >SEG_Homicidios por 100k Habitantes</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td ># Homicidios por 100k mais recente</td><td >SEG_Homicidios por 100k Habitantes</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Tendência_#_Homicidios</td><td >SEG_Homicidios por 100k Habitantes</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >TX Pobreza Médio</td><td >SOC_Taxa de Pobreza</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Renda per Capita mais recente</td><td >FIN_Renda per capita (Atlas DH - Pnad Contínua/A)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Tendência_Renda_per_capita</td><td >FIN_Renda per capita (Atlas DH - Pnad Contínua/A)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Tendência_#_RendaperCapita</td><td >FIN_Renda per capita (Atlas DH - Pnad Contínua/A)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Tendencia_RendaPerCapita_Valorizado</td><td >FIN_Renda per capita (Atlas DH - Pnad Contínua/A)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Linha de Tendência Renda</td><td >FIN_Renda per capita (Atlas DH - Pnad Contínua/A)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Receita-Despesa mais recente</td><td >FIN_Receitas x Despesas</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Linha de Tendência Receita - Despesa</td><td >FIN_Receitas x Despesas</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Gini Médio</td><td >SOC_Indice de Gini</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Linha de Tendência Gini</td><td >SOC_Indice de Gini</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Média do Crime</td><td >SEG_Ocorrências Criminais</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Tendência Crime</td><td >SEG_Ocorrências Criminais</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Ano_Select</td><td >Calendario</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Ano_mais_recente_Indice</td><td >Indices_mais_recentes</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Tendência TX Desemprego por ano</td><td >SOC_Taxa de desemprego por Ano (IBGE - Continua)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >TX Desemprego Médio anual</td><td >SOC_Taxa de desemprego por Ano (IBGE - Continua)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Taxa Desemprego Atual Anual</td><td >SOC_Taxa de desemprego por Ano (IBGE - Continua)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Tendencia_Desemprego_Valorizado</td><td >SOC_Taxa de desemprego por Ano (IBGE - Continua)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Linha de Tendência Desemprego</td><td >SOC_Taxa de desemprego por Ano (IBGE - Continua)</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Taxa Analfabetismo mais recente</td><td >SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Tendencia_Analfabetismo_Valorizado</td><td >SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Linha de Tendência Analfa</td><td >SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Tendência_TX_Analfa</td><td >SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr><tr ><td >Soma_Posições_Ponderadas</td><td >Indices Ano mais recente</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >MEASURE</td><td ></td></tr></table><hr></hr><br></br><h3><div>List of Tables Not Used in Visuals:</div></h3><br></br><table border='1px' cellpadding='1' cellspacing='1'><tr ><td >Name</td></tr><tr ><td >FIN_Receita corrente - receita bruta - estadual</td></tr><tr ><td >FIN_Despesas correntes - estadual</td></tr><tr ><td >Calendario</td></tr><tr ><td >Ano Filtragem Indices</td></tr><tr ><td >Indices_agregados_classificados</td></tr></table><h1><div>------------------******   Model    ******---------------------</div></h1><br></br><h2><div>Model: Visao Estados V 3.0</div></h2><br></br><hr></hr><br></br><h3><div>List of Tables:</div></h3><br></br><table border='1px' cellpadding='1' cellspacing='1'><tr ><td >Name</td><td >Description</td><td >Storage Mode</td><td >Source</td><td >Is Hidden</td></tr><tr ><td >UFs(ibge)</td><td ></td><td >Import</td><td ><pre>let
    Fonte = Json.Document(Web.Contents("https://servicodados.ibge.gov.br/api/v1/localidades/regioes/1|2|3|4|5/estados")),
    #"Convertido para Tabela" = Table.FromList(Fonte, Splitter.SplitByNothing(), null, null, ExtraValues.Error),
    #"Column1 Expandido" = Table.ExpandRecordColumn(#"Convertido para Tabela", "Column1", {"id", "sigla", "nome", "regiao"}, {"id", "sigla", "nome", "regiao"}),
    #"regiao Expandido" = Table.ExpandRecordColumn(#"Column1 Expandido", "regiao", {"id", "sigla", "nome"}, {"regiao.id", "regiao.sigla", "regiao.nome"}),
    #"Tipo Alterado" = Table.TransformColumnTypes(#"regiao Expandido",{{"id", Int64.Type}, {"sigla", type text}, {"nome", type text}, {"regiao.id", Int64.Type}, {"regiao.sigla", type text}, {"regiao.nome", type text}}),
    #"Colunas Renomeadas" = Table.RenameColumns(#"Tipo Alterado",{{"id", "UF_id"}, {"nome", "nome_UF"}, {"regiao.id", "regiao_id"}}),
    #"Colunas Removidas" = Table.RemoveColumns(#"Colunas Renomeadas",{"regiao.sigla", "regiao.nome"}),
    #"Colunas Renomeadas1" = Table.RenameColumns(#"Colunas Removidas",{{"sigla", "Sigla_UF"}}),
    #"Personalização Adicionada" = Table.AddColumn(#"Colunas Renomeadas1", "Pais", each "Brasil"),
    #"Colunas Renomeadas2" = Table.RenameColumns(#"Personalização Adicionada",{{"Pais", "País"}}),
    #"Coluna Condicional Adicionada" = Table.AddColumn(#"Colunas Renomeadas2", "id_map", each if [nome_UF] = "Rondônia" then "Rondonia" else if [nome_UF] = "Pará" then "Para" else if [nome_UF] = "Amapá" then "Amapa" else if [nome_UF] = "Maranhão" then "Maranhao" else if [nome_UF] = "Piauí" then "Piaui" else if [nome_UF] = "Ceará" then "Ceara" else if [nome_UF] = "Paraíba" then "Paraiba" else if [nome_UF] = "Espírito Santo" then "Espirito Santo" else if [nome_UF] = "São Paulo" then "Sao Paulo" else if [nome_UF] = "Paraná" then "Parana" else if [nome_UF] = "Goiás" then "Goias" else [nome_UF], type text)
in
    #"Coluna Condicional Adicionada"</pre></td><td >False</td></tr><tr ><td >Populacao Historica UFs</td><td ></td><td >Import</td><td ><pre>let
    Fonte = Web.BrowserContents("http://www.ipeadata.gov.br/ExibeSerieR.aspx?stub=1&serid=1678536198&MINDATA=1990&MAXDATA=2025&TNIVID=2&TPAID=1&module=R"),
    #"Tabela extraída de HTML" = Html.Table(Fonte, {{"Column1", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(1)"}, {"Column2", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(2)"}, {"Column3", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(3)"}, {"Column4", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(4)"}, {"Column5", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(5)"}, {"Column6", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(6)"}, {"Column7", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(7)"}, {"Column8", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(8)"}}, [RowSelector="TABLE[id='grd_DXMainTable'] > * > TR"]),
    #"Tipo Alterado" = Table.TransformColumnTypes(#"Tabela extraída de HTML",{{"Column1", type text}, {"Column2", type text}, {"Column3", Int64.Type}, {"Column4", Int64.Type}, {"Column5", Int64.Type}, {"Column6", Int64.Type}, {"Column7", Int64.Type}, {"Column8", Int64.Type}}),
    #"Cabeçalhos Promovidos" = Table.PromoteHeaders(#"Tipo Alterado", [PromoteAllScalars=true]),
    #"Tipo Alterado1" = Table.TransformColumnTypes(#"Cabeçalhos Promovidos",{{"Sigla", type text}, {"Estado", type text}, {"1991", Int64.Type}, {"1996", Int64.Type}, {"2000", Int64.Type}, {"2007", Int64.Type}, {"2010", Int64.Type}, {"2022", Int64.Type}}),
    #"Somente as Colunas Selecionadas Foram Transformadas em Linhas" = Table.Unpivot(#"Tipo Alterado1", {"1991", "1996", "2000", "2007", "2010", "2022"}, "Atributo", "Valor"),
    #"Colunas Renomeadas" = Table.RenameColumns(#"Somente as Colunas Selecionadas Foram Transformadas em Linhas",{{"Atributo", "Ano"}, {"Valor", "População"}, {"Sigla", "Sigla_UF"}}),
    #"Tipo Alterado2" = Table.TransformColumnTypes(#"Colunas Renomeadas",{{"População", Int64.Type}, {"Ano", Int64.Type}}),
    #"Colunas Removidas" = Table.RemoveColumns(#"Tipo Alterado2",{"Estado"})
in
    #"Colunas Removidas"</pre></td><td >False</td></tr><tr ><td >FIN_PIB Estadual</td><td ></td><td >Import</td><td ><pre>let
    Fonte = Web.BrowserContents("http://www.ipeadata.gov.br/ExibeSerieR.aspx?stub=1&serid=1540855420&MINDATA=2014&MAXDATA=2025&TNIVID=2&TPAID=1&module=R"),
    #"Tabela extraída de HTML" = Html.Table(Fonte, {{"Column1", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(1)"}, {"Column2", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(2)"}, {"Column3", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(3)"}, {"Column4", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(4)"}, {"Column5", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(5)"}, {"Column6", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(6)"}, {"Column7", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(7)"}, {"Column8", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(8)"}, {"Column9", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(9)"}, {"Column10", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(10)"}}, [RowSelector="TABLE[id='grd_DXMainTable'] > * > TR"]),
    #"Tipo Alterado" = Table.TransformColumnTypes(#"Tabela extraída de HTML",{{"Column1", type text}, {"Column2", type text}, {"Column3", Int64.Type}, {"Column4", Int64.Type}, {"Column5", Int64.Type}, {"Column6", Int64.Type}, {"Column7", Int64.Type}, {"Column8", Int64.Type}, {"Column9", Int64.Type}, {"Column10", Int64.Type}}),
    #"Cabeçalhos Promovidos" = Table.PromoteHeaders(#"Tipo Alterado", [PromoteAllScalars=true]),
    #"Tipo Alterado1" = Table.TransformColumnTypes(#"Cabeçalhos Promovidos",{{"Sigla", type text}, {"Estado", type text}, {"2014", Int64.Type}, {"2015", Int64.Type}, {"2016", Int64.Type}, {"2017", Int64.Type}, {"2018", Int64.Type}, {"2019", Int64.Type}, {"2020", Int64.Type}, {"2021", Int64.Type}}),
    #"Somente as Colunas Selecionadas Foram Transformadas em Linhas" = Table.Unpivot(#"Tipo Alterado1", {"2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021"}, "Atributo", "Valor"),
    #"Colunas Renomeadas" = Table.RenameColumns(#"Somente as Colunas Selecionadas Foram Transformadas em Linhas",{{"Atributo", "Ano"}, {"Valor", "Valor PIB Estadual"}, {"Sigla", "Sigla_UF"}}),
    #"Tipo Alterado2" = Table.TransformColumnTypes(#"Colunas Renomeadas",{{"Ano", Int64.Type}}),
    #"Colunas Renomeadas1" = Table.RenameColumns(#"Tipo Alterado2",{{"Valor PIB Estadual", "Valor PIB Estadual / 1000"}}),
    #"Colunas Removidas" = Table.RemoveColumns(#"Colunas Renomeadas1",{"Estado"})
in
    #"Colunas Removidas"</pre></td><td >False</td></tr><tr ><td >Territorios(ipea)</td><td ></td><td >Import</td><td ><pre>let
    Fonte = Json.Document(Web.Contents("http://www.ipeadata.gov.br/api/odata4/Territorios")),
    #"Convertido para Tabela" = Table.FromRecords({Fonte}),
    #"value Expandido" = Table.ExpandListColumn(#"Convertido para Tabela", "value"),
    #"value Expandido1" = Table.ExpandRecordColumn(#"value Expandido", "value", {"NIVNOME", "TERCODIGO", "TERNOME", "TERNOMEPADRAO", "TERCAPITAL", "TERAREA", "NIVAMC"}, {"value.NIVNOME", "value.TERCODIGO", "value.TERNOME", "value.TERNOMEPADRAO", "value.TERCAPITAL", "value.TERAREA", "value.NIVAMC"}),
    #"Colunas Renomeadas" = Table.RenameColumns(#"value Expandido1",{{"value.TERAREA", "Área do território (em km²)"}, {"value.TERCAPITAL", "CAPITAL"}}),
    #"Linhas Filtradas" = Table.SelectRows(#"Colunas Renomeadas", each ([value.NIVNOME] <> "" and [value.NIVNOME] <> "AMC 1872-00" and [value.NIVNOME] <> "AMC 20-00" and [value.NIVNOME] <> "AMC 40-00" and [value.NIVNOME] <> "AMC 60-00" and [value.NIVNOME] <> "AMC 70-00" and [value.NIVNOME] <> "AMC 91-00")),
    #"Colunas Removidas" = Table.RemoveColumns(#"Linhas Filtradas",{"@odata.context"}),
    #"Colunas Renomeadas1" = Table.RenameColumns(#"Colunas Removidas",{{"value.NIVNOME", "Tipo Regiao"}, {"value.TERCODIGO", "Municipio_id"}, {"value.TERNOME", "Município"}}),
    #"Tipo Alterado" = Table.TransformColumnTypes(#"Colunas Renomeadas1",{{"Área do território (em km²)", type number}, {"Tipo Regiao", type text}, {"Municipio_id", Int64.Type}, {"Município", type text}, {"value.TERNOMEPADRAO", type text}, {"CAPITAL", type logical}, {"value.NIVAMC", type logical}}),
    #"Colunas Removidas1" = Table.RemoveColumns(#"Tipo Alterado",{"value.NIVAMC"}),
    #"Erros Removidos" = Table.RemoveRowsWithErrors(#"Colunas Removidas1", {"Municipio_id"}),
    #"Linhas Filtradas1" = Table.SelectRows(#"Erros Removidos", each ([Tipo Regiao] = "Estados")),
    #"Colunas Renomeadas2" = Table.RenameColumns(#"Linhas Filtradas1",{{"value.TERNOMEPADRAO", "TERNOMEPADRAO"}}),
    #"Coluna Condicional Adicionada" = Table.AddColumn(#"Colunas Renomeadas2", "Sigla_UF", each if [TERNOMEPADRAO] = "RONDONIA" then "RO" else if [TERNOMEPADRAO] = "ACRE" then "AC" else if [TERNOMEPADRAO] = "RORAIMA" then "RR" else if [TERNOMEPADRAO] = "PARA" then "PA" else if [TERNOMEPADRAO] = "TOCANTINS" then "TO" else if [TERNOMEPADRAO] = "MARANHAO" then "MA" else if [TERNOMEPADRAO] = "PIAUI" then "PI" else if [TERNOMEPADRAO] = "CEARA" then "CE" else if [TERNOMEPADRAO] = "RIO GRANDE DO NORTE" then "RN" else if [TERNOMEPADRAO] = "PARAIBA" then "PB" else if [TERNOMEPADRAO] = "PERNAMBUCO" then "PE" else if [TERNOMEPADRAO] = "ALAGOAS" then "AL" else if [TERNOMEPADRAO] = "SERGIPE" then "SE" else if [TERNOMEPADRAO] = "BAHIA" then "BA" else if [TERNOMEPADRAO] = "MINAS GERAIS" then "MG" else if [TERNOMEPADRAO] = "ESPIRITO SANTO" then "ES" else if [TERNOMEPADRAO] = "RIO DE JANEIRO" then "RJ" else if [TERNOMEPADRAO] = "SAO PAULO" then "SP" else if [TERNOMEPADRAO] = "PARANA" then "PR" else if [TERNOMEPADRAO] = "SANTA CATARINA" then "SC" else if [TERNOMEPADRAO] = "RIO GRANDE DO SUL" then "RS" else if [TERNOMEPADRAO] = "MATO GROSSO DO SUL" then "MS" else if [TERNOMEPADRAO] = "MATO GROSSO" then "MT" else if [TERNOMEPADRAO] = "GOIAS" then "GO" else if [TERNOMEPADRAO] = "DISTRITO FEDERAL" then "DF" else "AM", type text)
in
    #"Coluna Condicional Adicionada"</pre></td><td >False</td></tr><tr ><td >SOC_IDHM_por_UF</td><td ></td><td >Import</td><td ><pre>let
    Fonte = Web.BrowserContents("http://www.ipeadata.gov.br/ExibeSerieR.aspx?stub=1&serid=40037&MINDATA=2015&MAXDATA=2025&TNIVID=2&TPAID=1&module=S"),
    #"Tabela extraída de HTML" = Html.Table(Fonte, {{"Column1", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(1)"}, {"Column2", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(2)"}, {"Column3", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(3)"}, {"Column4", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(4)"}, {"Column5", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(5)"}, {"Column6", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(6)"}, {"Column7", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(7)"}, {"Column8", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(8)"}, {"Column9", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(9)"}, {"Column10", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(10)"}, {"Column11", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(11)"}, {"Column12", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(12)"}, {"Column13", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(13)"}, {"Column14", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(14)"}, {"Column15", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(15)"}, {"Column16", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(16)"}, {"Column17", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(17)"}}, [RowSelector="TABLE[id='grd_DXMainTable'] > * > TR"]),
    #"Tipo Alterado" = Table.TransformColumnTypes(#"Tabela extraída de HTML",{{"Column1", type text}, {"Column2", type text}, {"Column3", type number}, {"Column4", type number}, {"Column5", type number}, {"Column6", type number}, {"Column7", type number}, {"Column8", type number}, {"Column9", type number}, {"Column10", type number}, {"Column11", type number}, {"Column12", type number}, {"Column13", type number}, {"Column14", type number}, {"Column15", type number}, {"Column16", type number}, {"Column17", type number}}),
    #"Cabeçalhos Promovidos" = Table.PromoteHeaders(#"Tipo Alterado", [PromoteAllScalars=true]),
    #"Outras Colunas Não Dinâmicas" = Table.UnpivotOtherColumns(#"Cabeçalhos Promovidos", {"Sigla", "Estado"}, "Atributo", "Valor"),
    #"Colunas Renomeadas" = Table.RenameColumns(#"Outras Colunas Não Dinâmicas",{{"Valor", "IDHM_UF"}, {"Atributo", "Ano"}, {"Sigla", "Sigla_UF"}}),
    #"Tipo Alterado2" = Table.TransformColumnTypes(#"Colunas Renomeadas",{{"IDHM_UF", type number}}),
    #"Colunas Removidas" = Table.RemoveColumns(#"Tipo Alterado2",{"Estado"})
in
    #"Colunas Removidas"</pre></td><td >False</td></tr><tr ><td >EDU_% Alunos na Rede Pública</td><td ></td><td >Import</td><td ><pre>let
    Fonte = Web.BrowserContents("http://www.ipeadata.gov.br/ExibeSerieR.aspx?stub=1&serid=2096726958&MINDATA=2015&MAXDATA=2025&TNIVID=2&TPAID=1&module=S"),
    Séries1 = Html.Table(Fonte, {{"Column1", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(1)"}, {"Column2", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(2)"}, {"Column3", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(3)"}, {"Column4", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(4)"}, {"Column5", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(5)"}, {"Column6", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(6)"}, {"Column7", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(7)"}, {"Column8", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(8)"}}, [RowSelector="TABLE[id='grd_DXMainTable'] > * > TR"]),
    #"Tipo Alterado" = Table.TransformColumnTypes(Séries1,{{"Column1", type text}, {"Column2", type text}, {"Column3", type text}, {"Column4", type number}, {"Column5", type number}, {"Column6", type number}, {"Column7", type number}, {"Column8", type number}}),
    #"Cabeçalhos Promovidos" = Table.PromoteHeaders(#"Tipo Alterado", [PromoteAllScalars=true]),
    #"Tipo Alterado1" = Table.TransformColumnTypes(#"Cabeçalhos Promovidos",{{"Sigla", type text}, {"Estado", type text}, {"2017", type number}, {"2018", type number}, {"2019", type number}, {"2022", type number}, {"2023", type number}}),
    #"Colunas Renomeadas" = Table.RenameColumns(#"Tipo Alterado1",{{"Sigla", "Sigla_UF"}}),
    #"Somente as Colunas Selecionadas Foram Transformadas em Linhas" = Table.Unpivot(#"Colunas Renomeadas", {"2016", "2017", "2018", "2019", "2022", "2023"}, "Atributo", "Valor"),
    #"Tipo Alterado3" = Table.TransformColumnTypes(#"Somente as Colunas Selecionadas Foram Transformadas em Linhas",{{"Valor", type number}}),
    #"Colunas Renomeadas1" = Table.RenameColumns(#"Tipo Alterado3",{{"Valor", "Valor(%)"}, {"Atributo", "Ano"}}),
    #"Tipo Alterado2" = Table.TransformColumnTypes(#"Colunas Renomeadas1",{{"Ano", Int64.Type}}),
    #"Data Inserida" = Table.AddColumn(#"Tipo Alterado2", "Ano_Data", each Date.From(Text.From([Ano], "pt-BR")), type date),
    #"Colunas Removidas" = Table.RemoveColumns(#"Data Inserida",{"Estado"})
in
    #"Colunas Removidas"</pre></td><td >False</td></tr><tr ><td >Governadores (wikimedia)</td><td ></td><td >Import</td><td ><pre>let
    Fonte = Web.BrowserContents("https://www.wikiwand.com/pt/Lista_de_governadores_das_unidades_federativas_do_Brasil"),
    #"Tabela extraída de HTML" = Html.Table(Fonte, {{"Column1", "TH + TD + *"}, {"Column2", "BR:nth-child(2) + A"}, {"Column3", ".pcs-collapse-table-container B"}, {"Column4", "TD:nth-child(6)"}, {"Column5", "SMALL A"}, {"Column6", ".pcs-collapse-table-container B *"}, {"Column7", "TD:nth-child(6) A"}, {"Column8", "B + BR + *"}, {"Column9", "TD:nth-child(1) A:nth-child(2)"}, {"Column10", "P SMALL *"}, {"Column11", "TD .mw-redirect"}, {"Column12", ".default-touch-area .mw-reflink-text"}, {"Column13", "B + P SMALL"}, {"Column14", "BR + .date *"}, {"Column15", ".right-touch-area .mw-reflink-text"}, {"Column16", "TD:nth-child(4) .date:nth-child(3)"}, {"Column17", "TD:nth-child(4) SMALL"}}, [RowSelector="BR:nth-child(2) + A"]),
    #"Tipo Alterado" = Table.TransformColumnTypes(#"Tabela extraída de HTML",{{"Column1", type text}, {"Column2", type text}, {"Column3", type text}, {"Column4", type text}, {"Column5", type text}, {"Column6", type text}, {"Column7", Int64.Type}, {"Column8", type text}, {"Column9", Int64.Type}, {"Column10", type text}, {"Column11", type text}, {"Column12", type text}, {"Column13", type text}, {"Column14", type date}, {"Column15", type text}, {"Column16", type date}, {"Column17", type text}}),
    #"Colunas Removidas" = Table.RemoveColumns(#"Tipo Alterado",{"Column11", "Column12", "Column13", "Column14", "Column15", "Column16", "Column17", "Column7", "Column8", "Column9", "Column10", "Column5", "Column6"}),
    #"Coluna Condicional Adicionada1" = Table.AddColumn(#"Colunas Removidas", "Sigla_UF", each if [Column2] = "Acre" then "AC" else if [Column2] = "Alagoas" then "AL" else if [Column2] = "Amapá" then "AP" else if [Column2] = "Amazonas" then "AM" else if [Column2] = "Bahia" then "BA" else if [Column2] = "Ceará" then "CE" else if [Column2] = "Distrito Federal" then "DF" else if [Column2] = "Espírito Santo" then "ES" else if [Column2] = "Goiás" then "GO" else if [Column2] = "Maranhão" then "MA" else if [Column2] = "Mato Grosso do Sul" then "MS" else if [Column2] = "Pará" then "PA" else if [Column2] = "Paraíba" then "PB" else if [Column2] = "Paraná" then "PR" else if [Column2] = "Pernambuco" then "PE" else if [Column2] = "Piauí" then "PI" else if [Column2] = "Rio de Janeiro" then "RJ" else if [Column2] = "Rio Grande do Norte" then "RN" else if [Column2] = "Rio Grande do Sul" then "RS" else if [Column2] = "Rondônia" then "RO" else if [Column2] = "Roraima" then "RR" else if [Column2] = "Santa Catarina" then "SC" else if [Column2] = "São Paulo" then "SP" else if [Column2] = "Sergipe" then "SE" else if [Column2] = "Tocantins" then "TO" else "MG", type text),
    #"Colunas Renomeadas" = Table.RenameColumns(#"Coluna Condicional Adicionada1",{{"Column1", "Nome Fanta - Nome"}, {"Column2", "Nome_UF"}, {"Column3", "Nome"}, {"Column4", "Mandato"}}),
    #"Coluna Condicional Adicionada2" = Table.AddColumn(#"Colunas Renomeadas", "Personalizar", each if [Nome] = "Gladson Cameli" then "https://upload.wikimedia.org/wikipedia/commons/thumb/f/f0/Retrato_oficial_Gladson_Cameli_2019.jpg/225px-Retrato_oficial_Gladson_Cameli_2019.jpg" else if [Nome] = "Paulo Dantas" then "https://upload.wikimedia.org/wikipedia/commons/thumb/6/63/Paulo_Dantas_-_Deputado_Estadual_%28cropped%29.jpg/224px-Paulo_Dantas_-_Deputado_Estadual_%28cropped%29.jpg" else if [Nome] = "Clécio Luis" then "https://upload.wikimedia.org/wikipedia/commons/thumb/a/ab/Cl%C3%A9cio_Luis_em_fevereiro_de_2018_%282%29.jpg/225px-Cl%C3%A9cio_Luis_em_fevereiro_de_2018_%282%29.jpg" else if [Nome] = "Wilson Lima" then "https://upload.wikimedia.org/wikipedia/commons/thumb/c/cd/Wilson_Miranda_Lima.jpg/225px-Wilson_Miranda_Lima.jpg" else if [Nome] = "Jerônimo Rodrigues" then "https://upload.wikimedia.org/wikipedia/commons/thumb/8/8c/18_01_2023_-_Visita_de_Cortesia_Jer%C3%B4nimo_Rodrigues_%28Governador_do_Estado_da_Bahia-BA%29_%2852635213362%29_%28cropped%29.jpg/225px-18_01_2023_-_Visita_de_Cortesia_Jer%C3%B4nimo_Rodrigues_%28Governador_do_Estado_da_Bahia-BA%29_%2852635213362%29_%28cropped%29.jpg" else if [Nome] = "Elmano de Freitas" then "https://upload.wikimedia.org/wikipedia/commons/thumb/a/a1/Elmano_de_Freitas_2023.jpg/236px-Elmano_de_Freitas_2023.jpg" else if [Nome] = "Ibaneis Rocha" then "https://upload.wikimedia.org/wikipedia/commons/thumb/e/eb/Ibaneis_posse_no_Buriti_-_Foto_Divulga%C3%A7%C3%A3o_GDF_%2839740238043%29.jpg/190px-Ibaneis_posse_no_Buriti_-_Foto_Divulga%C3%A7%C3%A3o_GDF_%2839740238043%29.jpg" else if [Nome] = "Renato Casagrande" then "https://upload.wikimedia.org/wikipedia/commons/thumb/7/7f/Renato_Casagrande_em_mar%C3%A7o_de_2019.jpg/225px-Renato_Casagrande_em_mar%C3%A7o_de_2019.jpg" else if [Nome] = "Ronaldo Caiado" then "https://upload.wikimedia.org/wikipedia/commons/thumb/2/27/Ronaldo_Caiado_%28cropped%29.jpg/224px-Ronaldo_Caiado_%28cropped%29.jpg" else if [Nome] = "Carlos Brandão Júnior" then "https://upload.wikimedia.org/wikipedia/commons/thumb/1/1b/Retrato_Oficial_de_Carlos_Brand%C3%A3o_como_governador_do_Maranh%C3%A3o.jpg/230px-Retrato_Oficial_de_Carlos_Brand%C3%A3o_como_governador_do_Maranh%C3%A3o.jpg" else if [Nome] = "Mauro Mendes" then "https://upload.wikimedia.org/wikipedia/commons/thumb/7/7a/Mauro_Mendes_como_governador_do_Mato_Grosso.jpg/225px-Mauro_Mendes_como_governador_do_Mato_Grosso.jpg" else if [Nome] = "Eduardo Riedel" then "https://upload.wikimedia.org/wikipedia/commons/thumb/3/35/Retrato_do_Governador_Eduardo_Riedel.jpg/240px-Retrato_do_Governador_Eduardo_Riedel.jpg" else if [Nome] = "Romeu Zema" then "https://upload.wikimedia.org/wikipedia/commons/thumb/8/8d/Romeu_Zema_em_fevereiro_de_2019.jpg/225px-Romeu_Zema_em_fevereiro_de_2019.jpg" else if [Nome] = "Helder Barbalho" then "https://upload.wikimedia.org/wikipedia/commons/thumb/9/9f/DSC_8092_%2852992242395%29_%28cropped%29.jpg/225px-DSC_8092_%2852992242395%29_%28cropped%29.jpg" else if [Nome] = "João Azevêdo" then "https://upload.wikimedia.org/wikipedia/commons/thumb/b/b7/Jo%C3%A3o_Azev%C3%AAdo_em_abril_de_2019.jpg/225px-Jo%C3%A3o_Azev%C3%AAdo_em_abril_de_2019.jpg" else if [Nome] = "Ratinho Júnior" then "https://upload.wikimedia.org/wikipedia/commons/thumb/d/db/Ratinho_J%C3%BAnior_em_fevereiro_de_2019.jpg/225px-Ratinho_J%C3%BAnior_em_fevereiro_de_2019.jpg" else if [Nome] = "Raquel Lyra" then "https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/RL45_14-09.jpg/225px-RL45_14-09.jpg" else if [Nome] = "Rafael Fonteles" then "https://upload.wikimedia.org/wikipedia/commons/thumb/3/30/Rafael_Tajra_Fonteles%2C_presidente_do_Comsefaz_%28cropped%29.jpg/225px-Rafael_Tajra_Fonteles%2C_presidente_do_Comsefaz_%28cropped%29.jpg" else if [Nome] = "Cláudio Castro" then "https://upload.wikimedia.org/wikipedia/commons/thumb/c/c0/Claudio_Castro_como_Vice_Governador_do_Rio_de_Janeiro.jpg/225px-Claudio_Castro_como_Vice_Governador_do_Rio_de_Janeiro.jpg" else if [Nome] = "Fátima Bezerra" then "https://upload.wikimedia.org/wikipedia/commons/thumb/f/fe/F%C3%A1tima_Bezerra_como_governadora_do_Rio_Grande_do_Norte.png/225px-F%C3%A1tima_Bezerra_como_governadora_do_Rio_Grande_do_Norte.png" else if [Nome] = "Eduardo Leite" then "https://upload.wikimedia.org/wikipedia/commons/thumb/3/3b/Eduardo_Leite_no_Pal%C3%A1cio_Piratini_em_mar%C3%A7o_de_2019.jpg/225px-Eduardo_Leite_no_Pal%C3%A1cio_Piratini_em_mar%C3%A7o_de_2019.jpg" else if [Nome] = "Marcos Rocha" then "https://upload.wikimedia.org/wikipedia/commons/thumb/9/91/Desfile_de_7_de_Setembro_08.09.22_Foto_Daiane_Mendon%C3%A7a_%28384%29_%2852342537421%29_%28cropped%29.jpg/225px-Desfile_de_7_de_Setembro_08.09.22_Foto_Daiane_Mendon%C3%A7a_%28384%29_%2852342537421%29_%28cropped%29.jpg" else if [Nome] = "Antonio Denarium" then "https://upload.wikimedia.org/wikipedia/commons/thumb/d/d0/Foto_Governador_Antonio_Denarium.jpg/225px-Foto_Governador_Antonio_Denarium.jpg" else if [Nome] = "Jorginho Mello" then "https://upload.wikimedia.org/wikipedia/commons/thumb/c/ce/Senador_Jorginho_Mello_%28cropped%29.jpg/225px-Senador_Jorginho_Mello_%28cropped%29.jpg" else if [Nome] = "Tarcísio de Freitas" then "https://upload.wikimedia.org/wikipedia/commons/thumb/7/74/Governador_do_Estado_de_S%C3%A3o_Paulo%2C_Tarc%C3%ADsio_de_Freitas_-_Foto_Oficial_%28cropped%29.jpg/225px-Governador_do_Estado_de_S%C3%A3o_Paulo%2C_Tarc%C3%ADsio_de_Freitas_-_Foto_Oficial_%28cropped%29.jpg" else if [Nome] = "Fábio Mitidieri" then "https://upload.wikimedia.org/wikipedia/commons/thumb/4/49/F%C3%A1bio_Mitidieri_em_dezembro_de_2016.jpg/226px-F%C3%A1bio_Mitidieri_em_dezembro_de_2016.jpg" else if [Nome] = "Wanderlei Barbosa" then "https://upload.wikimedia.org/wikipedia/commons/thumb/6/6d/Wanderlei_Barbosa_como_governador_do_Tocantins.jpg/225px-Wanderlei_Barbosa_como_governador_do_Tocantins.jpg" else null, type text),
    #"Colunas Renomeadas1" = Table.RenameColumns(#"Coluna Condicional Adicionada2",{{"Personalizar", "Foto"}}),
    #"Coluna Condicional Adicionada" = Table.AddColumn(#"Colunas Renomeadas1", "Partido", each if [Nome] = "Gladson Cameli" then "PP" else if [Nome] = "Paulo Dantas" then "MDB" else if [Nome] = "Clécio Luis" then "SOLIDARIEDADE" else if [Nome] = "Wilson Lima" then "UNIÃO" else if [Nome] = "Jerônimo Rodrigues" then "PT" else if [Nome] = "Elmano de Freitas" then "PT" else if [Nome] = "Ibaneis Rocha" then "MDB" else if [Nome] = "Renato Casagrande" then "PSB" else if [Nome] = "Ronaldo Caiado" then "UNIÃO" else if [Nome] = "Carlos Brandão Júnior" then "PSB" else if [Nome] = "Mauro Mendes" then "UNIÃO" else if [Nome] = "Eduardo Riedel" then "PSDB" else if [Nome] = "Romeu Zema" then "NOVO" else if [Nome] = "Helder Barbalho" then "MDB" else if [Nome] = "João Azevêdo" then "PSB" else if [Nome] = "Ratinho Júnior" then "PSB" else if [Nome] = "Raquel Lyra" then "PSDB" else if [Nome] = "Rafael Fonteles" then "PT" else if [Nome] = "Cláudio Castro" then "PL" else if [Nome] = "Fátima Bezerra" then "PT" else if [Nome] = "Eduardo Leite" then "PSDB" else if [Nome] = "Marcos Rocha" then "UNIÃO" else if [Nome] = "Antonio Denarium" then "PP" else if [Nome] = "Jorginho Mello" then "PL" else if [Nome] = "Tarcísio de Freitas" then "REPUBLICANOS" else if [Nome] = "Fábio Mitidieri" then "PSD" else if [Nome] = "Wanderlei Barbosa" then "REPUBLICANOS" else null, type text),
    #"Colunas Renomeadas2" = Table.RenameColumns(#"Coluna Condicional Adicionada",{{"Sigla_UF", "Sigla"}}),
    #"Coluna Condicional Adicionada3" = Table.AddColumn(#"Colunas Renomeadas2", "Sigla_UF", each if [Nome_UF] = "Acre" then "AC" else if [Nome_UF] = "Alagoas" then "AL" else if [Nome_UF] = "Amapá" then "AP" else if [Nome_UF] = "Amazonas" then "AM" else if [Nome_UF] = "Bahia" then "BA" else if [Nome_UF] = "Ceará" then "CE" else if [Nome_UF] = "Distrito Federal" then "DF" else if [Nome_UF] = "Espírito Santo" then "ES" else if [Nome_UF] = "Goiás" then "GO" else if [Nome_UF] = "Maranhão" then "MA" else if [Nome_UF] = "Mato Grosso" then "MT" else if [Nome_UF] = "Mato Grosso do Sul" then "MS" else if [Nome_UF] = "Minas Gerais" then "MG" else if [Nome_UF] = "Pará" then "PA" else if [Nome_UF] = "Paraíba" then "PB" else if [Nome_UF] = "Paraná" then "PR" else if [Nome_UF] = "Pernambuco" then "PE" else if [Nome_UF] = "Piauí" then "PI" else if [Nome_UF] = "Rio de Janeiro" then "RJ" else if [Nome_UF] = "Rio Grande do Norte" then "RN" else if [Nome_UF] = "Rio Grande do Sul" then "RS" else if [Nome_UF] = "Rondônia" then "RO" else if [Nome_UF] = "Roraima" then "RR" else if [Nome_UF] = "Santa Catarina" then "SC" else if [Nome_UF] = "São Paulo" then "SP" else if [Nome_UF] = "Sergipe" then "SE" else if [Nome_UF] = "Tocantins" then "TO" else null, type text),
    #"Colunas Reordenadas" = Table.ReorderColumns(#"Coluna Condicional Adicionada3",{"Nome Fanta - Nome", "Nome_UF", "Nome", "Mandato", "Sigla", "Sigla_UF", "Foto", "Partido"}),
    #"Colunas Removidas1" = Table.RemoveColumns(#"Colunas Reordenadas",{"Sigla"}),
    #"Coluna Condicional Adicionada4" = Table.AddColumn(#"Colunas Removidas1", "No governo desde ", each if [Mandato] = "1  (2018)" then 2018 else 2022, type number)
in
    #"Coluna Condicional Adicionada4"</pre></td><td >False</td></tr><tr ><td >SOC_Taxa de desemprego (IBGE - Continua)</td><td ></td><td >Import</td><td ><pre>let
    Fonte = Excel.Workbook(File.Contents("C:\Users\jan_e\OneDrive\!!Painel Politicos x Estados - PWBI\Taxa de desemprego (IBGE - Continua).xls"), null, true),
    Séries1 = Fonte{[Name="Séries"]}[Data],
    #"Cabeçalhos Promovidos" = Table.PromoteHeaders(Séries1, [PromoteAllScalars=true]),
    #"Tipo Alterado" = Table.TransformColumnTypes(#"Cabeçalhos Promovidos",{{"Sigla", type text}, {"Codigo", Int64.Type}, {"Estado", type text}, {"2014 T1", type number}, {"2014 T2", type number}, {"2014 T3", type number}, {"2014 T4", type number}, {"2015 T1", type number}, {"2015 T2", type number}, {"2015 T3", type number}, {"2015 T4", type number}, {"2016 T1", type number}, {"2016 T2", type number}, {"2016 T3", type number}, {"2016 T4", type number}, {"2017 T1", type number}, {"2017 T2", type number}, {"2017 T3", type number}, {"2017 T4", type number}, {"2018 T1", type number}, {"2018 T2", type number}, {"2018 T3", type number}, {"2018 T4", type number}, {"2019 T1", type number}, {"2019 T2", type number}, {"2019 T3", type number}, {"2019 T4", type number}, {"2020 T1", type number}, {"2020 T2", type number}, {"2020 T3", type number}, {"2020 T4", type number}, {"2021 T1", type number}, {"2021 T2", type number}, {"2021 T3", type number}, {"2021 T4", type number}, {"2022 T1", type number}, {"2022 T2", type number}, {"2022 T3", type number}, {"2022 T4", type number}, {"2023 T1", type number}, {"2023 T2", type number}, {"2023 T3", type number}, {"2023 T4", type number}, {"2024 T1", type number}}),
    #"Colunas Renomeadas" = Table.RenameColumns(#"Tipo Alterado",{{"Sigla", "Sigla_UF"}}),
    #"Somente as Colunas Selecionadas Foram Transformadas em Linhas" = Table.Unpivot(#"Colunas Renomeadas", {"2014 T1", "2014 T2", "2014 T3", "2014 T4", "2015 T1", "2015 T2", "2015 T3", "2015 T4", "2016 T1", "2016 T2", "2016 T3", "2016 T4", "2017 T1", "2017 T2", "2017 T3", "2017 T4", "2018 T1", "2018 T2", "2018 T3", "2018 T4", "2019 T1", "2019 T2", "2019 T3", "2019 T4", "2020 T1", "2020 T2", "2020 T3", "2020 T4", "2021 T1", "2021 T2", "2021 T3", "2021 T4", "2022 T1", "2022 T2", "2022 T3", "2022 T4", "2023 T1", "2023 T2", "2023 T3", "2023 T4", "2024 T1"}, "Atributo", "Valor"),
    #"Colunas Renomeadas1" = Table.RenameColumns(#"Somente as Colunas Selecionadas Foram Transformadas em Linhas",{{"Atributo", "Periodo"}, {"Valor", "Taxa Desemprego %"}}),
    #"Coluna Duplicada" = Table.DuplicateColumn(#"Colunas Renomeadas1", "Periodo", "Periodo - Copiar"),
    #"Colunas Renomeadas2" = Table.RenameColumns(#"Coluna Duplicada",{{"Periodo - Copiar", "Trimestres"}}),
    #"Valor Substituído" = Table.ReplaceValue(#"Colunas Renomeadas2"," T1","/01/01",Replacer.ReplaceText,{"Trimestres"}),
    #"Valor Substituído1" = Table.ReplaceValue(#"Valor Substituído"," T2","/04/01",Replacer.ReplaceText,{"Trimestres"}),
    #"Valor Substituído2" = Table.ReplaceValue(#"Valor Substituído1"," T3","/07/01",Replacer.ReplaceText,{"Trimestres"}),
    #"Valor Substituído3" = Table.ReplaceValue(#"Valor Substituído2"," T4","/10/01",Replacer.ReplaceText,{"Trimestres"}),
    #"Tipo Alterado1" = Table.TransformColumnTypes(#"Valor Substituído3",{{"Trimestres", type datetime}}),
    #"Ano Inserido" = Table.AddColumn(#"Tipo Alterado1", "Ano", each Date.Year([Trimestres]), Int64.Type),
    #"Colunas Removidas" = Table.RemoveColumns(#"Ano Inserido",{"Estado"})
in
    #"Colunas Removidas"</pre></td><td >False</td></tr><tr ><td >SAU_Estabelecimento de saude(DataSUS)</td><td ></td><td >Import</td><td ><pre>let
    Fonte = Web.BrowserContents("http://www.ipeadata.gov.br/ExibeSerieR.aspx?stub=1&serid=2096726972&MINDATA=2015&MAXDATA=2025&TNIVID=2&TPAID=1&module=S"),
    #"Tabela extraída de HTML" = Html.Table(Fonte, {{"Column1", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(1)"}, {"Column2", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(2)"}, {"Column3", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(3)"}, {"Column4", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(4)"}, {"Column5", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(5)"}, {"Column6", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(6)"}, {"Column7", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(7)"}, {"Column8", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(8)"}, {"Column9", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(9)"}, {"Column10", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(10)"}, {"Column11", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(11)"}}, [RowSelector="TABLE[id='grd_DXMainTable'] > * > TR"]),
    #"Tipo Alterado" = Table.TransformColumnTypes(#"Tabela extraída de HTML",{{"Column1", type text}, {"Column2", type text}, {"Column3", type number}, {"Column4", type number}, {"Column5", type number}, {"Column6", type number}, {"Column7", type number}, {"Column8", type number}, {"Column9", type number}, {"Column10", type number}, {"Column11", type number}}),
    #"Cabeçalhos Promovidos" = Table.PromoteHeaders(#"Tipo Alterado", [PromoteAllScalars=true]),
    #"Outras Colunas Não Dinâmicas" = Table.UnpivotOtherColumns(#"Cabeçalhos Promovidos", {"Sigla", "Estado"}, "Atributo", "Valor"),
    #"Tipo Alterado2" = Table.TransformColumnTypes(#"Outras Colunas Não Dinâmicas",{{"Atributo", Int64.Type}}),
    #"Colunas Renomeadas" = Table.RenameColumns(#"Tipo Alterado2",{{"Atributo", "Ano"}, {"Sigla", "Sigla_UF"}, {"Valor", "Num_Estabelecimentos_Saude"}}),
    #"Tipo Alterado3" = Table.TransformColumnTypes(#"Colunas Renomeadas",{{"Num_Estabelecimentos_Saude", Int64.Type}}),
    #"Colunas Removidas" = Table.RemoveColumns(#"Tipo Alterado3",{"Estado"})
in
    #"Colunas Removidas"</pre></td><td >False</td></tr><tr ><td >FIN_PIB Brasil</td><td ></td><td >Import</td><td ><pre>let
    Fonte = Web.BrowserContents("http://www.ipeadata.gov.br/ExibeSerieR.aspx?stub=1&serid=1540855420&MINDATA=2014&MAXDATA=2030&TNIVID=0&TPAID=1&module=R"),
    #"Tabela extraída de HTML" = Html.Table(Fonte, {{"Column1", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(1)"}, {"Column2", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(2)"}, {"Column3", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(3)"}, {"Column4", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(4)"}, {"Column5", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(5)"}, {"Column6", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(6)"}, {"Column7", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(7)"}, {"Column8", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(8)"}, {"Column9", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(9)"}, {"Column10", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(10)"}}, [RowSelector="TABLE[id='grd_DXMainTable'] > * > TR"]),
    #"Tipo Alterado" = Table.TransformColumnTypes(#"Tabela extraída de HTML",{{"Column1", type text}, {"Column2", type text}, {"Column3", Int64.Type}, {"Column4", Int64.Type}, {"Column5", Int64.Type}, {"Column6", Int64.Type}, {"Column7", Int64.Type}, {"Column8", Int64.Type}, {"Column9", Int64.Type}, {"Column10", Int64.Type}}),
    #"Cabeçalhos Promovidos" = Table.PromoteHeaders(#"Tipo Alterado", [PromoteAllScalars=true]),
    #"Tipo Alterado1" = Table.TransformColumnTypes(#"Cabeçalhos Promovidos",{{"Sigla", type text}, {"Brasil", type text}, {"2014", Int64.Type}, {"2015", Int64.Type}, {"2016", Int64.Type}, {"2017", Int64.Type}, {"2018", Int64.Type}, {"2019", Int64.Type}, {"2020", Int64.Type}, {"2021", Int64.Type}}),
    #"Colunas Renomeadas" = Table.RenameColumns(#"Tipo Alterado1",{{"Sigla", "Sigla_UF"}, {"Brasil", "Estado"}}),
    #"Colunas Não Dinâmicas" = Table.UnpivotOtherColumns(#"Colunas Renomeadas", {"Sigla_UF", "Estado"}, "Atributo", "Valor"),
    #"Colunas Renomeadas1" = Table.RenameColumns(#"Colunas Não Dinâmicas",{{"Atributo", "Ano"}}),
    #"Tipo Alterado2" = Table.TransformColumnTypes(#"Colunas Renomeadas1",{{"Ano", Int64.Type}}),
    #"Colunas Renomeadas2" = Table.RenameColumns(#"Tipo Alterado2",{{"Valor", "Valor PIB Brasil em trilhao"}}),
    #"Colunas Removidas" = Table.RemoveColumns(#"Colunas Renomeadas2",{"Estado"})
in
    #"Colunas Removidas"</pre></td><td >False</td></tr><tr ><td >SAU_Medicos por 10k Habitantes</td><td ></td><td >Import</td><td ><pre>let
    Fonte = Web.BrowserContents("http://www.ipeadata.gov.br/ExibeSerieR.aspx?stub=1&serid=2096727037&MINDATA=2015&MAXDATA=2025&TNIVID=2&TPAID=1&module=S"),
    #"Tabela extraída de HTML" = Html.Table(Fonte, {{"Column1", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(1)"}, {"Column2", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(2)"}, {"Column3", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(3)"}, {"Column4", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(4)"}, {"Column5", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(5)"}, {"Column6", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(6)"}, {"Column7", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(7)"}, {"Column8", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(8)"}, {"Column9", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(9)"}, {"Column10", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(10)"}, {"Column11", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(11)"}}, [RowSelector="TABLE[id='grd_DXMainTable'] > * > TR"]),
    #"Tipo Alterado" = Table.TransformColumnTypes(#"Tabela extraída de HTML",{{"Column1", type text}, {"Column2", type text}, {"Column3", type number}, {"Column4", type number}, {"Column5", type number}, {"Column6", type number}, {"Column7", type number}, {"Column8", type number}, {"Column9", type number}, {"Column10", type number}, {"Column11", type number}}),
    #"Cabeçalhos Promovidos" = Table.PromoteHeaders(#"Tipo Alterado", [PromoteAllScalars=true]),
    #"Tipo Alterado1" = Table.TransformColumnTypes(#"Cabeçalhos Promovidos",{{"Sigla", type text}, {"Estado", type text}, {"2015", type number}, {"2016", type number}, {"2017", type number}, {"2018", type number}, {"2019", type number}, {"2020", type number}, {"2021", type number}, {"2022", type number}, {"2023", type number}}),
    #"Outras Colunas Não Dinâmicas" = Table.UnpivotOtherColumns(#"Tipo Alterado1", {"Sigla", "Estado"}, "Atributo", "Valor"),
    #"Colunas Renomeadas" = Table.RenameColumns(#"Outras Colunas Não Dinâmicas",{{"Atributo", "Ano"}}),
    #"Tipo Alterado2" = Table.TransformColumnTypes(#"Colunas Renomeadas",{{"Ano", Int64.Type}}),
    #"Colunas Renomeadas1" = Table.RenameColumns(#"Tipo Alterado2",{{"Valor", "Médicos por 10.000 Habitantes"}, {"Sigla", "Sigla_UF"}}),
    #"Colunas Removidas" = Table.RemoveColumns(#"Colunas Renomeadas1",{"Estado"})
in
    #"Colunas Removidas"</pre></td><td >False</td></tr><tr ><td >SEG_Homicidios por 100k Habitantes</td><td ></td><td >Import</td><td ><pre>let
    Fonte = Web.BrowserContents("http://www.ipeadata.gov.br/ExibeSerieR.aspx?stub=1&serid=1611149422&MINDATA=2015&MAXDATA=2025&TNIVID=2&TPAID=1&module=R"),
    #"Tabela extraída de HTML" = Html.Table(Fonte, {{"Column1", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(1)"}, {"Column2", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(2)"}, {"Column3", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(3)"}, {"Column4", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(4)"}, {"Column5", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(5)"}, {"Column6", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(6)"}, {"Column7", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(7)"}, {"Column8", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(8)"}, {"Column9", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(9)"}, {"Column10", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(10)"}, {"Column11", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(11)"}}, [RowSelector="TABLE[id='grd_DXMainTable'] > * > TR"]),
    #"Tipo Alterado" = Table.TransformColumnTypes(#"Tabela extraída de HTML",{{"Column1", type text}, {"Column2", type text}, {"Column3", type number}, {"Column4", type number}, {"Column5", type number}, {"Column6", type number}, {"Column7", type number}, {"Column8", type number}, {"Column9", type number}, {"Column10", type number}, {"Column11", type number}}),
    #"Cabeçalhos Promovidos" = Table.PromoteHeaders(#"Tipo Alterado", [PromoteAllScalars=true]),
    #"Tipo Alterado1" = Table.TransformColumnTypes(#"Cabeçalhos Promovidos",{{"Sigla", type text}, {"Estado", type text}, {"2015", type number}, {"2016", type number}, {"2017", type number}, {"2018", type number}, {"2019", type number}, {"2020", type number}, {"2021", type number}, {"2022", type number}, {"Column11", type number}}),
    #"Colunas Removidas" = Table.RemoveColumns(#"Tipo Alterado1",{"Column11"}),
    #"Outras Colunas Não Dinâmicas" = Table.UnpivotOtherColumns(#"Colunas Removidas", {"Sigla", "Estado"}, "Atributo", "Valor"),
    #"Colunas Renomeadas" = Table.RenameColumns(#"Outras Colunas Não Dinâmicas",{{"Atributo", "Ano"}}),
    #"Tipo Alterado2" = Table.TransformColumnTypes(#"Colunas Renomeadas",{{"Ano", Int64.Type}}),
    #"Colunas Renomeadas1" = Table.RenameColumns(#"Tipo Alterado2",{{"Valor", "Tx Homicidio por 100.000 Habitantes"}, {"Sigla", "Sigla_UF"}}),
    #"Colunas Removidas1" = Table.RemoveColumns(#"Colunas Renomeadas1",{"Estado"})
in
    #"Colunas Removidas1"</pre></td><td >False</td></tr><tr ><td >SOC_Taxa de Pobreza</td><td ></td><td >Import</td><td ><pre>let
    Fonte = Web.BrowserContents("http://www.ipeadata.gov.br/ExibeSerieR.aspx?stub=1&serid=2096726934&MINDATA=2015&MAXDATA=2025&TNIVID=2&TPAID=1&module=S"),
    #"Tabela extraída de HTML" = Html.Table(Fonte, {{"Column1", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(1)"}, {"Column2", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(2)"}, {"Column3", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(3)"}, {"Column4", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(4)"}, {"Column5", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(5)"}, {"Column6", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(6)"}, {"Column7", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(7)"}, {"Column8", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(8)"}, {"Column9", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(9)"}, {"Column10", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(10)"}, {"Column11", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(11)"}}, [RowSelector="TABLE[id='grd_DXMainTable'] > * > TR"]),
    #"Tipo Alterado" = Table.TransformColumnTypes(#"Tabela extraída de HTML",{{"Column1", type text}, {"Column2", type text}, {"Column3", type number}, {"Column4", type number}, {"Column5", type number}, {"Column6", type number}, {"Column7", type number}, {"Column8", type number}, {"Column9", type number}, {"Column10", type number}, {"Column11", type number}}),
    #"Cabeçalhos Promovidos" = Table.PromoteHeaders(#"Tipo Alterado", [PromoteAllScalars=true]),
    #"Outras Colunas Não Dinâmicas" = Table.UnpivotOtherColumns(#"Cabeçalhos Promovidos", {"Sigla", "Estado"}, "Atributo", "Valor"),
    #"Colunas Renomeadas" = Table.RenameColumns(#"Outras Colunas Não Dinâmicas",{{"Atributo", "Ano"}}),
    #"Tipo Alterado2" = Table.TransformColumnTypes(#"Colunas Renomeadas",{{"Ano", Int64.Type}}),
    #"Colunas Renomeadas1" = Table.RenameColumns(#"Tipo Alterado2",{{"Valor", "Taxa de Pobreza"}, {"Sigla", "Sigla_UF"}}),
    #"Colunas Removidas" = Table.RemoveColumns(#"Colunas Renomeadas1",{"Estado"})
in
    #"Colunas Removidas"</pre></td><td >False</td></tr><tr ><td >FIN_Receita corrente - receita bruta - estadual</td><td ></td><td >Import</td><td ><pre>let
    Fonte = Web.BrowserContents("http://www.ipeadata.gov.br/ExibeSerieR.aspx?stub=1&serid=40177&MINDATA=1970&MAXDATA=2025&TNIVID=2&TPAID=1&module=S"),
    #"Tabela extraída de HTML" = Html.Table(Fonte, {{"Column1", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(1)"}, {"Column2", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(2)"}, {"Column3", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(3)"}, {"Column4", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(4)"}, {"Column5", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(5)"}, {"Column6", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(6)"}, {"Column7", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(7)"}, {"Column8", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(8)"}, {"Column9", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(9)"}, {"Column10", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(10)"}, {"Column11", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(11)"}, {"Column12", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(12)"}, {"Column13", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(13)"}, {"Column14", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(14)"}, {"Column15", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(15)"}, {"Column16", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(16)"}, {"Column17", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(17)"}, {"Column18", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(18)"}, {"Column19", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(19)"}, {"Column20", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(20)"}, {"Column21", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(21)"}, {"Column22", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(22)"}, {"Column23", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(23)"}, {"Column24", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(24)"}, {"Column25", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(25)"}, {"Column26", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(26)"}, {"Column27", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(27)"}, {"Column28", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(28)"}, {"Column29", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(29)"}, {"Column30", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(30)"}, {"Column31", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(31)"}, {"Column32", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(32)"}, {"Column33", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(33)"}, {"Column34", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(34)"}, {"Column35", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(35)"}, {"Column36", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(36)"}, {"Column37", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(37)"}, {"Column38", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(38)"}, {"Column39", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(39)"}, {"Column40", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(40)"}, {"Column41", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(41)"}, {"Column42", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(42)"}, {"Column43", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(43)"}, {"Column44", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(44)"}, {"Column45", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(45)"}, {"Column46", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(46)"}, {"Column47", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(47)"}, {"Column48", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(48)"}, {"Column49", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(49)"}, {"Column50", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(50)"}, {"Column51", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(51)"}, {"Column52", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(52)"}, {"Column53", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(53)"}, {"Column54", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(54)"}}, [RowSelector="TABLE[id='grd_DXMainTable'] > * > TR"]),
    #"Tipo Alterado" = Table.TransformColumnTypes(#"Tabela extraída de HTML",{{"Column1", type text}, {"Column2", type text}, {"Column3", type number}, {"Column4", type number}, {"Column5", type number}, {"Column6", type number}, {"Column7", type number}, {"Column8", type number}, {"Column9", type number}, {"Column10", type number}, {"Column11", type number}, {"Column12", type number}, {"Column13", type number}, {"Column14", type number}, {"Column15", type number}, {"Column16", type number}, {"Column17", type number}, {"Column18", type number}, {"Column19", Int64.Type}, {"Column20", Int64.Type}, {"Column21", Int64.Type}, {"Column22", Int64.Type}, {"Column23", Int64.Type}, {"Column24", Int64.Type}, {"Column25", Int64.Type}, {"Column26", Int64.Type}, {"Column27", Int64.Type}, {"Column28", Int64.Type}, {"Column29", Int64.Type}, {"Column30", Int64.Type}, {"Column31", Int64.Type}, {"Column32", Int64.Type}, {"Column33", Int64.Type}, {"Column34", Int64.Type}, {"Column35", Int64.Type}, {"Column36", Int64.Type}, {"Column37", Int64.Type}, {"Column38", Int64.Type}, {"Column39", Int64.Type}, {"Column40", Int64.Type}, {"Column41", Int64.Type}, {"Column42", Int64.Type}, {"Column43", Int64.Type}, {"Column44", Int64.Type}, {"Column45", Int64.Type}, {"Column46", Int64.Type}, {"Column47", Int64.Type}, {"Column48", Int64.Type}, {"Column49", Int64.Type}, {"Column50", Int64.Type}, {"Column51", Int64.Type}, {"Column52", Int64.Type}, {"Column53", Int64.Type}, {"Column54", Int64.Type}}),
    #"Cabeçalhos Promovidos" = Table.PromoteHeaders(#"Tipo Alterado", [PromoteAllScalars=true]),
    #"Tipo Alterado1" = Table.TransformColumnTypes(#"Cabeçalhos Promovidos",{{"Sigla", type text}, {"Estado", type text}, {"1970", type number}, {"1971", type number}, {"1972", type number}, {"1973", type number}, {"1974", type number}, {"1975", type number}, {"1976", type number}, {"1977", type number}, {"1978", type number}, {"1979", type number}, {"1980", type number}, {"1981", type number}, {"1982", type number}, {"1983", type number}, {"1985", type number}, {"1986", type number}, {"1987", Int64.Type}, {"1988", Int64.Type}, {"1989", Int64.Type}, {"1990", Int64.Type}, {"1991", Int64.Type}, {"1992", Int64.Type}, {"1993", Int64.Type}, {"1994", Int64.Type}, {"1995", Int64.Type}, {"1996", Int64.Type}, {"1997", Int64.Type}, {"1998", Int64.Type}, {"1999", Int64.Type}, {"2000", Int64.Type}, {"2001", Int64.Type}, {"2002", Int64.Type}, {"2003", Int64.Type}, {"2004", Int64.Type}, {"2005", Int64.Type}, {"2006", Int64.Type}, {"2007", Int64.Type}, {"2008", Int64.Type}, {"2009", Int64.Type}, {"2010", Int64.Type}, {"2011", Int64.Type}, {"2012", Int64.Type}, {"2013", Int64.Type}, {"2014", Int64.Type}, {"2015", Int64.Type}, {"2016", Int64.Type}, {"2017", Int64.Type}, {"2018", Int64.Type}, {"2019", Int64.Type}, {"2020", Int64.Type}, {"2021", Int64.Type}, {"2022", Int64.Type}}),
    #"Colunas Removidas" = Table.RemoveColumns(#"Tipo Alterado1",{"1970", "1971", "1972", "1973", "1974", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993"}),
    #"Outras Colunas Não Dinâmicas" = Table.UnpivotOtherColumns(#"Colunas Removidas", {"Sigla", "Estado"}, "Atributo", "Valor"),
    #"Colunas Renomeadas" = Table.RenameColumns(#"Outras Colunas Não Dinâmicas",{{"Atributo", "Ano"}}),
    #"Tipo Alterado2" = Table.TransformColumnTypes(#"Colunas Renomeadas",{{"Ano", Int64.Type}}),
    #"Colunas Renomeadas1" = Table.RenameColumns(#"Tipo Alterado2",{{"Valor", "Receita bruta"}, {"Sigla", "Sigla_UF"}}),
    #"Coluna Mesclada Inserida" = Table.AddColumn(#"Colunas Renomeadas1", "Indice", each Text.Combine({[Sigla_UF], [Estado], Text.From([Ano], "pt-BR")}), type text),
    #"Colunas Removidas1" = Table.RemoveColumns(#"Coluna Mesclada Inserida",{"Estado"})
in
    #"Colunas Removidas1"</pre></td><td >False</td></tr><tr ><td >FIN_Despesas correntes - estadual</td><td ></td><td >Import</td><td ><pre>let
    Fonte = Web.BrowserContents("http://www.ipeadata.gov.br/ExibeSerieR.aspx?stub=1&serid=40115&MINDATA=1994&MAXDATA=2025&TNIVID=2&TPAID=1&module=S"),
    #"Tabela extraída de HTML" = Html.Table(Fonte, {{"Column1", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(1)"}, {"Column2", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(2)"}, {"Column3", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(3)"}, {"Column4", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(4)"}, {"Column5", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(5)"}, {"Column6", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(6)"}, {"Column7", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(7)"}, {"Column8", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(8)"}, {"Column9", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(9)"}, {"Column10", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(10)"}, {"Column11", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(11)"}, {"Column12", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(12)"}, {"Column13", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(13)"}, {"Column14", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(14)"}, {"Column15", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(15)"}, {"Column16", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(16)"}, {"Column17", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(17)"}, {"Column18", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(18)"}, {"Column19", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(19)"}, {"Column20", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(20)"}, {"Column21", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(21)"}, {"Column22", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(22)"}, {"Column23", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(23)"}, {"Column24", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(24)"}, {"Column25", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(25)"}, {"Column26", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(26)"}, {"Column27", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(27)"}, {"Column28", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(28)"}, {"Column29", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(29)"}, {"Column30", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(30)"}, {"Column31", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(31)"}}, [RowSelector="TABLE[id='grd_DXMainTable'] > * > TR"]),
    #"Tipo Alterado" = Table.TransformColumnTypes(#"Tabela extraída de HTML",{{"Column1", type text}, {"Column2", type text}, {"Column3", type number}, {"Column4", type number}, {"Column5", type number}, {"Column6", type number}, {"Column7", type number}, {"Column8", type number}, {"Column9", type number}, {"Column10", type number}, {"Column11", type number}, {"Column12", type number}, {"Column13", type number}, {"Column14", type number}, {"Column15", type number}, {"Column16", type number}, {"Column17", type number}, {"Column18", type number}, {"Column19", Int64.Type}, {"Column20", Int64.Type}, {"Column21", Int64.Type}, {"Column22", Int64.Type}, {"Column23", Int64.Type}, {"Column24", Int64.Type}, {"Column25", Int64.Type}, {"Column26", Int64.Type}, {"Column27", Int64.Type}, {"Column28", Int64.Type}, {"Column29", Int64.Type}, {"Column30", Int64.Type}, {"Column31", Int64.Type}}),
    #"Cabeçalhos Promovidos" = Table.PromoteHeaders(#"Tipo Alterado", [PromoteAllScalars=true]),
    #"Tipo Alterado1" = Table.TransformColumnTypes(#"Cabeçalhos Promovidos",{{"Sigla", type text}, {"Estado", type text}, {"1994", Int64.Type}, {"1995", Int64.Type}, {"1996", Int64.Type}, {"1997", Int64.Type}, {"1998", Int64.Type}, {"1999", Int64.Type}, {"2000", Int64.Type}, {"2001", Int64.Type}, {"2002", Int64.Type}, {"2003", Int64.Type}, {"2004", Int64.Type}, {"2005", Int64.Type}, {"2006", Int64.Type}, {"2007", Int64.Type}, {"2008", Int64.Type}, {"2009", Int64.Type}, {"2010", Int64.Type}, {"2011", Int64.Type}, {"2012", Int64.Type}, {"2013", Int64.Type}, {"2014", Int64.Type}, {"2015", Int64.Type}, {"2016", Int64.Type}, {"2017", Int64.Type}, {"2018", Int64.Type}, {"2019", Int64.Type}, {"2020", Int64.Type}, {"2021", Int64.Type}, {"2022", Int64.Type}}),
    #"Outras Colunas Não Dinâmicas" = Table.UnpivotOtherColumns(#"Tipo Alterado1", {"Sigla", "Estado"}, "Atributo", "Valor"),
    #"Colunas Renomeadas" = Table.RenameColumns(#"Outras Colunas Não Dinâmicas",{{"Atributo", "Ano"}}),
    #"Tipo Alterado2" = Table.TransformColumnTypes(#"Colunas Renomeadas",{{"Ano", Int64.Type}}),
    #"Colunas Renomeadas1" = Table.RenameColumns(#"Tipo Alterado2",{{"Valor", "Despesas Correntes"}, {"Sigla", "Sigla_UF"}}),
    #"Coluna Mesclada Inserida" = Table.AddColumn(#"Colunas Renomeadas1", "Indice", each Text.Combine({[Sigla_UF], [Estado], Text.From([Ano], "pt-BR")}), type text),
    #"Colunas Removidas" = Table.RemoveColumns(#"Coluna Mesclada Inserida",{"Estado"})
in
    #"Colunas Removidas"</pre></td><td >False</td></tr><tr ><td >FIN_Renda per capita (Atlas DH - Pnad Contínua/A)</td><td ></td><td >Import</td><td ><pre>let
    Fonte = Web.BrowserContents("http://www.ipeadata.gov.br/ExibeSerieR.aspx?stub=1&serid=2096726936&MINDATA=2015&MAXDATA=2025&TNIVID=2&TPAID=1&module=S"),
    #"Tabela extraída de HTML" = Html.Table(Fonte, {{"Column1", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(1)"}, {"Column2", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(2)"}, {"Column3", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(3)"}, {"Column4", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(4)"}, {"Column5", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(5)"}, {"Column6", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(6)"}, {"Column7", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(7)"}, {"Column8", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(8)"}, {"Column9", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(9)"}, {"Column10", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(10)"}, {"Column11", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(11)"}, {"Column12", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(12)"}}, [RowSelector="TABLE[id='grd_DXMainTable'] > * > TR"]),
    #"Cabeçalhos Promovidos" = Table.PromoteHeaders(#"Tabela extraída de HTML", [PromoteAllScalars=true]),
    #"Outras Colunas Não Dinâmicas" = Table.UnpivotOtherColumns(#"Cabeçalhos Promovidos", {"Sigla", "Estado"}, "Atributo", "Valor"),
    #"Colunas Renomeadas" = Table.RenameColumns(#"Outras Colunas Não Dinâmicas",{{"Atributo", "Ano"}}),
    #"Tipo Alterado2" = Table.TransformColumnTypes(#"Colunas Renomeadas",{{"Ano", Int64.Type}, {"Valor", type number}}),
    #"Colunas Renomeadas1" = Table.RenameColumns(#"Tipo Alterado2",{{"Valor", "Renda per Capita"}, {"Sigla", "Sigla_UF"}}),
    #"Colunas Removidas" = Table.RemoveColumns(#"Colunas Renomeadas1",{"Estado"})
in
    #"Colunas Removidas"</pre></td><td >False</td></tr><tr ><td >FIN_Receitas x Despesas</td><td ></td><td >Import</td><td ><pre>let
    Fonte = Table.NestedJoin(#"FIN_Receita corrente - receita bruta - estadual", {"Indice"}, #"FIN_Despesas correntes - estadual", {"Indice"}, "Despesas correntes - estadual", JoinKind.LeftOuter),
    #"Despesas correntes - estadual Expandido" = Table.ExpandTableColumn(Fonte, "Despesas correntes - estadual", {"Despesas Correntes"}, {"Despesas Correntes"}),
    #"Colunas Removidas" = Table.RemoveColumns(#"Despesas correntes - estadual Expandido",{"Indice"}),
    #"Personalização Adicionada" = Table.AddColumn(#"Colunas Removidas", "Receita - Despesa", each [Receita bruta] - [Despesas Correntes]),
    #"Tipo Alterado" = Table.TransformColumnTypes(#"Personalização Adicionada",{{"Receita - Despesa", type number}}),
    #"Linhas Filtradas" = Table.SelectRows(#"Tipo Alterado", each ([Ano] = 2014 or [Ano] = 2015 or [Ano] = 2016 or [Ano] = 2017 or [Ano] = 2018 or [Ano] = 2019 or [Ano] = 2020 or [Ano] = 2021 or [Ano] = 2022 or [Ano] = 2023))
in
    #"Linhas Filtradas"</pre></td><td >False</td></tr><tr ><td >SOC_Indice de Gini</td><td ></td><td >Import</td><td ><pre>let
    Fonte = Web.BrowserContents("http://www.ipeadata.gov.br/ExibeSerieR.aspx?stub=1&serid=2096726935&MINDATA=2015&MAXDATA=2025&TNIVID=2&TPAID=1&module=S"),
    #"Tabela extraída de HTML" = Html.Table(Fonte, {{"Column1", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(1)"}, {"Column2", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(2)"}, {"Column3", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(3)"}, {"Column4", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(4)"}, {"Column5", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(5)"}, {"Column6", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(6)"}, {"Column7", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(7)"}, {"Column8", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(8)"}, {"Column9", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(9)"}, {"Column10", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(10)"}, {"Column11", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(11)"}}, [RowSelector="TABLE[id='grd_DXMainTable'] > * > TR"]),
    #"Tipo Alterado" = Table.TransformColumnTypes(#"Tabela extraída de HTML",{{"Column1", type text}, {"Column2", type text}, {"Column3", type number}, {"Column4", type number}, {"Column5", type number}, {"Column6", type number}, {"Column7", type number}, {"Column8", type number}, {"Column9", type number}, {"Column10", type number}, {"Column11", type number}}),
    #"Cabeçalhos Promovidos" = Table.PromoteHeaders(#"Tipo Alterado", [PromoteAllScalars=true]),
    #"Tipo Alterado1" = Table.TransformColumnTypes(#"Cabeçalhos Promovidos",{{"Sigla", type text}, {"Estado", type text}, {"2015", type number}, {"2016", type number}, {"2017", type number}, {"2018", type number}, {"2019", type number}, {"2020", type number}, {"2021", type number}, {"2022", type number}, {"2023", type number}}),
    #"Outras Colunas Não Dinâmicas" = Table.UnpivotOtherColumns(#"Tipo Alterado1", {"Sigla", "Estado"}, "Atributo", "Valor"),
    #"Colunas Renomeadas" = Table.RenameColumns(#"Outras Colunas Não Dinâmicas",{{"Atributo", "Ano"}, {"Sigla", "Sigla_UF"}, {"Valor", "Indice de Gini"}}),
    #"Colunas Removidas" = Table.RemoveColumns(#"Colunas Renomeadas",{"Estado"})
in
    #"Colunas Removidas"</pre></td><td >False</td></tr><tr ><td >SEG_Ocorrências Criminais</td><td ></td><td >Import</td><td ><pre>let
    Fonte = Excel.Workbook(Web.Contents("http://dados.mj.gov.br/dataset/210b9ae2-21fc-4986-89c6-2006eb4db247/resource/feeae05e-faba-406c-8a4a-512aec91a9d1/download/indicadoressegurancapublicauf.xlsx"), null, true),
    Ocorrências_Sheet = Fonte{[Item="Ocorrências",Kind="Sheet"]}[Data],
    #"Cabeçalhos Promovidos" = Table.PromoteHeaders(Ocorrências_Sheet, [PromoteAllScalars=true]),
    #"Tipo Alterado" = Table.TransformColumnTypes(#"Cabeçalhos Promovidos",{{"UF", type text}, {"Tipo Crime", type text}, {"Ano", Int64.Type}, {"Mês", type text}, {"Ocorrências", Int64.Type}}),
    #"Colunas Removidas" = Table.RemoveColumns(#"Tipo Alterado",{"Mês"}),
    #"Coluna em pivô" = Table.Pivot(#"Colunas Removidas", List.Distinct(#"Colunas Removidas"[#"Tipo Crime"]), "Tipo Crime", "Ocorrências", List.Sum),
    #"Outras Colunas Não Dinâmicas" = Table.UnpivotOtherColumns(#"Coluna em pivô", {"UF", "Ano"}, "Atributo", "Valor"),
    #"Colunas Renomeadas" = Table.RenameColumns(#"Outras Colunas Não Dinâmicas",{{"Atributo", "Tipo Crime"}, {"Valor", "Vítimas"}}),
    #"Coluna Condicional Adicionada" = Table.AddColumn(#"Colunas Renomeadas", "Sigla_UF", each if [UF] = "Acre" then "AC" else if [UF] = "Alagoas" then "AL" else if [UF] = "Amapá" then "AP" else if [UF] = "Amazonas" then "AM" else if [UF] = "Bahia" then "BA" else if [UF] = "Ceará" then "CE" else if [UF] = "Distrito Federal" then "DF" else if [UF] = "Espírito Santo" then "ES" else if [UF] = "Goiás" then "GO" else if [UF] = "Maranhão" then "MA" else if [UF] = "Mato Grosso" then "MT" else if [UF] = "Mato Grosso do Sul" then "MS" else if [UF] = "Minas Gerais" then "MG" else if [UF] = "Paraná" then "PR" else if [UF] = "Paraíba" then "PB" else if [UF] = "Pará" then "PA" else if [UF] = "Pernambuco" then "PE" else if [UF] = "Piauí" then "PI" else if [UF] = "Rio Grande do Norte" then "RN" else if [UF] = "Rio Grande do Sul" then "RS" else if [UF] = "Rio de Janeiro" then "RJ" else if [UF] = "Rondônia" then "RO" else if [UF] = "Roraima" then "RR" else if [UF] = "Santa Catarina" then "SC" else if [UF] = "Sergipe" then "SE" else if [UF] = "São Paulo" then "SP" else if [UF] = "Tocantins" then "TO" else null, type text),
    #"Colunas Removidas1" = Table.RemoveColumns(#"Coluna Condicional Adicionada",{"UF"})
in
    #"Colunas Removidas1"</pre></td><td >False</td></tr><tr ><td >Calendario</td><td ></td><td >Import</td><td ><pre>
ADDCOLUMNS(
    CALENDARAUTO(),
    "Ano", YEAR([Date]),
    "Mês", MONTH([Date]),
    "Dia", DAY([Date]),
    "Nome do Mês", FORMAT([Date], "MMMM"),
    "Trimestre", QUARTER([Date])
)</pre></td><td >False</td></tr><tr ><td >PIB Estadual histórico</td><td ></td><td >Import</td><td ><pre>let
    Fonte = Web.BrowserContents("http://www.ipeadata.gov.br/ExibeSerieR.aspx?stub=1&serid=1540855420&MINDATA=1939&MAXDATA=2025&TNIVID=2&TPAID=1&module=R"),
    #"Tabela extraída de HTML" = Html.Table(Fonte, {{"Column1", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(1)"}, {"Column2", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(2)"}, {"Column3", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(3)"}, {"Column4", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(4)"}, {"Column5", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(5)"}, {"Column6", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(6)"}, {"Column7", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(7)"}, {"Column8", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(8)"}, {"Column9", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(9)"}, {"Column10", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(10)"}, {"Column11", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(11)"}, {"Column12", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(12)"}, {"Column13", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(13)"}, {"Column14", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(14)"}, {"Column15", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(15)"}, {"Column16", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(16)"}, {"Column17", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(17)"}, {"Column18", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(18)"}, {"Column19", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(19)"}, {"Column20", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(20)"}, {"Column21", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(21)"}, {"Column22", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(22)"}, {"Column23", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(23)"}, {"Column24", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(24)"}, {"Column25", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(25)"}, {"Column26", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(26)"}, {"Column27", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(27)"}, {"Column28", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(28)"}, {"Column29", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(29)"}, {"Column30", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(30)"}, {"Column31", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(31)"}, {"Column32", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(32)"}, {"Column33", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(33)"}, {"Column34", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(34)"}, {"Column35", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(35)"}, {"Column36", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(36)"}, {"Column37", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(37)"}, {"Column38", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(38)"}, {"Column39", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(39)"}, {"Column40", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(40)"}, {"Column41", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(41)"}, {"Column42", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(42)"}, {"Column43", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(43)"}, {"Column44", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(44)"}, {"Column45", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(45)"}, {"Column46", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(46)"}, {"Column47", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(47)"}, {"Column48", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(48)"}, {"Column49", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(49)"}, {"Column50", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(50)"}, {"Column51", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(51)"}, {"Column52", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(52)"}, {"Column53", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(53)"}, {"Column54", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(54)"}, {"Column55", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(55)"}, {"Column56", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(56)"}, {"Column57", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(57)"}, {"Column58", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(58)"}, {"Column59", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(59)"}, {"Column60", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(60)"}, {"Column61", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(61)"}, {"Column62", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(62)"}, {"Column63", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(63)"}}, [RowSelector="TABLE[id='grd_DXMainTable'] > * > TR"]),
    #"Tipo Alterado" = Table.TransformColumnTypes(#"Tabela extraída de HTML",{{"Column1", type text}, {"Column2", type text}, {"Column3", type number}, {"Column4", type number}, {"Column5", type number}, {"Column6", type number}, {"Column7", type number}, {"Column8", type number}, {"Column9", type number}, {"Column10", type number}, {"Column11", type number}, {"Column12", type number}, {"Column13", type number}, {"Column14", type number}, {"Column15", type number}, {"Column16", type number}, {"Column17", type number}, {"Column18", type number}, {"Column19", type number}, {"Column20", type number}, {"Column21", type number}, {"Column22", type number}, {"Column23", type number}, {"Column24", type number}, {"Column25", type number}, {"Column26", type number}, {"Column27", type number}, {"Column28", type number}, {"Column29", type number}, {"Column30", type number}, {"Column31", type number}, {"Column32", Int64.Type}, {"Column33", Int64.Type}, {"Column34", Int64.Type}, {"Column35", Int64.Type}, {"Column36", Int64.Type}, {"Column37", Int64.Type}, {"Column38", Int64.Type}, {"Column39", Int64.Type}, {"Column40", Int64.Type}, {"Column41", Int64.Type}, {"Column42", Int64.Type}, {"Column43", Int64.Type}, {"Column44", Int64.Type}, {"Column45", Int64.Type}, {"Column46", Int64.Type}, {"Column47", Int64.Type}, {"Column48", Int64.Type}, {"Column49", Int64.Type}, {"Column50", Int64.Type}, {"Column51", Int64.Type}, {"Column52", Int64.Type}, {"Column53", Int64.Type}, {"Column54", Int64.Type}, {"Column55", Int64.Type}, {"Column56", Int64.Type}, {"Column57", Int64.Type}, {"Column58", Int64.Type}, {"Column59", Int64.Type}, {"Column60", Int64.Type}, {"Column61", Int64.Type}, {"Column62", Int64.Type}, {"Column63", Int64.Type}}),
    #"Cabeçalhos Promovidos" = Table.PromoteHeaders(#"Tipo Alterado", [PromoteAllScalars=true]),
    #"Tipo Alterado1" = Table.TransformColumnTypes(#"Cabeçalhos Promovidos",{{"Sigla", type text}, {"Estado", type text}, {"1939", type number}, {"1947", type number}, {"1948", type number}, {"1949", type number}, {"1950", type number}, {"1951", type number}, {"1952", type number}, {"1953", type number}, {"1954", type number}, {"1955", type number}, {"1956", type number}, {"1957", type number}, {"1958", type number}, {"1959", type number}, {"1960", type number}, {"1961", type number}, {"1962", type number}, {"1963", type number}, {"1964", type number}, {"1965", type number}, {"1966", type number}, {"1970", type number}, {"1975", type number}, {"1980", type number}, {"1985", type number}, {"1986", type number}, {"1987", type number}, {"1988", type number}, {"1989", type number}, {"1990", Int64.Type}, {"1991", Int64.Type}, {"1992", Int64.Type}, {"1993", Int64.Type}, {"1994", Int64.Type}, {"1995", Int64.Type}, {"1996", Int64.Type}, {"1997", Int64.Type}, {"1998", Int64.Type}, {"1999", Int64.Type}, {"2000", Int64.Type}, {"2001", Int64.Type}, {"2002", Int64.Type}, {"2003", Int64.Type}, {"2004", Int64.Type}, {"2005", Int64.Type}, {"2006", Int64.Type}, {"2007", Int64.Type}, {"2008", Int64.Type}, {"2009", Int64.Type}, {"2010", Int64.Type}, {"2011", Int64.Type}, {"2012", Int64.Type}, {"2013", Int64.Type}, {"2014", Int64.Type}, {"2015", Int64.Type}, {"2016", Int64.Type}, {"2017", Int64.Type}, {"2018", Int64.Type}, {"2019", Int64.Type}, {"2020", Int64.Type}, {"2021", Int64.Type}}),
    #"Colunas Renomeadas" = Table.RenameColumns(#"Tipo Alterado1",{{"Sigla", "Sigla_UF"}}),
    #"Outras Colunas Não Dinâmicas" = Table.UnpivotOtherColumns(#"Colunas Renomeadas", {"Sigla_UF", "Estado"}, "Atributo", "Valor"),
    #"Colunas Removidas" = Table.RemoveColumns(#"Outras Colunas Não Dinâmicas",{"Estado"})
in
    #"Colunas Removidas"</pre></td><td >False</td></tr><tr ><td >Raking</td><td ></td><td >Import</td><td ><pre>let
    Fonte = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText("pZJNSgNBEIWvUgwEFBKZHCGaxLiIxERXIYSa7lIb+o/uaRDv4ClcBBdeINu+mD2DBv+YSXQzMNX9vap6r5fLbGGYII6csm4WnzQXjOBcaJF+rwLq0oBCYRzY9Em1Xj9bdb9SF8PJdH0z/g4okvc18pO4xgeEIXlS1tFdAuILFwioA0ro7N+51uEEM1M4esQWEOO2pi6DWo98iQVJYkJRAvx6gaE+bFzhQ2FazcuMB5su9fOTPM9hgoUoE0u+RWUsNOq4QQ+zuC2kYFgRc9IcwZIDhjYJ/VGEUWKhV5lryafjo1MXSnPcIjfigWHcxGeTSh0YyKDTdhphTpW97y0OEamjGWiUt8nnUnhlWtKhu+DqlVJtYpRg8ZWLncU5KCEbPG4QS1EH68whyOf+QyONbxn+9zR2GZwZ56h96j0z/dfLqF5Do8LqDQ==", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Area = _t, Indice = _t, Observações = _t, Referencias = _t]),
    #"Tipo Alterado" = Table.TransformColumnTypes(Fonte,{{"Area", type text}, {"Indice", type text}, {"Referencias", Int64.Type}}),
    #"Valor Substituído1" = Table.ReplaceValue(#"Tipo Alterado","Taxa Analfabetismo","Taxa Analfabetismo",Replacer.ReplaceText,{"Indice"}),
    #"Valor Substituído2" = Table.ReplaceValue(#"Valor Substituído1","Taxa Analfabetismo","Taxa Analfabetismo",Replacer.ReplaceText,{"Indice"})
in
    #"Valor Substituído2"</pre></td><td >False</td></tr><tr ><td >Indices_mais_recentes</td><td ></td><td >Import</td><td ><pre>let
    Fonte = Table.Combine({#"SOC_Taxa de Pobreza", #"SOC_Indice de Gini", #"SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais", SOC_IDHM_por_UF, #"FIN_Renda per capita (Atlas DH - Pnad Contínua/A)", #"FIN_Receitas x Despesas", #"FIN_Receita corrente - receita bruta - estadual", #"SEG_Ocorrências Criminais", #"SEG_Homicidios por 100k Habitantes", #"SAU_Estabelecimento de saude(DataSUS)", #"SAU_Medicos por 10k Habitantes", #"EDU_% Alunos na Rede Pública", #"SOC_Taxa de desemprego (IBGE - Continua)", #"SOC_Taxa de desemprego por Ano (IBGE - Continua)"}),
    #"Colunas Removidas1" = Table.RemoveColumns(Fonte,{"Codigo", "Periodo", "Trimestres", "Indice", "Vítimas", "Ano_Data"}),
    #"Colunas Renomeadas1" = Table.RenameColumns(#"Colunas Removidas1",{{"Valor(%)", "% Alunos na Rede"}}),
    #"Outras Colunas Não Dinâmicas" = Table.UnpivotOtherColumns(#"Colunas Renomeadas1", {"Ano", "Sigla_UF"}, "Atributo", "Valor"),
    #"Colunas Renomeadas" = Table.RenameColumns(#"Outras Colunas Não Dinâmicas",{{"Atributo", "Indice"}}),
    #"Linhas Filtradas" = Table.SelectRows(#"Colunas Renomeadas", each ([Ano] <> null) and ([Indice] <> "Ano_Data" and [Indice] <> "Codigo" and [Indice] <> "Indice" and [Indice] <> "Periodo" and [Indice] <> "Tipo Crime" and [Indice] <> "Trimestres" and [Indice] <> "UF")),
    #"Tipo Alterado" = Table.TransformColumnTypes(#"Linhas Filtradas",{{"Valor", type number}, {"Ano", Int64.Type}}),
    #"Linhas Filtradas1" = Table.SelectRows(#"Tipo Alterado", each [Ano] = #"Ano Filtragem Indices"),
    #"Coluna Condicional Adicionada" = Table.AddColumn(#"Tipo Alterado", "Indices_Ranking", each if [Indice] = "Indice de Gini" then "Índice Gini" else if [Indice] = "Receita bruta" then "Receita - Despesas (Bruto)" else if [Indice] = "Tx Homicidio por 100.000 Habitantes" then "Homicídios por 100 mil Habitantes" else if [Indice] = "Qtd Estabelecimentos de saude" then "Estabelecimentos de Saúde" else if [Indice] = "% Alunos na Rede" then "% Alunos na Rede Pública" else [Indice], type text),
    #"Coluna Condicional Adicionada1" = Table.AddColumn(#"Coluna Condicional Adicionada", "Area", each if [Indices_Ranking] = "Taxa de Pobreza" then "Sociedade" else if [Indices_Ranking] = "Índice Gini" then "Sociedade" else if [Indices_Ranking] = "Taxa Analfabetismo" then "Educação" else if [Indices_Ranking] = "Taxa Desemprego" then "Sociedade" else if [Indices_Ranking] = "IDH" then "Sociedade" else if [Indices_Ranking] = "Estabelecimentos de Saúde" then "Saúde" else if [Indices_Ranking] = "Médicos por 10 mil Habitantes" then "Saúde" else if [Indices_Ranking] = "Renda per capita" then "Finanças Públicas" else if [Indices_Ranking] = "Receitas - Despesas (Bruto)" then "Finanças Públicas" else if [Indices_Ranking] = "% Alunos na Rede Pública" then "Educação" else if [Indices_Ranking] = "Homicídios por 100 mil Habitantes" then "Segurança" else if [Indices_Ranking] = "Estupros" then "Segurança" else if [Indices_Ranking] = "Homicídios Doloso" then "Segurança" else "Finanças Públicas", type text)
in
    #"Coluna Condicional Adicionada1"</pre></td><td >False</td></tr><tr ><td >Ano Filtragem Indices</td><td ></td><td >Import</td><td ><pre>2023 meta [IsParameterQuery=true, List={2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026}, DefaultValue=2022, Type="Number", IsParameterQueryRequired=true]</pre></td><td >False</td></tr><tr ><td >SOC_Taxa de desemprego por Ano (IBGE - Continua)</td><td ></td><td >Import</td><td ><pre>let
    Fonte = Web.BrowserContents("http://www.ipeadata.gov.br/ExibeSerieR.aspx?stub=1&serid=2096726928&MINDATA=2014&MAXDATA=2025&TNIVID=2&TPAID=1&module=S"),
    Séries1 = Html.Table(Fonte, {{"Column1", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(1)"}, {"Column2", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(2)"}, {"Column3", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(3)"}, {"Column4", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(4)"}, {"Column5", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(5)"}, {"Column6", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(6)"}, {"Column7", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(7)"}, {"Column8", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(8)"}, {"Column9", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(9)"}, {"Column10", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(10)"}, {"Column11", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(11)"}, {"Column12", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(12)"}, {"Column13", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(13)"}, {"Column14", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(14)"}, {"Column15", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(15)"}, {"Column16", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(16)"}, {"Column17", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(17)"}, {"Column18", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(18)"}, {"Column19", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(19)"}, {"Column20", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(20)"}, {"Column21", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(21)"}, {"Column22", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(22)"}, {"Column23", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(23)"}, {"Column24", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(24)"}, {"Column25", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(25)"}, {"Column26", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(26)"}, {"Column27", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(27)"}, {"Column28", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(28)"}, {"Column29", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(29)"}, {"Column30", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(30)"}, {"Column31", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(31)"}, {"Column32", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(32)"}, {"Column33", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(33)"}, {"Column34", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(34)"}, {"Column35", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(35)"}, {"Column36", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(36)"}, {"Column37", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(37)"}, {"Column38", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(38)"}, {"Column39", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(39)"}, {"Column40", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(40)"}, {"Column41", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(41)"}, {"Column42", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(42)"}, {"Column43", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(43)"}, {"Column44", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(44)"}, {"Column45", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(45)"}}, [RowSelector="TABLE[id='grd_DXMainTable'] > * > TR"]),
    #"Cabeçalhos Promovidos" = Table.PromoteHeaders(Séries1, [PromoteAllScalars=true]),
    #"Tipo Alterado" = Table.TransformColumnTypes(#"Cabeçalhos Promovidos",{{"Sigla", type text}, {"Estado", type text}, {"2014 T1", type number}, {"2014 T2", type number}, {"2014 T3", type number}, {"2014 T4", type number}, {"2015 T1", type number}, {"2015 T2", type number}, {"2015 T3", type number}, {"2015 T4", type number}, {"2016 T1", type number}, {"2016 T2", type number}, {"2016 T3", type number}, {"2016 T4", type number}, {"2017 T1", type number}, {"2017 T2", type number}, {"2017 T3", type number}, {"2017 T4", type number}, {"2018 T1", type number}, {"2018 T2", type number}, {"2018 T3", type number}, {"2018 T4", type number}, {"2019 T1", type number}, {"2019 T2", type number}, {"2019 T3", type number}, {"2019 T4", type number}, {"2020 T1", type number}, {"2020 T2", type number}, {"2020 T3", type number}, {"2020 T4", type number}, {"2021 T1", type number}, {"2021 T2", type number}, {"2021 T3", type number}, {"2021 T4", type number}, {"2022 T1", type number}, {"2022 T2", type number}, {"2022 T3", type number}, {"2022 T4", type number}, {"2023 T1", type number}, {"2023 T2", type number}, {"2023 T3", type number}, {"2023 T4", type number}, {"2024 T1", type number}}),
    #"Colunas Renomeadas" = Table.RenameColumns(#"Tipo Alterado",{{"Sigla", "Sigla_UF"}}),
    #"Somente as Colunas Selecionadas Foram Transformadas em Linhas" = Table.Unpivot(#"Colunas Renomeadas", {"2014 T1", "2014 T2", "2014 T3", "2014 T4", "2015 T1", "2015 T2", "2015 T3", "2015 T4", "2016 T1", "2016 T2", "2016 T3", "2016 T4", "2017 T1", "2017 T2", "2017 T3", "2017 T4", "2018 T1", "2018 T2", "2018 T3", "2018 T4", "2019 T1", "2019 T2", "2019 T3", "2019 T4", "2020 T1", "2020 T2", "2020 T3", "2020 T4", "2021 T1", "2021 T2", "2021 T3", "2021 T4", "2022 T1", "2022 T2", "2022 T3", "2022 T4", "2023 T1", "2023 T2", "2023 T3", "2023 T4", "2024 T1"}, "Atributo", "Valor"),
    #"Colunas Renomeadas1" = Table.RenameColumns(#"Somente as Colunas Selecionadas Foram Transformadas em Linhas",{{"Atributo", "Periodo"}, {"Valor", "Taxa Desemprego %"}}),
    #"Coluna Duplicada" = Table.DuplicateColumn(#"Colunas Renomeadas1", "Periodo", "Periodo - Copiar"),
    #"Colunas Renomeadas2" = Table.RenameColumns(#"Coluna Duplicada",{{"Periodo - Copiar", "Trimestres"}}),
    #"Valor Substituído" = Table.ReplaceValue(#"Colunas Renomeadas2"," T1","/01/01",Replacer.ReplaceText,{"Trimestres"}),
    #"Valor Substituído1" = Table.ReplaceValue(#"Valor Substituído"," T2","/04/01",Replacer.ReplaceText,{"Trimestres"}),
    #"Valor Substituído2" = Table.ReplaceValue(#"Valor Substituído1"," T3","/07/01",Replacer.ReplaceText,{"Trimestres"}),
    #"Valor Substituído3" = Table.ReplaceValue(#"Valor Substituído2"," T4","/10/01",Replacer.ReplaceText,{"Trimestres"}),
    #"Tipo Alterado1" = Table.TransformColumnTypes(#"Valor Substituído3",{{"Trimestres", type datetime}}),
    #"Ano Inserido" = Table.AddColumn(#"Tipo Alterado1", "Ano", each Date.Year([Trimestres]), Int64.Type),
    #"Linhas Agrupadas" = Table.Group(#"Ano Inserido", {"Sigla_UF", "Estado", "Ano"}, {{"Taxa Desemprego média anual %", each List.Average([#"Taxa Desemprego %"]), type number}}),
    #"Colunas Removidas" = Table.RemoveColumns(#"Linhas Agrupadas",{"Estado"})
in
    #"Colunas Removidas"</pre></td><td >False</td></tr><tr ><td >SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais</td><td ></td><td >Import</td><td ><pre>let
    Fonte = Web.BrowserContents("http://www.ipeadata.gov.br/ExibeSerieR.aspx?stub=1&serid=2096726941&MINDATA=2015&MAXDATA=2030&TNIVID=2&TPAID=1&module=S"),
    #"Tabela extraída de HTML" = Html.Table(Fonte, {{"Column1", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(1)"}, {"Column2", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(2)"}, {"Column3", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(3)"}, {"Column4", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(4)"}, {"Column5", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(5)"}, {"Column6", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(6)"}, {"Column7", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(7)"}, {"Column8", "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(8)"}}, [RowSelector="TABLE[id='grd_DXMainTable'] > * > TR"]),
    #"Tipo Alterado" = Table.TransformColumnTypes(#"Tabela extraída de HTML",{{"Column1", type text}, {"Column2", type text}, {"Column3", type number}, {"Column4", type number}, {"Column5", type number}, {"Column6", type number}, {"Column7", type number}, {"Column8", type number}}),
    #"Cabeçalhos Promovidos" = Table.PromoteHeaders(#"Tipo Alterado", [PromoteAllScalars=true]),
    #"Tipo Alterado1" = Table.TransformColumnTypes(#"Cabeçalhos Promovidos",{{"Sigla", type text}, {"Estado", type text}, {"2016", type number}, {"2017", type number}, {"2018", type number}, {"2019", type number}, {"2022", type number}, {"2023", type number}}),
    #"Outras Colunas Não Dinâmicas" = Table.UnpivotOtherColumns(#"Tipo Alterado1", {"Sigla", "Estado"}, "Atributo", "Valor"),
    #"Colunas Renomeadas" = Table.RenameColumns(#"Outras Colunas Não Dinâmicas",{{"Valor", "Taxa Analfabetismo"}, {"Atributo", "Ano"}, {"Sigla", "Sigla_UF"}}),
    #"Tipo Alterado2" = Table.TransformColumnTypes(#"Colunas Renomeadas",{{"Ano", Int64.Type}}),
    #"Colunas Removidas" = Table.RemoveColumns(#"Tipo Alterado2",{"Estado"})
in
    #"Colunas Removidas"</pre></td><td >False</td></tr><tr ><td >Indices_agregados_classificados</td><td ></td><td >Import</td><td ><pre>let
    Fonte = Table.Combine({#"SOC_Taxa de Pobreza", #"SOC_Indice de Gini", #"SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais", SOC_IDHM_por_UF, #"FIN_Renda per capita (Atlas DH - Pnad Contínua/A)", #"FIN_Receitas x Despesas", #"FIN_Receita corrente - receita bruta - estadual", #"SEG_Ocorrências Criminais", #"SEG_Homicidios por 100k Habitantes", #"SAU_Estabelecimento de saude(DataSUS)", #"SAU_Medicos por 10k Habitantes", #"EDU_% Alunos na Rede Pública", #"SOC_Taxa de desemprego (IBGE - Continua)", #"SOC_Taxa de desemprego por Ano (IBGE - Continua)"}),
    #"Colunas Removidas1" = Table.RemoveColumns(Fonte,{"Codigo", "Periodo", "Trimestres", "Indice", "Vítimas", "Ano_Data"}),
    #"Colunas Renomeadas1" = Table.RenameColumns(#"Colunas Removidas1",{{"Valor(%)", "% Alunos na Rede"}}),
    #"Outras Colunas Não Dinâmicas" = Table.UnpivotOtherColumns(#"Colunas Renomeadas1", {"Ano", "Sigla_UF"}, "Atributo", "Valor"),
    #"Colunas Renomeadas" = Table.RenameColumns(#"Outras Colunas Não Dinâmicas",{{"Atributo", "Indice"}}),
    #"Linhas Filtradas" = Table.SelectRows(#"Colunas Renomeadas", each ([Ano] <> null) and ([Indice] <> "Ano_Data" and [Indice] <> "Codigo" and [Indice] <> "Indice" and [Indice] <> "Periodo" and [Indice] <> "Tipo Crime" and [Indice] <> "Trimestres" and [Indice] <> "UF")),
    #"Tipo Alterado" = Table.TransformColumnTypes(#"Linhas Filtradas",{{"Valor", type number}, {"Ano", Int64.Type}}),
    #"Linhas Filtradas1" = Table.SelectRows(#"Tipo Alterado", each [Ano] = #"Ano Filtragem Indices"),
    #"Coluna Condicional Adicionada" = Table.AddColumn(#"Tipo Alterado", "Indices_Ranking", each if [Indice] = "Indice de Gini" then "Índice Gini" else if [Indice] = "Receita bruta" then "Receita - Despesas (Bruto)" else if [Indice] = "Tx Homicidio por 100.000 Habitantes" then "Homicídios por 100 mil Habitantes" else if [Indice] = "Qtd Estabelecimentos de saude" then "Estabelecimentos de Saúde" else if [Indice] = "% Alunos na Rede" then "% Alunos na Rede Pública" else [Indice], type text),
    #"Coluna Condicional Adicionada1" = Table.AddColumn(#"Coluna Condicional Adicionada", "Area", each if [Indices_Ranking] = "Taxa de Pobreza" then "Sociedade" else if [Indices_Ranking] = "Índice Gini" then "Sociedade" else if [Indices_Ranking] = "Taxa Analfabetismo" then "Educação" else if [Indices_Ranking] = "Taxa Desemprego" then "Sociedade" else if [Indices_Ranking] = "IDH" then "Sociedade" else if [Indices_Ranking] = "Estabelecimentos de Saúde" then "Saúde" else if [Indices_Ranking] = "Médicos por 10 mil Habitantes" then "Saúde" else if [Indices_Ranking] = "Renda per capita" then "Finanças Públicas" else if [Indices_Ranking] = "Receitas - Despesas (Bruto)" then "Finanças Públicas" else if [Indices_Ranking] = "% Alunos na Rede Pública" then "Educação" else if [Indices_Ranking] = "Homicídios por 100 mil Habitantes" then "Segurança" else if [Indices_Ranking] = "Estupros" then "Segurança" else if [Indices_Ranking] = "Homicídios Doloso" then "Segurança" else "Finanças Públicas", type text)
in
    #"Coluna Condicional Adicionada1"</pre></td><td >False</td></tr><tr ><td >Indices Ano mais recente</td><td ></td><td >Import</td><td ><pre>
FILTER( 'Indices_agregados_classificados', 'Indices_agregados_classificados'[Ano] = CALCULATE( MAX('Indices_agregados_classificados'[Ano]), ALLEXCEPT('Indices_agregados_classificados', 'Indices_agregados_classificados'[Sigla_UF], 'Indices_agregados_classificados'[Indice], 'Indices_agregados_classificados'[Indices_Ranking], 'Indices_agregados_classificados'[Area]) ) )</pre></td><td >False</td></tr></table><hr></hr><br></br><h3><div>List of Measures:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Measure Name</th>
		<th>Table Name</th>
		<th>Description</th>
		<th>Expression</th>
		<th>Dependency</th>
		<th>Reverse Dependency</th>
	</tr>
	<tr>
		<td>Estado_Selecionado</td>
		<td>UFs(ibge)</td>
		<td></td>
		<td><pre>
VAR Selecao =
    FIRSTNONBLANKVALUE ( 'UFs(ibge)'[nome_UF], MIN ( 'UFs(ibge)'[nome_UF] ) )
VAR Tem_Filtro =
    ISFILTERED ( 'UFs(ibge)'[Sigla_UF] ) || ISFILTERED ( 'UFs(ibge)'[id_map] )
RETURN
    IF ( Tem_Filtro, Selecao, "" )</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Estado_Selecionado</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: UFs(ibge)</li>
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: nome_UF (Table: UFs(ibge))</li>
<li>Column: id_map (Table: UFs(ibge))</li>
</ul></span></li>
</ul></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Estado_Selecionado</span><span class="dropDownCaret">
<ul class="nested">
<li><span class="caret">Calc_Column: % Relação PIB Brasil</span>
<ul class="nested">
<li><span class="caret">Measure: Tendência PIB</span>
<ul class="nested">
<li><span class="caret">Measure: Pontuação Média dos Estados</span>
<ul class="nested">
<li>Measure: Posicao</li>
</ul></li>
</ul></li>
<li>Measure: Tendencia_PIB_Valorizado</li>
<li>Measure: Media</li>
<li>Measure: ultimo_valor</li>
<li>Measure: % Relação PIB mais recente</li>
</ul></li>
<li>Measure: Renda per Capita mais recente</li>
<li>Measure: # Homicidios por 100k mais recente</li>
<li>Measure: % Relação PIB mais recente</li>
</ul></span></li>
</ul></td>
	</tr>
	<tr>
		<td>Ver_se__UF_Filtrada</td>
		<td>UFs(ibge)</td>
		<td></td>
		<td><pre>
IF (
    HASONEVALUE ( 'UFs(ibge)'[Sigla_UF] ),
    "RGBA(0,0,0,0)",
    "RGBA(239,239,239,1)"
)</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Ver_se__UF_Filtrada</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: UFs(ibge)</li>
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
</ul></span></li>
</ul></td>
		<td>Measure: Ver_se__UF_Filtrada</td>
	</tr>
	<tr>
		<td>Ver_se__UF_Filtrada_Ind</td>
		<td>UFs(ibge)</td>
		<td></td>
		<td><pre>
IF (
    HASONEVALUE ( 'UFs(ibge)'[Sigla_UF] ),
    "RGBA(255,255,255)",
    "RGBA(0,0,0,0)"
)</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Ver_se__UF_Filtrada_Ind</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: UFs(ibge)</li>
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
</ul></span></li>
</ul></td>
		<td>Measure: Ver_se__UF_Filtrada_Ind</td>
	</tr>
	<tr>
		<td>Selecionado_UF_ou_Brasil</td>
		<td>UFs(ibge)</td>
		<td></td>
		<td><pre>
VAR Selecao =
    FIRSTNONBLANKVALUE ( 'UFs(ibge)'[nome_UF], MIN ( 'UFs(ibge)'[nome_UF] ) ) // Calculate(FIRSTNONBLANKVALUE('UFs(ibge)'[nome_UF],'UFs(ibge)'[nome_UF]),FILTER('UFs(ibge)',[Sigla_UF])))
VAR Tem_Filtro =
    ISFILTERED ( 'UFs(ibge)'[Sigla_UF] ) || ISFILTERED ( 'UFs(ibge)'[id_map] ) //VAR Tem_filtro_Map_Cor = ISFILTERED('UFs(ibge)'[id_map]
RETURN
    IF ( Tem_Filtro, Selecao, "Brasil" )</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Selecionado_UF_ou_Brasil</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: UFs(ibge)</li>
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: nome_UF (Table: UFs(ibge))</li>
<li>Column: id_map (Table: UFs(ibge))</li>
</ul></span></li>
</ul></td>
		<td>Measure: Selecionado_UF_ou_Brasil</td>
	</tr>
	<tr>
		<td>Ver_se__UF_Filtrada_Painel1</td>
		<td>UFs(ibge)</td>
		<td></td>
		<td><pre>
IF (
    HASONEVALUE ( 'UFs(ibge)'[Sigla_UF] ),
    "RGBA(0,0,0,0)",
    "RGBA(230,230,230,1)"
)</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Ver_se__UF_Filtrada_Painel1</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: UFs(ibge)</li>
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
</ul></span></li>
</ul></td>
		<td>Measure: Ver_se__UF_Filtrada_Painel1</td>
	</tr>
	<tr>
		<td>Pontua&#231;&#227;o M&#233;dia dos Estados</td>
		<td>UFs(ibge)</td>
		<td></td>
		<td><pre>
VAR IDH = IF ([Tendência UF] = "Alta", 20, 0)
VAR Renda = IF ([Tendência_Renda_per_capita] = "Alta", 15, 0)
VAR Indice_Gini = IF ([Tendência Gini] = "Melhora", 10, 0)
VAR TX_Analfa = IF ([Tendência_TX_Analfa] = "Queda", 10, 0)
VAR TX_Desemprego = IF ([Tendência TX Desemprego] = "Queda", 10, 0)
VAR TX_Pobreza = IF ([Tendência TX Pobreza] = "Queda", 10, 0)
VAR Medicos = IF ([Tendência Médicos] = "Alta", 7, 0)
VAR Homicidios = IF ([Tendência homicídios] = "Melhora", 7, 0)
VAR PIB = IF ([Tendência PIB] = "Alta", 5, 0)
VAR Estabelecimentos = IF ([Tendência_#_Estabelecimentos] = "Alta", 3, 0)
VAR Receita = IF ([Tendência_Receita_Despesa] = "Alta", 2, 0)
VAR Alunos = IF ([Tendência] = "Alta", 1, 0)
Return
IDH + Renda + Indice_Gini + TX_Analfa +TX_Desemprego + TX_Pobreza + Medicos + Homicidios + PIB + Estabelecimentos + Receita + Alunos </pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Pontuação Média dos Estados</span><span class="dropDownCaret">
<ul class="nested">
<li><span class="caret">Measure: Tendência UF (Table: SOC_IDHM_por_UF)</span>
<ul class="nested">
<li>Table: SOC_IDHM_por_UF   ...</li>
<li>Column: Ano (Table: SOC_IDHM_por_UF)</li>
<li>Column: IDHM_UF (Table: SOC_IDHM_por_UF)</li>
</ul></li>
<li><span class="caret">Measure: Tendência (Table: EDU_% Alunos na Rede Pública)</span>
<ul class="nested">
<li>Table: EDU_% Alunos na Rede Pública   ...</li>
<li>Column: Ano (Table: EDU_% Alunos na Rede Pública)</li>
<li>Column: Valor(%) (Table: EDU_% Alunos na Rede Pública)</li>
</ul></li>
<li><span class="caret">Measure: Tendência_#_Estabelecimentos (Table: SAU_Estabelecimento de saude(DataSUS))</span>
<ul class="nested">
<li>Table: SAU_Estabelecimento de saude(DataSUS)   ...</li>
<li>Column: Ano (Table: SAU_Estabelecimento de saude(DataSUS))</li>
<li>Column: Num_Estabelecimentos_Saude (Table: SAU_Estabelecimento de saude(DataSUS))</li>
</ul></li>
<li><span class="caret">Measure: Tendência TX Desemprego (Table: SOC_Taxa de desemprego (IBGE - Continua))</span>
<ul class="nested">
<li>Table: SOC_Taxa de desemprego (IBGE - Continua)   ...</li>
<li>Column: Taxa Desemprego % (Table: SOC_Taxa de desemprego (IBGE - Continua))</li>
<li>Column: Trimestres (Table: SOC_Taxa de desemprego (IBGE - Continua))</li>
</ul></li>
<li><span class="caret">Measure: Tendência TX Pobreza (Table: SOC_Taxa de Pobreza)</span>
<ul class="nested">
<li>Table: SOC_Taxa de Pobreza   ...</li>
<li>Column: Ano (Table: SOC_Taxa de Pobreza)</li>
<li>Column: Taxa de Pobreza (Table: SOC_Taxa de Pobreza)</li>
</ul></li>
<li><span class="caret">Measure: Tendência_Renda_per_capita (Table: FIN_Renda per capita (Atlas DH - Pnad Contínua/A))</span>
<ul class="nested">
<li>Table: FIN_Renda per capita (Atlas DH - Pnad Contínua/A)   ...</li>
<li>Column: Ano (Table: FIN_Renda per capita (Atlas DH - Pnad Contínua/A))</li>
<li>Column: Renda per Capita (Table: FIN_Renda per capita (Atlas DH - Pnad Contínua/A))</li>
</ul></li>
<li><span class="caret">Measure: Tendência_Receita_Despesa (Table: FIN_Receitas x Despesas)</span>
<ul class="nested">
<li>Table: FIN_Receitas x Despesas   ...</li>
<li>Column: Ano (Table: FIN_Receitas x Despesas)</li>
<li>Column: Receita - Despesa (Table: FIN_Receitas x Despesas)</li>
</ul></li>
<li><span class="caret">Measure: Tendência Gini (Table: SOC_Indice de Gini)</span>
<ul class="nested">
<li>Table: SOC_Indice de Gini   ...</li>
<li>Column: Ano (Table: SOC_Indice de Gini)</li>
<li>Column: Indice de Gini (Table: SOC_Indice de Gini)</li>
</ul></li>
<li><span class="caret">Measure: Tendência homicídios (Table: SEG_Homicidios por 100k Habitantes)</span>
<ul class="nested">
<li>Table: SEG_Homicidios por 100k Habitantes   ...</li>
<li>Column: Ano (Table: SEG_Homicidios por 100k Habitantes)</li>
<li>Column: Tx Homicidio por 100.000 Habitantes (Table: SEG_Homicidios por 100k Habitantes)</li>
</ul></li>
<li><span class="caret">Measure: Tendência Médicos (Table: SAU_Medicos por 10k Habitantes)</span>
<ul class="nested">
<li>Table: SAU_Medicos por 10k Habitantes   ...</li>
<li>Column: Ano (Table: SAU_Medicos por 10k Habitantes)</li>
<li>Column: Médicos por 10.000 Habitantes (Table: SAU_Medicos por 10k Habitantes)</li>
</ul></li>
<li><span class="caret">Measure: Tendência PIB (Table: FIN_PIB Estadual)</span>
<ul class="nested">
<li>Table: FIN_PIB Estadual   ...</li>
<li>Column: Ano (Table: FIN_PIB Estadual)</li>
<li><span class="caret">Calc_Column: % Relação PIB Brasil (Table: FIN_PIB Estadual)</span>
<ul class="nested">
<li>Table: UFs(ibge)</li>
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: nome_UF (Table: UFs(ibge))</li>
<li><span class="caret">Active_Relationship: AutoDetected_a246f32d-387f-42e4-b705-bb7914d5cdfa (Table: Populacao Historica UFs)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: Populacao Historica UFs)</li>
</ul></li>
<li>Table: FIN_PIB Estadual   ...</li>
<li><span class="caret">Active_Relationship: AutoDetected_87c24f61-8d9a-4dc9-bea7-e8cbf09616ac (Table: FIN_PIB Estadual)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: FIN_PIB Estadual)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_db1f02aa-0656-4f68-9fc2-e1645db3712b (Table: SOC_IDHM_por_UF)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SOC_IDHM_por_UF)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_a10f45fd-8455-4635-ba30-68c3a0600aa4 (Table: EDU_% Alunos na Rede Pública)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: EDU_% Alunos na Rede Pública)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_4d399378-d1e9-4da9-9731-a4b9285a07a1 (Table: Governadores (wikimedia))</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: Governadores (wikimedia))</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_fb8ecac6-2b2f-4179-8d08-3bd4468a4b27 (Table: SOC_Taxa de desemprego (IBGE - Continua))</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SOC_Taxa de desemprego (IBGE - Continua))</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_453f7fe0-f30f-4c04-b67b-98945e1e3193 (Table: SAU_Estabelecimento de saude(DataSUS))</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SAU_Estabelecimento de saude(DataSUS))</li>
</ul></li>
<li><span class="caret">Calc_Column: PIB Brasil no ano (Table: FIN_PIB Estadual)</span>
<ul class="nested">
<li>Table: FIN_PIB Estadual   ...</li>
<li><span class="caret">Active_Relationship: AutoDetected_6c0dd54d-e968-4d33-8786-7cb70e508099 (Table: FIN_PIB Estadual)</span>
<ul class="nested">
<li>Column: Ano (Table: FIN_PIB Estadual)</li>
<li>Column: Ano (Table: FIN_PIB Brasil)</li>
</ul></li>
<li><span class="caret">Calc_Column: Valor PIB Brasil (Table: FIN_PIB Brasil)</span>
<ul class="nested">
<li>Table: FIN_PIB Brasil   ...</li>
<li>Column: Valor PIB Brasil em trilhao (Table: FIN_PIB Brasil)</li>
</ul></li>
</ul></li>
<li><span class="caret">Active_Relationship: 9814f3b3-68d4-c04d-9488-ad96336ebe05 (Table: SAU_Medicos por 10k Habitantes)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SAU_Medicos por 10k Habitantes)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_ff3d9f0f-58ee-451e-a51d-2341be5a78bc (Table: SEG_Homicidios por 100k Habitantes)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SEG_Homicidios por 100k Habitantes)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_cd34beed-1479-4826-9ea5-8237e1c4329c (Table: SOC_Taxa de Pobreza)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SOC_Taxa de Pobreza)</li>
</ul></li>
<li><span class="caret">Calc_Column: Valor PIB Estadual (Table: FIN_PIB Estadual)</span>
<ul class="nested">
<li>Table: FIN_PIB Estadual   ...</li>
<li>Column: Valor PIB Estadual / 1000 (Table: FIN_PIB Estadual)</li>
</ul></li>
<li><span class="caret">Measure: Estado_Selecionado (Table: UFs(ibge))</span>
<ul class="nested">
<li>Table: UFs(ibge)   ...</li>
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: nome_UF (Table: UFs(ibge))</li>
<li>Column: id_map (Table: UFs(ibge))</li>
</ul></li>
<li><span class="caret">Active_Relationship: a0414d31-a10c-455e-14b2-d5a10da59a87 (Table: FIN_Despesas correntes - estadual)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: FIN_Despesas correntes - estadual)</li>
</ul></li>
<li><span class="caret">Active_Relationship: 6c88188d-6ec6-c6fd-6bd3-c626b12c8983 (Table: FIN_Receita corrente - receita bruta - estadual)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: FIN_Receita corrente - receita bruta - estadual)</li>
</ul></li>
<li><span class="caret">Active_Relationship: b83678b1-77df-39c9-4779-ca52d7d0fb39 (Table: FIN_Renda per capita (Atlas DH - Pnad Contínua/A))</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: FIN_Renda per capita (Atlas DH - Pnad Contínua/A))</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_00aacb91-59e0-4e8c-82a6-36e6c47ac7cd (Table: FIN_Receitas x Despesas)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: FIN_Receitas x Despesas)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_cc03ed78-861f-4978-91e7-32a39b1da662 (Table: SOC_Indice de Gini)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SOC_Indice de Gini)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_b2a9d9f4-d0a3-4827-a3d6-0382a16d0cf1 (Table: SEG_Ocorrências Criminais)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SEG_Ocorrências Criminais)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_28a9e196-fb3f-4b2d-a551-d9d3f0faea81 (Table: PIB Estadual histórico)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: PIB Estadual histórico)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_12fb90f4-bad5-445b-b5cf-a56e48b8d495 (Table: SOC_Taxa de desemprego por Ano (IBGE - Continua))</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SOC_Taxa de desemprego por Ano (IBGE - Continua))</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_ab6ed497-2fe6-4d19-be33-232f9b5c1709 (Table: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_1a7af5f8-de76-4207-9310-5978ba65ad89 (Table: Indices_agregados_classificados)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: Indices_agregados_classificados)</li>
</ul></li>
<li><span class="caret">Active_Relationship: 4214c873-4923-84e3-0575-0219811bfa6b (Table: Indices Ano mais recente)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Calc_Column: Sigla_UF (Table: Indices Ano mais recente)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_1c758e6b-cae8-4a7b-82d3-fd6d61e00112 (Table: Territorios(ipea))</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: Territorios(ipea))</li>
</ul></li>
<li><span class="caret">Active_Relationship: a03fdb86-b031-65e4-0dd5-24d8bb872d7a (Table: Indices_mais_recentes)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: Indices_mais_recentes)</li>
</ul></li>
</ul></li>
</ul></li>
<li><span class="caret">Measure: Tendência_TX_Analfa (Table: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais)</span>
<ul class="nested">
<li>Table: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais   ...</li>
<li>Column: Ano (Table: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais)</li>
<li>Column: Taxa Analfabetismo (Table: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais)</li>
</ul></li>
</ul></span></li>
</ul></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Pontuação Média dos Estados</span><span class="dropDownCaret">
<ul class="nested">
<li>Measure: Posicao</li>
</ul></span></li>
</ul></td>
	</tr>
	<tr>
		<td>Posicao</td>
		<td>UFs(ibge)</td>
		<td></td>
		<td><pre>
RANKX (
    ALL ( 'UFs(ibge)'[Sigla_UF] ),
    [Pontuação Média dos Estados],
    ,
    DESC,
    DENSE
)</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Posicao</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: UFs(ibge)</li>
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li><span class="caret">Measure: Pontuação Média dos Estados (Table: UFs(ibge))</span>
<ul class="nested">
<li><span class="caret">Measure: Tendência UF (Table: SOC_IDHM_por_UF)</span>
<ul class="nested">
<li>Table: SOC_IDHM_por_UF   ...</li>
<li>Column: Ano (Table: SOC_IDHM_por_UF)</li>
<li>Column: IDHM_UF (Table: SOC_IDHM_por_UF)</li>
</ul></li>
<li><span class="caret">Measure: Tendência (Table: EDU_% Alunos na Rede Pública)</span>
<ul class="nested">
<li>Table: EDU_% Alunos na Rede Pública   ...</li>
<li>Column: Ano (Table: EDU_% Alunos na Rede Pública)</li>
<li>Column: Valor(%) (Table: EDU_% Alunos na Rede Pública)</li>
</ul></li>
<li><span class="caret">Measure: Tendência_#_Estabelecimentos (Table: SAU_Estabelecimento de saude(DataSUS))</span>
<ul class="nested">
<li>Table: SAU_Estabelecimento de saude(DataSUS)   ...</li>
<li>Column: Ano (Table: SAU_Estabelecimento de saude(DataSUS))</li>
<li>Column: Num_Estabelecimentos_Saude (Table: SAU_Estabelecimento de saude(DataSUS))</li>
</ul></li>
<li><span class="caret">Measure: Tendência TX Desemprego (Table: SOC_Taxa de desemprego (IBGE - Continua))</span>
<ul class="nested">
<li>Table: SOC_Taxa de desemprego (IBGE - Continua)   ...</li>
<li>Column: Taxa Desemprego % (Table: SOC_Taxa de desemprego (IBGE - Continua))</li>
<li>Column: Trimestres (Table: SOC_Taxa de desemprego (IBGE - Continua))</li>
</ul></li>
<li><span class="caret">Measure: Tendência TX Pobreza (Table: SOC_Taxa de Pobreza)</span>
<ul class="nested">
<li>Table: SOC_Taxa de Pobreza   ...</li>
<li>Column: Ano (Table: SOC_Taxa de Pobreza)</li>
<li>Column: Taxa de Pobreza (Table: SOC_Taxa de Pobreza)</li>
</ul></li>
<li><span class="caret">Measure: Tendência_Renda_per_capita (Table: FIN_Renda per capita (Atlas DH - Pnad Contínua/A))</span>
<ul class="nested">
<li>Table: FIN_Renda per capita (Atlas DH - Pnad Contínua/A)   ...</li>
<li>Column: Ano (Table: FIN_Renda per capita (Atlas DH - Pnad Contínua/A))</li>
<li>Column: Renda per Capita (Table: FIN_Renda per capita (Atlas DH - Pnad Contínua/A))</li>
</ul></li>
<li><span class="caret">Measure: Tendência_Receita_Despesa (Table: FIN_Receitas x Despesas)</span>
<ul class="nested">
<li>Table: FIN_Receitas x Despesas   ...</li>
<li>Column: Ano (Table: FIN_Receitas x Despesas)</li>
<li>Column: Receita - Despesa (Table: FIN_Receitas x Despesas)</li>
</ul></li>
<li><span class="caret">Measure: Tendência Gini (Table: SOC_Indice de Gini)</span>
<ul class="nested">
<li>Table: SOC_Indice de Gini   ...</li>
<li>Column: Ano (Table: SOC_Indice de Gini)</li>
<li>Column: Indice de Gini (Table: SOC_Indice de Gini)</li>
</ul></li>
<li><span class="caret">Measure: Tendência homicídios (Table: SEG_Homicidios por 100k Habitantes)</span>
<ul class="nested">
<li>Table: SEG_Homicidios por 100k Habitantes   ...</li>
<li>Column: Ano (Table: SEG_Homicidios por 100k Habitantes)</li>
<li>Column: Tx Homicidio por 100.000 Habitantes (Table: SEG_Homicidios por 100k Habitantes)</li>
</ul></li>
<li><span class="caret">Measure: Tendência Médicos (Table: SAU_Medicos por 10k Habitantes)</span>
<ul class="nested">
<li>Table: SAU_Medicos por 10k Habitantes   ...</li>
<li>Column: Ano (Table: SAU_Medicos por 10k Habitantes)</li>
<li>Column: Médicos por 10.000 Habitantes (Table: SAU_Medicos por 10k Habitantes)</li>
</ul></li>
<li><span class="caret">Measure: Tendência PIB (Table: FIN_PIB Estadual)</span>
<ul class="nested">
<li>Table: FIN_PIB Estadual   ...</li>
<li>Column: Ano (Table: FIN_PIB Estadual)</li>
<li><span class="caret">Calc_Column: % Relação PIB Brasil (Table: FIN_PIB Estadual)</span>
<ul class="nested">
<li>Table: UFs(ibge)   ...</li>
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: nome_UF (Table: UFs(ibge))</li>
<li><span class="caret">Active_Relationship: AutoDetected_a246f32d-387f-42e4-b705-bb7914d5cdfa (Table: Populacao Historica UFs)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: Populacao Historica UFs)</li>
</ul></li>
<li>Table: FIN_PIB Estadual   ...</li>
<li><span class="caret">Active_Relationship: AutoDetected_87c24f61-8d9a-4dc9-bea7-e8cbf09616ac (Table: FIN_PIB Estadual)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: FIN_PIB Estadual)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_db1f02aa-0656-4f68-9fc2-e1645db3712b (Table: SOC_IDHM_por_UF)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SOC_IDHM_por_UF)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_a10f45fd-8455-4635-ba30-68c3a0600aa4 (Table: EDU_% Alunos na Rede Pública)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: EDU_% Alunos na Rede Pública)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_4d399378-d1e9-4da9-9731-a4b9285a07a1 (Table: Governadores (wikimedia))</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: Governadores (wikimedia))</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_fb8ecac6-2b2f-4179-8d08-3bd4468a4b27 (Table: SOC_Taxa de desemprego (IBGE - Continua))</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SOC_Taxa de desemprego (IBGE - Continua))</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_453f7fe0-f30f-4c04-b67b-98945e1e3193 (Table: SAU_Estabelecimento de saude(DataSUS))</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SAU_Estabelecimento de saude(DataSUS))</li>
</ul></li>
<li><span class="caret">Calc_Column: PIB Brasil no ano (Table: FIN_PIB Estadual)</span>
<ul class="nested">
<li>Table: FIN_PIB Estadual   ...</li>
<li><span class="caret">Active_Relationship: AutoDetected_6c0dd54d-e968-4d33-8786-7cb70e508099 (Table: FIN_PIB Estadual)</span>
<ul class="nested">
<li>Column: Ano (Table: FIN_PIB Estadual)</li>
<li>Column: Ano (Table: FIN_PIB Brasil)</li>
</ul></li>
<li><span class="caret">Calc_Column: Valor PIB Brasil (Table: FIN_PIB Brasil)</span>
<ul class="nested">
<li>Table: FIN_PIB Brasil   ...</li>
<li>Column: Valor PIB Brasil em trilhao (Table: FIN_PIB Brasil)</li>
</ul></li>
</ul></li>
<li><span class="caret">Active_Relationship: 9814f3b3-68d4-c04d-9488-ad96336ebe05 (Table: SAU_Medicos por 10k Habitantes)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SAU_Medicos por 10k Habitantes)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_ff3d9f0f-58ee-451e-a51d-2341be5a78bc (Table: SEG_Homicidios por 100k Habitantes)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SEG_Homicidios por 100k Habitantes)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_cd34beed-1479-4826-9ea5-8237e1c4329c (Table: SOC_Taxa de Pobreza)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SOC_Taxa de Pobreza)</li>
</ul></li>
<li><span class="caret">Calc_Column: Valor PIB Estadual (Table: FIN_PIB Estadual)</span>
<ul class="nested">
<li>Table: FIN_PIB Estadual   ...</li>
<li>Column: Valor PIB Estadual / 1000 (Table: FIN_PIB Estadual)</li>
</ul></li>
<li><span class="caret">Measure: Estado_Selecionado (Table: UFs(ibge))</span>
<ul class="nested">
<li>Table: UFs(ibge)   ...</li>
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: nome_UF (Table: UFs(ibge))</li>
<li>Column: id_map (Table: UFs(ibge))</li>
</ul></li>
<li><span class="caret">Active_Relationship: a0414d31-a10c-455e-14b2-d5a10da59a87 (Table: FIN_Despesas correntes - estadual)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: FIN_Despesas correntes - estadual)</li>
</ul></li>
<li><span class="caret">Active_Relationship: 6c88188d-6ec6-c6fd-6bd3-c626b12c8983 (Table: FIN_Receita corrente - receita bruta - estadual)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: FIN_Receita corrente - receita bruta - estadual)</li>
</ul></li>
<li><span class="caret">Active_Relationship: b83678b1-77df-39c9-4779-ca52d7d0fb39 (Table: FIN_Renda per capita (Atlas DH - Pnad Contínua/A))</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: FIN_Renda per capita (Atlas DH - Pnad Contínua/A))</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_00aacb91-59e0-4e8c-82a6-36e6c47ac7cd (Table: FIN_Receitas x Despesas)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: FIN_Receitas x Despesas)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_cc03ed78-861f-4978-91e7-32a39b1da662 (Table: SOC_Indice de Gini)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SOC_Indice de Gini)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_b2a9d9f4-d0a3-4827-a3d6-0382a16d0cf1 (Table: SEG_Ocorrências Criminais)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SEG_Ocorrências Criminais)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_28a9e196-fb3f-4b2d-a551-d9d3f0faea81 (Table: PIB Estadual histórico)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: PIB Estadual histórico)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_12fb90f4-bad5-445b-b5cf-a56e48b8d495 (Table: SOC_Taxa de desemprego por Ano (IBGE - Continua))</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SOC_Taxa de desemprego por Ano (IBGE - Continua))</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_ab6ed497-2fe6-4d19-be33-232f9b5c1709 (Table: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_1a7af5f8-de76-4207-9310-5978ba65ad89 (Table: Indices_agregados_classificados)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: Indices_agregados_classificados)</li>
</ul></li>
<li><span class="caret">Active_Relationship: 4214c873-4923-84e3-0575-0219811bfa6b (Table: Indices Ano mais recente)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Calc_Column: Sigla_UF (Table: Indices Ano mais recente)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_1c758e6b-cae8-4a7b-82d3-fd6d61e00112 (Table: Territorios(ipea))</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: Territorios(ipea))</li>
</ul></li>
<li><span class="caret">Active_Relationship: a03fdb86-b031-65e4-0dd5-24d8bb872d7a (Table: Indices_mais_recentes)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: Indices_mais_recentes)</li>
</ul></li>
</ul></li>
</ul></li>
<li><span class="caret">Measure: Tendência_TX_Analfa (Table: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais)</span>
<ul class="nested">
<li>Table: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais   ...</li>
<li>Column: Ano (Table: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais)</li>
<li>Column: Taxa Analfabetismo (Table: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais)</li>
</ul></li>
</ul></li>
</ul></span></li>
</ul></td>
		<td>Measure: Posicao</td>
	</tr>
	<tr>
		<td>Med_Popula&#231;&#227;o</td>
		<td>Populacao Historica UFs</td>
		<td></td>
		<td><pre>
CALCULATE (
    SUM ( 'Populacao Historica UFs'[População] ),
    FILTER (
        'Populacao Historica UFs',
        'Populacao Historica UFs'[Ano] = MAX ( 'Populacao Historica UFs'[Ano] )
    )
)</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Med_População</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: Populacao Historica UFs</li>
<li>Column: Ano (Table: Populacao Historica UFs)</li>
<li>Column: População (Table: Populacao Historica UFs)</li>
</ul></span></li>
</ul></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Med_População</span><span class="dropDownCaret">
<ul class="nested">
<li>Measure: Habitante por Km2</li>
</ul></span></li>
</ul></td>
	</tr>
	<tr>
		<td>Tend&#234;ncia PIB</td>
		<td>FIN_PIB Estadual</td>
		<td></td>
		<td><pre>
VAR media =
    DIVIDE (
        SUM ( [% Relação PIB Brasil] ),
        DISTINCTCOUNT ( 'FIN_PIB Estadual'[Ano] ),
        "-"
    )
VAR Ultimo_valor =
    CALCULATE (
        MAX ( 'FIN_PIB Estadual'[% Relação PIB Brasil] ),
        LASTNONBLANK ( 'FIN_PIB Estadual'[Ano], 1 )
    )
RETURN
    IF (
        Ultimo_valor > media,
        "Alta",
        IF ( Ultimo_valor < media, "Queda", "Estável" )
    )</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Tendência PIB</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: FIN_PIB Estadual</li>
<li>Column: Ano (Table: FIN_PIB Estadual)</li>
<li><span class="caret">Calc_Column: % Relação PIB Brasil (Table: FIN_PIB Estadual)</span>
<ul class="nested">
<li>Table: UFs(ibge)</li>
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: nome_UF (Table: UFs(ibge))</li>
<li><span class="caret">Active_Relationship: AutoDetected_a246f32d-387f-42e4-b705-bb7914d5cdfa (Table: Populacao Historica UFs)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: Populacao Historica UFs)</li>
</ul></li>
<li>Table: FIN_PIB Estadual   ...</li>
<li><span class="caret">Active_Relationship: AutoDetected_87c24f61-8d9a-4dc9-bea7-e8cbf09616ac (Table: FIN_PIB Estadual)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: FIN_PIB Estadual)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_db1f02aa-0656-4f68-9fc2-e1645db3712b (Table: SOC_IDHM_por_UF)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SOC_IDHM_por_UF)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_a10f45fd-8455-4635-ba30-68c3a0600aa4 (Table: EDU_% Alunos na Rede Pública)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: EDU_% Alunos na Rede Pública)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_4d399378-d1e9-4da9-9731-a4b9285a07a1 (Table: Governadores (wikimedia))</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: Governadores (wikimedia))</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_fb8ecac6-2b2f-4179-8d08-3bd4468a4b27 (Table: SOC_Taxa de desemprego (IBGE - Continua))</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SOC_Taxa de desemprego (IBGE - Continua))</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_453f7fe0-f30f-4c04-b67b-98945e1e3193 (Table: SAU_Estabelecimento de saude(DataSUS))</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SAU_Estabelecimento de saude(DataSUS))</li>
</ul></li>
<li><span class="caret">Calc_Column: PIB Brasil no ano (Table: FIN_PIB Estadual)</span>
<ul class="nested">
<li>Table: FIN_PIB Estadual   ...</li>
<li><span class="caret">Active_Relationship: AutoDetected_6c0dd54d-e968-4d33-8786-7cb70e508099 (Table: FIN_PIB Estadual)</span>
<ul class="nested">
<li>Column: Ano (Table: FIN_PIB Estadual)</li>
<li>Column: Ano (Table: FIN_PIB Brasil)</li>
</ul></li>
<li><span class="caret">Calc_Column: Valor PIB Brasil (Table: FIN_PIB Brasil)</span>
<ul class="nested">
<li>Table: FIN_PIB Brasil   ...</li>
<li>Column: Valor PIB Brasil em trilhao (Table: FIN_PIB Brasil)</li>
</ul></li>
</ul></li>
<li><span class="caret">Active_Relationship: 9814f3b3-68d4-c04d-9488-ad96336ebe05 (Table: SAU_Medicos por 10k Habitantes)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SAU_Medicos por 10k Habitantes)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_ff3d9f0f-58ee-451e-a51d-2341be5a78bc (Table: SEG_Homicidios por 100k Habitantes)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SEG_Homicidios por 100k Habitantes)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_cd34beed-1479-4826-9ea5-8237e1c4329c (Table: SOC_Taxa de Pobreza)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SOC_Taxa de Pobreza)</li>
</ul></li>
<li><span class="caret">Calc_Column: Valor PIB Estadual (Table: FIN_PIB Estadual)</span>
<ul class="nested">
<li>Table: FIN_PIB Estadual   ...</li>
<li>Column: Valor PIB Estadual / 1000 (Table: FIN_PIB Estadual)</li>
</ul></li>
<li><span class="caret">Measure: Estado_Selecionado (Table: UFs(ibge))</span>
<ul class="nested">
<li>Table: UFs(ibge)   ...</li>
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: nome_UF (Table: UFs(ibge))</li>
<li>Column: id_map (Table: UFs(ibge))</li>
</ul></li>
<li><span class="caret">Active_Relationship: a0414d31-a10c-455e-14b2-d5a10da59a87 (Table: FIN_Despesas correntes - estadual)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: FIN_Despesas correntes - estadual)</li>
</ul></li>
<li><span class="caret">Active_Relationship: 6c88188d-6ec6-c6fd-6bd3-c626b12c8983 (Table: FIN_Receita corrente - receita bruta - estadual)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: FIN_Receita corrente - receita bruta - estadual)</li>
</ul></li>
<li><span class="caret">Active_Relationship: b83678b1-77df-39c9-4779-ca52d7d0fb39 (Table: FIN_Renda per capita (Atlas DH - Pnad Contínua/A))</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: FIN_Renda per capita (Atlas DH - Pnad Contínua/A))</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_00aacb91-59e0-4e8c-82a6-36e6c47ac7cd (Table: FIN_Receitas x Despesas)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: FIN_Receitas x Despesas)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_cc03ed78-861f-4978-91e7-32a39b1da662 (Table: SOC_Indice de Gini)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SOC_Indice de Gini)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_b2a9d9f4-d0a3-4827-a3d6-0382a16d0cf1 (Table: SEG_Ocorrências Criminais)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SEG_Ocorrências Criminais)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_28a9e196-fb3f-4b2d-a551-d9d3f0faea81 (Table: PIB Estadual histórico)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: PIB Estadual histórico)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_12fb90f4-bad5-445b-b5cf-a56e48b8d495 (Table: SOC_Taxa de desemprego por Ano (IBGE - Continua))</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SOC_Taxa de desemprego por Ano (IBGE - Continua))</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_ab6ed497-2fe6-4d19-be33-232f9b5c1709 (Table: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_1a7af5f8-de76-4207-9310-5978ba65ad89 (Table: Indices_agregados_classificados)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: Indices_agregados_classificados)</li>
</ul></li>
<li><span class="caret">Active_Relationship: 4214c873-4923-84e3-0575-0219811bfa6b (Table: Indices Ano mais recente)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Calc_Column: Sigla_UF (Table: Indices Ano mais recente)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_1c758e6b-cae8-4a7b-82d3-fd6d61e00112 (Table: Territorios(ipea))</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: Territorios(ipea))</li>
</ul></li>
<li><span class="caret">Active_Relationship: a03fdb86-b031-65e4-0dd5-24d8bb872d7a (Table: Indices_mais_recentes)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: Indices_mais_recentes)</li>
</ul></li>
</ul></li>
</ul></span></li>
</ul></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Tendência PIB</span><span class="dropDownCaret">
<ul class="nested">
<li><span class="caret">Measure: Pontuação Média dos Estados</span>
<ul class="nested">
<li>Measure: Posicao</li>
</ul></li>
</ul></span></li>
</ul></td>
	</tr>
	<tr>
		<td>Tendencia_PIB_Valorizado</td>
		<td>FIN_PIB Estadual</td>
		<td></td>
		<td><pre>
VAR media =
    CALCULATE (
        DIVIDE (
            SUM ( 'FIN_PIB Estadual'[% Relação PIB Brasil] ),
            DISTINCTCOUNT ( 'FIN_PIB Estadual'[Ano] ),
            "-"
        ),
        REMOVEFILTERS ( 'FIN_PIB Estadual'[Ano] )
    )
VAR Ultimo_valor =
    CALCULATE (
        MAX ( 'FIN_PIB Estadual'[% Relação PIB Brasil] ),
        LASTNONBLANK ( 'FIN_PIB Estadual'[Ano], 1 )
    )
RETURN
    IF (
        Ultimo_valor = media,
        Ultimo_valor,
        IF ( Ultimo_valor > media, 0, IF ( Ultimo_valor < media, 100, -1 ) )
    )</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Tendencia_PIB_Valorizado</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: FIN_PIB Estadual</li>
<li>Column: Ano (Table: FIN_PIB Estadual)</li>
<li><span class="caret">Calc_Column: % Relação PIB Brasil (Table: FIN_PIB Estadual)</span>
<ul class="nested">
<li>Table: UFs(ibge)</li>
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: nome_UF (Table: UFs(ibge))</li>
<li><span class="caret">Active_Relationship: AutoDetected_a246f32d-387f-42e4-b705-bb7914d5cdfa (Table: Populacao Historica UFs)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: Populacao Historica UFs)</li>
</ul></li>
<li>Table: FIN_PIB Estadual   ...</li>
<li><span class="caret">Active_Relationship: AutoDetected_87c24f61-8d9a-4dc9-bea7-e8cbf09616ac (Table: FIN_PIB Estadual)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: FIN_PIB Estadual)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_db1f02aa-0656-4f68-9fc2-e1645db3712b (Table: SOC_IDHM_por_UF)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SOC_IDHM_por_UF)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_a10f45fd-8455-4635-ba30-68c3a0600aa4 (Table: EDU_% Alunos na Rede Pública)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: EDU_% Alunos na Rede Pública)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_4d399378-d1e9-4da9-9731-a4b9285a07a1 (Table: Governadores (wikimedia))</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: Governadores (wikimedia))</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_fb8ecac6-2b2f-4179-8d08-3bd4468a4b27 (Table: SOC_Taxa de desemprego (IBGE - Continua))</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SOC_Taxa de desemprego (IBGE - Continua))</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_453f7fe0-f30f-4c04-b67b-98945e1e3193 (Table: SAU_Estabelecimento de saude(DataSUS))</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SAU_Estabelecimento de saude(DataSUS))</li>
</ul></li>
<li><span class="caret">Calc_Column: PIB Brasil no ano (Table: FIN_PIB Estadual)</span>
<ul class="nested">
<li>Table: FIN_PIB Estadual   ...</li>
<li><span class="caret">Active_Relationship: AutoDetected_6c0dd54d-e968-4d33-8786-7cb70e508099 (Table: FIN_PIB Estadual)</span>
<ul class="nested">
<li>Column: Ano (Table: FIN_PIB Estadual)</li>
<li>Column: Ano (Table: FIN_PIB Brasil)</li>
</ul></li>
<li><span class="caret">Calc_Column: Valor PIB Brasil (Table: FIN_PIB Brasil)</span>
<ul class="nested">
<li>Table: FIN_PIB Brasil   ...</li>
<li>Column: Valor PIB Brasil em trilhao (Table: FIN_PIB Brasil)</li>
</ul></li>
</ul></li>
<li><span class="caret">Active_Relationship: 9814f3b3-68d4-c04d-9488-ad96336ebe05 (Table: SAU_Medicos por 10k Habitantes)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SAU_Medicos por 10k Habitantes)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_ff3d9f0f-58ee-451e-a51d-2341be5a78bc (Table: SEG_Homicidios por 100k Habitantes)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SEG_Homicidios por 100k Habitantes)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_cd34beed-1479-4826-9ea5-8237e1c4329c (Table: SOC_Taxa de Pobreza)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SOC_Taxa de Pobreza)</li>
</ul></li>
<li><span class="caret">Calc_Column: Valor PIB Estadual (Table: FIN_PIB Estadual)</span>
<ul class="nested">
<li>Table: FIN_PIB Estadual   ...</li>
<li>Column: Valor PIB Estadual / 1000 (Table: FIN_PIB Estadual)</li>
</ul></li>
<li><span class="caret">Measure: Estado_Selecionado (Table: UFs(ibge))</span>
<ul class="nested">
<li>Table: UFs(ibge)   ...</li>
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: nome_UF (Table: UFs(ibge))</li>
<li>Column: id_map (Table: UFs(ibge))</li>
</ul></li>
<li><span class="caret">Active_Relationship: a0414d31-a10c-455e-14b2-d5a10da59a87 (Table: FIN_Despesas correntes - estadual)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: FIN_Despesas correntes - estadual)</li>
</ul></li>
<li><span class="caret">Active_Relationship: 6c88188d-6ec6-c6fd-6bd3-c626b12c8983 (Table: FIN_Receita corrente - receita bruta - estadual)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: FIN_Receita corrente - receita bruta - estadual)</li>
</ul></li>
<li><span class="caret">Active_Relationship: b83678b1-77df-39c9-4779-ca52d7d0fb39 (Table: FIN_Renda per capita (Atlas DH - Pnad Contínua/A))</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: FIN_Renda per capita (Atlas DH - Pnad Contínua/A))</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_00aacb91-59e0-4e8c-82a6-36e6c47ac7cd (Table: FIN_Receitas x Despesas)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: FIN_Receitas x Despesas)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_cc03ed78-861f-4978-91e7-32a39b1da662 (Table: SOC_Indice de Gini)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SOC_Indice de Gini)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_b2a9d9f4-d0a3-4827-a3d6-0382a16d0cf1 (Table: SEG_Ocorrências Criminais)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SEG_Ocorrências Criminais)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_28a9e196-fb3f-4b2d-a551-d9d3f0faea81 (Table: PIB Estadual histórico)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: PIB Estadual histórico)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_12fb90f4-bad5-445b-b5cf-a56e48b8d495 (Table: SOC_Taxa de desemprego por Ano (IBGE - Continua))</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SOC_Taxa de desemprego por Ano (IBGE - Continua))</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_ab6ed497-2fe6-4d19-be33-232f9b5c1709 (Table: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_1a7af5f8-de76-4207-9310-5978ba65ad89 (Table: Indices_agregados_classificados)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: Indices_agregados_classificados)</li>
</ul></li>
<li><span class="caret">Active_Relationship: 4214c873-4923-84e3-0575-0219811bfa6b (Table: Indices Ano mais recente)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Calc_Column: Sigla_UF (Table: Indices Ano mais recente)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_1c758e6b-cae8-4a7b-82d3-fd6d61e00112 (Table: Territorios(ipea))</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: Territorios(ipea))</li>
</ul></li>
<li><span class="caret">Active_Relationship: a03fdb86-b031-65e4-0dd5-24d8bb872d7a (Table: Indices_mais_recentes)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: Indices_mais_recentes)</li>
</ul></li>
</ul></li>
</ul></span></li>
</ul></td>
		<td>Measure: Tendencia_PIB_Valorizado</td>
	</tr>
	<tr>
		<td>Media</td>
		<td>FIN_PIB Estadual</td>
		<td></td>
		<td><pre>
VAR media =
    CALCULATE (
        DIVIDE (
            SUM ( 'FIN_PIB Estadual'[% Relação PIB Brasil] ),
            DISTINCTCOUNT ( 'FIN_PIB Estadual'[Ano] ),
            "-"
        ),
        REMOVEFILTERS ( 'FIN_PIB Estadual'[Ano] )
    )
VAR Ultimo_valor =
    CALCULATE (
        MAX ( 'FIN_PIB Estadual'[% Relação PIB Brasil] ),
        LASTNONBLANK ( 'FIN_PIB Estadual'[Ano], 1 )
    )
RETURN
    media</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Media</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: FIN_PIB Estadual</li>
<li>Column: Ano (Table: FIN_PIB Estadual)</li>
<li><span class="caret">Calc_Column: % Relação PIB Brasil (Table: FIN_PIB Estadual)</span>
<ul class="nested">
<li>Table: UFs(ibge)</li>
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: nome_UF (Table: UFs(ibge))</li>
<li><span class="caret">Active_Relationship: AutoDetected_a246f32d-387f-42e4-b705-bb7914d5cdfa (Table: Populacao Historica UFs)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: Populacao Historica UFs)</li>
</ul></li>
<li>Table: FIN_PIB Estadual   ...</li>
<li><span class="caret">Active_Relationship: AutoDetected_87c24f61-8d9a-4dc9-bea7-e8cbf09616ac (Table: FIN_PIB Estadual)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: FIN_PIB Estadual)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_db1f02aa-0656-4f68-9fc2-e1645db3712b (Table: SOC_IDHM_por_UF)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SOC_IDHM_por_UF)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_a10f45fd-8455-4635-ba30-68c3a0600aa4 (Table: EDU_% Alunos na Rede Pública)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: EDU_% Alunos na Rede Pública)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_4d399378-d1e9-4da9-9731-a4b9285a07a1 (Table: Governadores (wikimedia))</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: Governadores (wikimedia))</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_fb8ecac6-2b2f-4179-8d08-3bd4468a4b27 (Table: SOC_Taxa de desemprego (IBGE - Continua))</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SOC_Taxa de desemprego (IBGE - Continua))</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_453f7fe0-f30f-4c04-b67b-98945e1e3193 (Table: SAU_Estabelecimento de saude(DataSUS))</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SAU_Estabelecimento de saude(DataSUS))</li>
</ul></li>
<li><span class="caret">Calc_Column: PIB Brasil no ano (Table: FIN_PIB Estadual)</span>
<ul class="nested">
<li>Table: FIN_PIB Estadual   ...</li>
<li><span class="caret">Active_Relationship: AutoDetected_6c0dd54d-e968-4d33-8786-7cb70e508099 (Table: FIN_PIB Estadual)</span>
<ul class="nested">
<li>Column: Ano (Table: FIN_PIB Estadual)</li>
<li>Column: Ano (Table: FIN_PIB Brasil)</li>
</ul></li>
<li><span class="caret">Calc_Column: Valor PIB Brasil (Table: FIN_PIB Brasil)</span>
<ul class="nested">
<li>Table: FIN_PIB Brasil   ...</li>
<li>Column: Valor PIB Brasil em trilhao (Table: FIN_PIB Brasil)</li>
</ul></li>
</ul></li>
<li><span class="caret">Active_Relationship: 9814f3b3-68d4-c04d-9488-ad96336ebe05 (Table: SAU_Medicos por 10k Habitantes)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SAU_Medicos por 10k Habitantes)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_ff3d9f0f-58ee-451e-a51d-2341be5a78bc (Table: SEG_Homicidios por 100k Habitantes)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SEG_Homicidios por 100k Habitantes)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_cd34beed-1479-4826-9ea5-8237e1c4329c (Table: SOC_Taxa de Pobreza)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SOC_Taxa de Pobreza)</li>
</ul></li>
<li><span class="caret">Calc_Column: Valor PIB Estadual (Table: FIN_PIB Estadual)</span>
<ul class="nested">
<li>Table: FIN_PIB Estadual   ...</li>
<li>Column: Valor PIB Estadual / 1000 (Table: FIN_PIB Estadual)</li>
</ul></li>
<li><span class="caret">Measure: Estado_Selecionado (Table: UFs(ibge))</span>
<ul class="nested">
<li>Table: UFs(ibge)   ...</li>
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: nome_UF (Table: UFs(ibge))</li>
<li>Column: id_map (Table: UFs(ibge))</li>
</ul></li>
<li><span class="caret">Active_Relationship: a0414d31-a10c-455e-14b2-d5a10da59a87 (Table: FIN_Despesas correntes - estadual)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: FIN_Despesas correntes - estadual)</li>
</ul></li>
<li><span class="caret">Active_Relationship: 6c88188d-6ec6-c6fd-6bd3-c626b12c8983 (Table: FIN_Receita corrente - receita bruta - estadual)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: FIN_Receita corrente - receita bruta - estadual)</li>
</ul></li>
<li><span class="caret">Active_Relationship: b83678b1-77df-39c9-4779-ca52d7d0fb39 (Table: FIN_Renda per capita (Atlas DH - Pnad Contínua/A))</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: FIN_Renda per capita (Atlas DH - Pnad Contínua/A))</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_00aacb91-59e0-4e8c-82a6-36e6c47ac7cd (Table: FIN_Receitas x Despesas)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: FIN_Receitas x Despesas)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_cc03ed78-861f-4978-91e7-32a39b1da662 (Table: SOC_Indice de Gini)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SOC_Indice de Gini)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_b2a9d9f4-d0a3-4827-a3d6-0382a16d0cf1 (Table: SEG_Ocorrências Criminais)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SEG_Ocorrências Criminais)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_28a9e196-fb3f-4b2d-a551-d9d3f0faea81 (Table: PIB Estadual histórico)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: PIB Estadual histórico)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_12fb90f4-bad5-445b-b5cf-a56e48b8d495 (Table: SOC_Taxa de desemprego por Ano (IBGE - Continua))</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SOC_Taxa de desemprego por Ano (IBGE - Continua))</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_ab6ed497-2fe6-4d19-be33-232f9b5c1709 (Table: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_1a7af5f8-de76-4207-9310-5978ba65ad89 (Table: Indices_agregados_classificados)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: Indices_agregados_classificados)</li>
</ul></li>
<li><span class="caret">Active_Relationship: 4214c873-4923-84e3-0575-0219811bfa6b (Table: Indices Ano mais recente)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Calc_Column: Sigla_UF (Table: Indices Ano mais recente)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_1c758e6b-cae8-4a7b-82d3-fd6d61e00112 (Table: Territorios(ipea))</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: Territorios(ipea))</li>
</ul></li>
<li><span class="caret">Active_Relationship: a03fdb86-b031-65e4-0dd5-24d8bb872d7a (Table: Indices_mais_recentes)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: Indices_mais_recentes)</li>
</ul></li>
</ul></li>
</ul></span></li>
</ul></td>
		<td>Measure: Media</td>
	</tr>
	<tr>
		<td>ultimo_valor</td>
		<td>FIN_PIB Estadual</td>
		<td></td>
		<td><pre>
VAR media =
    CALCULATE (
        DIVIDE (
            SUM ( 'FIN_PIB Estadual'[% Relação PIB Brasil] ),
            DISTINCTCOUNT ( 'FIN_PIB Estadual'[Ano] ),
            "-"
        ),
        REMOVEFILTERS ( 'FIN_PIB Estadual'[Ano] )
    )
VAR Ultimo_valor =
    CALCULATE (
        MAX ( 'FIN_PIB Estadual'[% Relação PIB Brasil] ),
        LASTNONBLANK ( 'FIN_PIB Estadual'[Ano], 1 )
    )
RETURN
    ultimo_valor</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: ultimo_valor</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: FIN_PIB Estadual</li>
<li>Column: Ano (Table: FIN_PIB Estadual)</li>
<li><span class="caret">Calc_Column: % Relação PIB Brasil (Table: FIN_PIB Estadual)</span>
<ul class="nested">
<li>Table: UFs(ibge)</li>
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: nome_UF (Table: UFs(ibge))</li>
<li><span class="caret">Active_Relationship: AutoDetected_a246f32d-387f-42e4-b705-bb7914d5cdfa (Table: Populacao Historica UFs)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: Populacao Historica UFs)</li>
</ul></li>
<li>Table: FIN_PIB Estadual   ...</li>
<li><span class="caret">Active_Relationship: AutoDetected_87c24f61-8d9a-4dc9-bea7-e8cbf09616ac (Table: FIN_PIB Estadual)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: FIN_PIB Estadual)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_db1f02aa-0656-4f68-9fc2-e1645db3712b (Table: SOC_IDHM_por_UF)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SOC_IDHM_por_UF)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_a10f45fd-8455-4635-ba30-68c3a0600aa4 (Table: EDU_% Alunos na Rede Pública)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: EDU_% Alunos na Rede Pública)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_4d399378-d1e9-4da9-9731-a4b9285a07a1 (Table: Governadores (wikimedia))</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: Governadores (wikimedia))</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_fb8ecac6-2b2f-4179-8d08-3bd4468a4b27 (Table: SOC_Taxa de desemprego (IBGE - Continua))</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SOC_Taxa de desemprego (IBGE - Continua))</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_453f7fe0-f30f-4c04-b67b-98945e1e3193 (Table: SAU_Estabelecimento de saude(DataSUS))</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SAU_Estabelecimento de saude(DataSUS))</li>
</ul></li>
<li><span class="caret">Calc_Column: PIB Brasil no ano (Table: FIN_PIB Estadual)</span>
<ul class="nested">
<li>Table: FIN_PIB Estadual   ...</li>
<li><span class="caret">Active_Relationship: AutoDetected_6c0dd54d-e968-4d33-8786-7cb70e508099 (Table: FIN_PIB Estadual)</span>
<ul class="nested">
<li>Column: Ano (Table: FIN_PIB Estadual)</li>
<li>Column: Ano (Table: FIN_PIB Brasil)</li>
</ul></li>
<li><span class="caret">Calc_Column: Valor PIB Brasil (Table: FIN_PIB Brasil)</span>
<ul class="nested">
<li>Table: FIN_PIB Brasil   ...</li>
<li>Column: Valor PIB Brasil em trilhao (Table: FIN_PIB Brasil)</li>
</ul></li>
</ul></li>
<li><span class="caret">Active_Relationship: 9814f3b3-68d4-c04d-9488-ad96336ebe05 (Table: SAU_Medicos por 10k Habitantes)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SAU_Medicos por 10k Habitantes)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_ff3d9f0f-58ee-451e-a51d-2341be5a78bc (Table: SEG_Homicidios por 100k Habitantes)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SEG_Homicidios por 100k Habitantes)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_cd34beed-1479-4826-9ea5-8237e1c4329c (Table: SOC_Taxa de Pobreza)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SOC_Taxa de Pobreza)</li>
</ul></li>
<li><span class="caret">Calc_Column: Valor PIB Estadual (Table: FIN_PIB Estadual)</span>
<ul class="nested">
<li>Table: FIN_PIB Estadual   ...</li>
<li>Column: Valor PIB Estadual / 1000 (Table: FIN_PIB Estadual)</li>
</ul></li>
<li><span class="caret">Measure: Estado_Selecionado (Table: UFs(ibge))</span>
<ul class="nested">
<li>Table: UFs(ibge)   ...</li>
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: nome_UF (Table: UFs(ibge))</li>
<li>Column: id_map (Table: UFs(ibge))</li>
</ul></li>
<li><span class="caret">Active_Relationship: a0414d31-a10c-455e-14b2-d5a10da59a87 (Table: FIN_Despesas correntes - estadual)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: FIN_Despesas correntes - estadual)</li>
</ul></li>
<li><span class="caret">Active_Relationship: 6c88188d-6ec6-c6fd-6bd3-c626b12c8983 (Table: FIN_Receita corrente - receita bruta - estadual)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: FIN_Receita corrente - receita bruta - estadual)</li>
</ul></li>
<li><span class="caret">Active_Relationship: b83678b1-77df-39c9-4779-ca52d7d0fb39 (Table: FIN_Renda per capita (Atlas DH - Pnad Contínua/A))</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: FIN_Renda per capita (Atlas DH - Pnad Contínua/A))</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_00aacb91-59e0-4e8c-82a6-36e6c47ac7cd (Table: FIN_Receitas x Despesas)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: FIN_Receitas x Despesas)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_cc03ed78-861f-4978-91e7-32a39b1da662 (Table: SOC_Indice de Gini)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SOC_Indice de Gini)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_b2a9d9f4-d0a3-4827-a3d6-0382a16d0cf1 (Table: SEG_Ocorrências Criminais)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SEG_Ocorrências Criminais)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_28a9e196-fb3f-4b2d-a551-d9d3f0faea81 (Table: PIB Estadual histórico)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: PIB Estadual histórico)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_12fb90f4-bad5-445b-b5cf-a56e48b8d495 (Table: SOC_Taxa de desemprego por Ano (IBGE - Continua))</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SOC_Taxa de desemprego por Ano (IBGE - Continua))</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_ab6ed497-2fe6-4d19-be33-232f9b5c1709 (Table: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_1a7af5f8-de76-4207-9310-5978ba65ad89 (Table: Indices_agregados_classificados)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: Indices_agregados_classificados)</li>
</ul></li>
<li><span class="caret">Active_Relationship: 4214c873-4923-84e3-0575-0219811bfa6b (Table: Indices Ano mais recente)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Calc_Column: Sigla_UF (Table: Indices Ano mais recente)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_1c758e6b-cae8-4a7b-82d3-fd6d61e00112 (Table: Territorios(ipea))</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: Territorios(ipea))</li>
</ul></li>
<li><span class="caret">Active_Relationship: a03fdb86-b031-65e4-0dd5-24d8bb872d7a (Table: Indices_mais_recentes)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: Indices_mais_recentes)</li>
</ul></li>
</ul></li>
</ul></span></li>
</ul></td>
		<td>Measure: ultimo_valor</td>
	</tr>
	<tr>
		<td>% Rela&#231;&#227;o PIB mais recente</td>
		<td>FIN_PIB Estadual</td>
		<td></td>
		<td><pre>
IF (
    [Estado_Selecionado] == "",
    0,
    CALCULATE (
        MAX ( 'FIN_PIB Estadual'[% Relação PIB Brasil] ),
        LASTNONBLANK ( 'FIN_PIB Estadual'[Ano], 1 )
    )
)</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: % Relação PIB mais recente</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: FIN_PIB Estadual</li>
<li>Column: Ano (Table: FIN_PIB Estadual)</li>
<li><span class="caret">Calc_Column: % Relação PIB Brasil (Table: FIN_PIB Estadual)</span>
<ul class="nested">
<li>Table: UFs(ibge)</li>
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: nome_UF (Table: UFs(ibge))</li>
<li><span class="caret">Active_Relationship: AutoDetected_a246f32d-387f-42e4-b705-bb7914d5cdfa (Table: Populacao Historica UFs)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: Populacao Historica UFs)</li>
</ul></li>
<li>Table: FIN_PIB Estadual   ...</li>
<li><span class="caret">Active_Relationship: AutoDetected_87c24f61-8d9a-4dc9-bea7-e8cbf09616ac (Table: FIN_PIB Estadual)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: FIN_PIB Estadual)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_db1f02aa-0656-4f68-9fc2-e1645db3712b (Table: SOC_IDHM_por_UF)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SOC_IDHM_por_UF)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_a10f45fd-8455-4635-ba30-68c3a0600aa4 (Table: EDU_% Alunos na Rede Pública)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: EDU_% Alunos na Rede Pública)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_4d399378-d1e9-4da9-9731-a4b9285a07a1 (Table: Governadores (wikimedia))</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: Governadores (wikimedia))</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_fb8ecac6-2b2f-4179-8d08-3bd4468a4b27 (Table: SOC_Taxa de desemprego (IBGE - Continua))</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SOC_Taxa de desemprego (IBGE - Continua))</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_453f7fe0-f30f-4c04-b67b-98945e1e3193 (Table: SAU_Estabelecimento de saude(DataSUS))</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SAU_Estabelecimento de saude(DataSUS))</li>
</ul></li>
<li><span class="caret">Calc_Column: PIB Brasil no ano (Table: FIN_PIB Estadual)</span>
<ul class="nested">
<li>Table: FIN_PIB Estadual   ...</li>
<li><span class="caret">Active_Relationship: AutoDetected_6c0dd54d-e968-4d33-8786-7cb70e508099 (Table: FIN_PIB Estadual)</span>
<ul class="nested">
<li>Column: Ano (Table: FIN_PIB Estadual)</li>
<li>Column: Ano (Table: FIN_PIB Brasil)</li>
</ul></li>
<li><span class="caret">Calc_Column: Valor PIB Brasil (Table: FIN_PIB Brasil)</span>
<ul class="nested">
<li>Table: FIN_PIB Brasil   ...</li>
<li>Column: Valor PIB Brasil em trilhao (Table: FIN_PIB Brasil)</li>
</ul></li>
</ul></li>
<li><span class="caret">Active_Relationship: 9814f3b3-68d4-c04d-9488-ad96336ebe05 (Table: SAU_Medicos por 10k Habitantes)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SAU_Medicos por 10k Habitantes)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_ff3d9f0f-58ee-451e-a51d-2341be5a78bc (Table: SEG_Homicidios por 100k Habitantes)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SEG_Homicidios por 100k Habitantes)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_cd34beed-1479-4826-9ea5-8237e1c4329c (Table: SOC_Taxa de Pobreza)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SOC_Taxa de Pobreza)</li>
</ul></li>
<li><span class="caret">Calc_Column: Valor PIB Estadual (Table: FIN_PIB Estadual)</span>
<ul class="nested">
<li>Table: FIN_PIB Estadual   ...</li>
<li>Column: Valor PIB Estadual / 1000 (Table: FIN_PIB Estadual)</li>
</ul></li>
<li><span class="caret">Measure: Estado_Selecionado (Table: UFs(ibge))</span>
<ul class="nested">
<li>Table: UFs(ibge)   ...</li>
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: nome_UF (Table: UFs(ibge))</li>
<li>Column: id_map (Table: UFs(ibge))</li>
</ul></li>
<li><span class="caret">Active_Relationship: a0414d31-a10c-455e-14b2-d5a10da59a87 (Table: FIN_Despesas correntes - estadual)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: FIN_Despesas correntes - estadual)</li>
</ul></li>
<li><span class="caret">Active_Relationship: 6c88188d-6ec6-c6fd-6bd3-c626b12c8983 (Table: FIN_Receita corrente - receita bruta - estadual)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: FIN_Receita corrente - receita bruta - estadual)</li>
</ul></li>
<li><span class="caret">Active_Relationship: b83678b1-77df-39c9-4779-ca52d7d0fb39 (Table: FIN_Renda per capita (Atlas DH - Pnad Contínua/A))</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: FIN_Renda per capita (Atlas DH - Pnad Contínua/A))</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_00aacb91-59e0-4e8c-82a6-36e6c47ac7cd (Table: FIN_Receitas x Despesas)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: FIN_Receitas x Despesas)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_cc03ed78-861f-4978-91e7-32a39b1da662 (Table: SOC_Indice de Gini)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SOC_Indice de Gini)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_b2a9d9f4-d0a3-4827-a3d6-0382a16d0cf1 (Table: SEG_Ocorrências Criminais)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SEG_Ocorrências Criminais)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_28a9e196-fb3f-4b2d-a551-d9d3f0faea81 (Table: PIB Estadual histórico)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: PIB Estadual histórico)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_12fb90f4-bad5-445b-b5cf-a56e48b8d495 (Table: SOC_Taxa de desemprego por Ano (IBGE - Continua))</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SOC_Taxa de desemprego por Ano (IBGE - Continua))</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_ab6ed497-2fe6-4d19-be33-232f9b5c1709 (Table: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_1a7af5f8-de76-4207-9310-5978ba65ad89 (Table: Indices_agregados_classificados)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: Indices_agregados_classificados)</li>
</ul></li>
<li><span class="caret">Active_Relationship: 4214c873-4923-84e3-0575-0219811bfa6b (Table: Indices Ano mais recente)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Calc_Column: Sigla_UF (Table: Indices Ano mais recente)</li>
</ul></li>
<li><span class="caret">Active_Relationship: AutoDetected_1c758e6b-cae8-4a7b-82d3-fd6d61e00112 (Table: Territorios(ipea))</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: Territorios(ipea))</li>
</ul></li>
<li><span class="caret">Active_Relationship: a03fdb86-b031-65e4-0dd5-24d8bb872d7a (Table: Indices_mais_recentes)</span>
<ul class="nested">
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: Sigla_UF (Table: Indices_mais_recentes)</li>
</ul></li>
</ul></li>
<li><span class="caret">Measure: Estado_Selecionado (Table: UFs(ibge))</span>
<ul class="nested">
<li>Table: UFs(ibge)   ...</li>
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: nome_UF (Table: UFs(ibge))</li>
<li>Column: id_map (Table: UFs(ibge))</li>
</ul></li>
</ul></span></li>
</ul></td>
		<td>Measure: % Relação PIB mais recente</td>
	</tr>
	<tr>
		<td>Habitante por Km2</td>
		<td>Territorios(ipea)</td>
		<td></td>
		<td><pre>
DIVIDE (
    'Populacao Historica UFs'[Med_População],
    SUM ( 'Territorios(ipea)'[Área do território (em km²)] ),
    "-"
)</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Habitante por Km2</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: Populacao Historica UFs</li>
<li>Table: Territorios(ipea)</li>
<li>Column: Área do território (em km²) (Table: Territorios(ipea))</li>
<li><span class="caret">Measure: Med_População (Table: Populacao Historica UFs)</span>
<ul class="nested">
<li>Table: Populacao Historica UFs   ...</li>
<li>Column: Ano (Table: Populacao Historica UFs)</li>
<li>Column: População (Table: Populacao Historica UFs)</li>
</ul></li>
</ul></span></li>
</ul></td>
		<td>Measure: Habitante por Km2</td>
	</tr>
	<tr>
		<td>soma_km2</td>
		<td>Territorios(ipea)</td>
		<td></td>
		<td><pre>
SUM ( 'Territorios(ipea)'[Área do território (em km²)] )</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: soma_km2</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: Territorios(ipea)</li>
<li>Column: Área do território (em km²) (Table: Territorios(ipea))</li>
</ul></span></li>
</ul></td>
		<td>Measure: soma_km2</td>
	</tr>
	<tr>
		<td>Tend&#234;ncia UF</td>
		<td>SOC_IDHM_por_UF</td>
		<td></td>
		<td><pre>
VAR media =
    CALCULATE (
        DIVIDE (
            SUM ( 'SOC_IDHM_por_UF'[IDHM_UF] ),
            DISTINCTCOUNT ( 'SOC_IDHM_por_UF'[Ano] ),
            "-"
        ),
        REMOVEFILTERS ( 'SOC_IDHM_por_UF'[Ano] )
    )
VAR Ultimo_valor =
    CALCULATE (
        MAX ( 'SOC_IDHM_por_UF'[IDHM_UF] ),
        LASTNONBLANK ( 'SOC_IDHM_por_UF'[Ano], 1 )
    )
RETURN
    IF (
        Ultimo_valor > media,
        "Alta",
        IF ( Ultimo_valor < media, "Queda", "Estável" )
    )</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Tendência UF</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: SOC_IDHM_por_UF</li>
<li>Column: Ano (Table: SOC_IDHM_por_UF)</li>
<li>Column: IDHM_UF (Table: SOC_IDHM_por_UF)</li>
</ul></span></li>
</ul></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Tendência UF</span><span class="dropDownCaret">
<ul class="nested">
<li><span class="caret">Measure: Pontuação Média dos Estados</span>
<ul class="nested">
<li>Measure: Posicao</li>
</ul></li>
</ul></span></li>
</ul></td>
	</tr>
	<tr>
		<td>IDH M&#233;dio</td>
		<td>SOC_IDHM_por_UF</td>
		<td></td>
		<td><pre>
AVERAGE ( [IDHM_UF] )</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: IDH Médio</span><span class="dropDownCaret">
<ul class="nested">
<li>Column: IDHM_UF (Table: SOC_IDHM_por_UF)</li>
</ul></span></li>
</ul></td>
		<td>Measure: IDH Médio</td>
	</tr>
	<tr>
		<td>IDH mais recente</td>
		<td>SOC_IDHM_por_UF</td>
		<td></td>
		<td><pre>
CALCULATE (
    MAX ( 'SOC_IDHM_por_UF'[IDHM_UF] ),
    FILTER (
        'SOC_IDHM_por_UF',
        'SOC_IDHM_por_UF'[Ano] = MAX ( 'SOC_IDHM_por_UF'[Ano] )
    )
)</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: IDH mais recente</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: SOC_IDHM_por_UF</li>
<li>Column: Ano (Table: SOC_IDHM_por_UF)</li>
<li>Column: IDHM_UF (Table: SOC_IDHM_por_UF)</li>
</ul></span></li>
</ul></td>
		<td>Measure: IDH mais recente</td>
	</tr>
	<tr>
		<td>Tendencia_IDH_Valorizado</td>
		<td>SOC_IDHM_por_UF</td>
		<td></td>
		<td><pre>
VAR media =
    CALCULATE (
        DIVIDE (
            SUM ( 'SOC_IDHM_por_UF'[IDHM_UF] ),
            DISTINCTCOUNT ( 'SOC_IDHM_por_UF'[Ano] ),
            "-"
        ),
        REMOVEFILTERS ( 'SOC_IDHM_por_UF'[Ano] )
    )
VAR Ultimo_valor =
    CALCULATE (
        MAX ( 'SOC_IDHM_por_UF'[IDHM_UF] ),
        LASTNONBLANK ( 'SOC_IDHM_por_UF'[Ano], 1 )
    )
RETURN
    IF (
        Ultimo_valor = media,
        Ultimo_valor,
        IF ( Ultimo_valor > media, 0, IF ( Ultimo_valor < media, 100, -1 ) )
    )</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Tendencia_IDH_Valorizado</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: SOC_IDHM_por_UF</li>
<li>Column: Ano (Table: SOC_IDHM_por_UF)</li>
<li>Column: IDHM_UF (Table: SOC_IDHM_por_UF)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Tendencia_IDH_Valorizado</td>
	</tr>
	<tr>
		<td>Linha de Tend&#234;ncia IDH</td>
		<td>SOC_IDHM_por_UF</td>
		<td></td>
		<td><pre>
-- Calcula a média de X (Data)
VAR MediaData =
    AVERAGEX ( ALLSELECTED ( 'SOC_IDHM_por_UF'[Ano] ), 'SOC_IDHM_por_UF'[Ano] ) -- Calcula a média de Y (Valor)
VAR MediaValor =
    AVERAGEX (
        ALLSELECTED ( 'SOC_IDHM_por_UF'[IDHM_UF] ),
        'SOC_IDHM_por_UF'[IDHM_UF]
    ) -- Calcula a inclinação (slope) da linha de tendência
VAR Slope =
    DIVIDE (
        SUMX (
            ALLSELECTED ( 'SOC_IDHM_por_UF' ),
            ( 'SOC_IDHM_por_UF'[Ano] - MediaData ) * ( 'SOC_IDHM_por_UF'[IDHM_UF] - MediaValor )
        ),
        SUMX (
            ALLSELECTED ( 'SOC_IDHM_por_UF' ),
            ( 'SOC_IDHM_por_UF'[Ano] - MediaData ) ^ 2
        )
    ) -- Calcula a interseção (intercept) da linha de tendência
VAR Intercept = MediaValor - Slope * MediaData
RETURN
    -- Calcula o valor da linha de tendência para cada ponto de dados
    Intercept
        + Slope * SELECTEDVALUE ( 'SOC_IDHM_por_UF'[Ano] )
-- colocar (-) para quando for quanto maior pior e (+) quando for quanto maior melhor</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Linha de Tendência IDH</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: SOC_IDHM_por_UF</li>
<li>Column: Ano (Table: SOC_IDHM_por_UF)</li>
<li>Column: IDHM_UF (Table: SOC_IDHM_por_UF)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Linha de Tendência IDH</td>
	</tr>
	<tr>
		<td>M&#233;dia %</td>
		<td>EDU_% Alunos na Rede P&#250;blica</td>
		<td></td>
		<td><pre>
AVERAGE ( 'EDU_% Alunos na Rede Pública'[Valor(%)] )</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Média %</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: EDU_% Alunos na Rede Pública</li>
<li>Column: Valor(%) (Table: EDU_% Alunos na Rede Pública)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Média %</td>
	</tr>
	<tr>
		<td>Tend&#234;ncia</td>
		<td>EDU_% Alunos na Rede P&#250;blica</td>
		<td></td>
		<td><pre>
VAR media =
    CALCULATE (
        DIVIDE (
            SUM ( [Valor(%)] ),
            DISTINCTCOUNT ( 'EDU_% Alunos na Rede Pública'[Ano] ),
            "-"
        ),
        REMOVEFILTERS ( 'EDU_% Alunos na Rede Pública'[Ano] )
    )
VAR Ultimo_valor =
    CALCULATE (
        MAX ( 'EDU_% Alunos na Rede Pública'[Valor(%)] ),
        LASTNONBLANK ( 'EDU_% Alunos na Rede Pública'[Ano], 1 )
    )
RETURN
    IF (
        Ultimo_valor > media,
        "Alta",
        IF ( Ultimo_valor < media, "Queda", "Estável" )
    )</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Tendência</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: EDU_% Alunos na Rede Pública</li>
<li>Column: Ano (Table: EDU_% Alunos na Rede Pública)</li>
<li>Column: Valor(%) (Table: EDU_% Alunos na Rede Pública)</li>
</ul></span></li>
</ul></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Tendência</span><span class="dropDownCaret">
<ul class="nested">
<li><span class="caret">Measure: Pontuação Média dos Estados</span>
<ul class="nested">
<li>Measure: Posicao</li>
</ul></li>
</ul></span></li>
</ul></td>
	</tr>
	<tr>
		<td>Valor%Total</td>
		<td>EDU_% Alunos na Rede P&#250;blica</td>
		<td></td>
		<td><pre>
SUM ( 'EDU_% Alunos na Rede Pública'[Valor(%)] )</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Valor%Total</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: EDU_% Alunos na Rede Pública</li>
<li>Column: Valor(%) (Table: EDU_% Alunos na Rede Pública)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Valor%Total</td>
	</tr>
	<tr>
		<td>% Alunos mais recente</td>
		<td>EDU_% Alunos na Rede P&#250;blica</td>
		<td></td>
		<td><pre>
IF (
    OR (
        HASONEFILTER ( 'UFs(ibge)'[id_map] ),
        HASONEFILTER ( 'UFs(ibge)'[Sigla_UF] )
    ),
    CALCULATE (
        MAX ( 'EDU_% Alunos na Rede Pública'[Valor(%)] ),
        FILTER (
            'EDU_% Alunos na Rede Pública',
            'EDU_% Alunos na Rede Pública'[Ano]
                = MAX ( 'EDU_% Alunos na Rede Pública'[Ano] )
        )
    ),
    0
)</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: % Alunos mais recente</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: UFs(ibge)</li>
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Table: EDU_% Alunos na Rede Pública</li>
<li>Column: Ano (Table: EDU_% Alunos na Rede Pública)</li>
<li>Column: Valor(%) (Table: EDU_% Alunos na Rede Pública)</li>
<li>Column: id_map (Table: UFs(ibge))</li>
</ul></span></li>
</ul></td>
		<td>Measure: % Alunos mais recente</td>
	</tr>
	<tr>
		<td>Tendencia_%Alunos_Valorizado</td>
		<td>EDU_% Alunos na Rede P&#250;blica</td>
		<td></td>
		<td><pre>
VAR media =
    CALCULATE (
        DIVIDE (
            SUM ( 'EDU_% Alunos na Rede Pública'[Valor(%)] ),
            DISTINCTCOUNT ( 'EDU_% Alunos na Rede Pública'[Ano] ),
            "-"
        ),
        REMOVEFILTERS ( 'EDU_% Alunos na Rede Pública'[Ano] )
    )
VAR Ultimo_valor =
    CALCULATE (
        MAX ( 'EDU_% Alunos na Rede Pública'[Valor(%)] ),
        LASTNONBLANK ( 'EDU_% Alunos na Rede Pública'[Ano], 1 )
    )
RETURN
    IF (
        ROUND ( Ultimo_valor, 2 ) = ROUND ( media, 2 ),
        Ultimo_valor,
        IF (
            ROUND ( Ultimo_valor, 2 ) > ROUND ( media, 2 ),
            0,
            IF ( ROUND ( Ultimo_valor, 2 ) < ROUND ( media, 2 ), 100, -1 )
        )
    )</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Tendencia_%Alunos_Valorizado</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: EDU_% Alunos na Rede Pública</li>
<li>Column: Ano (Table: EDU_% Alunos na Rede Pública)</li>
<li>Column: Valor(%) (Table: EDU_% Alunos na Rede Pública)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Tendencia_%Alunos_Valorizado</td>
	</tr>
	<tr>
		<td>Linha de Tend&#234;ncia % Alunos</td>
		<td>EDU_% Alunos na Rede P&#250;blica</td>
		<td></td>
		<td><pre>
-- Calcula a média de X (Data)
VAR MediaData =
    AVERAGEX (
        ALLSELECTED ( 'EDU_% Alunos na Rede Pública'[Ano] ),
        'EDU_% Alunos na Rede Pública'[Ano]
    ) -- Calcula a média de Y (Valor)
VAR MediaValor =
    AVERAGEX (
        ALLSELECTED ( 'EDU_% Alunos na Rede Pública'[Valor(%)] ),
        'EDU_% Alunos na Rede Pública'[Valor(%)]
    ) -- Calcula a inclinação (slope) da linha de tendência
VAR Slope =
    DIVIDE (
        SUMX (
            ALLSELECTED ( 'EDU_% Alunos na Rede Pública' ),
            ( 'EDU_% Alunos na Rede Pública'[Ano] - MediaData ) * ( 'EDU_% Alunos na Rede Pública'[Valor(%)] - MediaValor )
        ),
        SUMX (
            ALLSELECTED ( 'EDU_% Alunos na Rede Pública' ),
            ( 'EDU_% Alunos na Rede Pública'[Ano] - MediaData ) ^ 2
        )
    ) -- Calcula a interseção (intercept) da linha de tendência
VAR Intercept = MediaValor - Slope * MediaData
RETURN
    -- Calcula o valor da linha de tendência para cada ponto de dados
    Intercept
        + Slope * SELECTEDVALUE ( 'EDU_% Alunos na Rede Pública'[Ano] )
-- colocar (-) para quando for quanto maior pior e (+) quando for quanto maior melhor</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Linha de Tendência % Alunos</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: EDU_% Alunos na Rede Pública</li>
<li>Column: Ano (Table: EDU_% Alunos na Rede Pública)</li>
<li>Column: Valor(%) (Table: EDU_% Alunos na Rede Pública)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Linha de Tendência % Alunos</td>
	</tr>
	<tr>
		<td>TX Desemprego M&#233;dio</td>
		<td>SOC_Taxa de desemprego (IBGE - Continua)</td>
		<td></td>
		<td><pre>
AVERAGE ( [Taxa Desemprego %] )</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: TX Desemprego Médio</span><span class="dropDownCaret">
<ul class="nested">
<li>Column: Taxa Desemprego % (Table: SOC_Taxa de desemprego (IBGE - Continua))</li>
</ul></span></li>
</ul></td>
		<td>Measure: TX Desemprego Médio</td>
	</tr>
	<tr>
		<td>Tend&#234;ncia TX Desemprego</td>
		<td>SOC_Taxa de desemprego (IBGE - Continua)</td>
		<td></td>
		<td><pre>
VAR media =
    CALCULATE (
        DIVIDE (
            SUM ( 'SOC_Taxa de desemprego (IBGE - Continua)'[Taxa Desemprego %] ),
            DISTINCTCOUNT ( 'SOC_Taxa de desemprego (IBGE - Continua)'[Trimestres] ),
            "-"
        ),
        REMOVEFILTERS ( 'SOC_Taxa de desemprego (IBGE - Continua)'[Trimestres] )
    )
VAR Ultimo_valor =
    CALCULATE (
        MAX ( 'SOC_Taxa de desemprego (IBGE - Continua)'[Taxa Desemprego %] ),
        LASTNONBLANK ( 'SOC_Taxa de desemprego (IBGE - Continua)'[Trimestres], 1 )
    )
RETURN
    IF (
        Ultimo_valor > media,
        "Alta",
        IF ( Ultimo_valor < media, "Queda", "Estável" )
    )</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Tendência TX Desemprego</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: SOC_Taxa de desemprego (IBGE - Continua)</li>
<li>Column: Taxa Desemprego % (Table: SOC_Taxa de desemprego (IBGE - Continua))</li>
<li>Column: Trimestres (Table: SOC_Taxa de desemprego (IBGE - Continua))</li>
</ul></span></li>
</ul></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Tendência TX Desemprego</span><span class="dropDownCaret">
<ul class="nested">
<li><span class="caret">Measure: Pontuação Média dos Estados</span>
<ul class="nested">
<li>Measure: Posicao</li>
</ul></li>
</ul></span></li>
</ul></td>
	</tr>
	<tr>
		<td>Taxa Desemprego Atual</td>
		<td>SOC_Taxa de desemprego (IBGE - Continua)</td>
		<td></td>
		<td><pre>
IF (
    OR (
        HASONEFILTER ( 'UFs(ibge)'[id_map] ),
        HASONEFILTER ( 'UFs(ibge)'[Sigla_UF] )
    ),
    CALCULATE (
        SUM ( 'SOC_Taxa de desemprego (IBGE - Continua)'[Taxa Desemprego %] ),
        'SOC_Taxa de desemprego (IBGE - Continua)'[Ano] = MAX ( [Ano] )
    ),
    0
)</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Taxa Desemprego Atual</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: UFs(ibge)</li>
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Table: SOC_Taxa de desemprego (IBGE - Continua)</li>
<li>Column: Taxa Desemprego % (Table: SOC_Taxa de desemprego (IBGE - Continua))</li>
<li>Column: id_map (Table: UFs(ibge))</li>
<li>Column: Ano (Table: SOC_Taxa de desemprego (IBGE - Continua))</li>
</ul></span></li>
</ul></td>
		<td>Measure: Taxa Desemprego Atual</td>
	</tr>
	<tr>
		<td>Tend&#234;ncia_#_Estabelecimentos</td>
		<td>SAU_Estabelecimento de saude(DataSUS)</td>
		<td></td>
		<td><pre>
VAR media =
    CALCULATE (
        DIVIDE (
            SUM ( [Num_Estabelecimentos_Saude] ),
            DISTINCTCOUNT ( 'SAU_Estabelecimento de saude(DataSUS)'[Ano] ),
            "-"
        ),
        REMOVEFILTERS ( 'SAU_Estabelecimento de saude(DataSUS)'[Ano] )
    )
VAR Ultimo_valor =
    CALCULATE (
        MAX ( 'SAU_Estabelecimento de saude(DataSUS)'[Num_Estabelecimentos_Saude] ),
        LASTNONBLANK ( 'SAU_Estabelecimento de saude(DataSUS)'[Ano], 1 )
    )
RETURN
    IF (
        Ultimo_valor > media,
        "Alta",
        IF ( Ultimo_valor < media, "Queda", "Estável" )
    )</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Tendência_#_Estabelecimentos</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: SAU_Estabelecimento de saude(DataSUS)</li>
<li>Column: Ano (Table: SAU_Estabelecimento de saude(DataSUS))</li>
<li>Column: Num_Estabelecimentos_Saude (Table: SAU_Estabelecimento de saude(DataSUS))</li>
</ul></span></li>
</ul></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Tendência_#_Estabelecimentos</span><span class="dropDownCaret">
<ul class="nested">
<li><span class="caret">Measure: Pontuação Média dos Estados</span>
<ul class="nested">
<li>Measure: Posicao</li>
</ul></li>
</ul></span></li>
</ul></td>
	</tr>
	<tr>
		<td>M&#233;dia Estabelecimentos</td>
		<td>SAU_Estabelecimento de saude(DataSUS)</td>
		<td></td>
		<td><pre>
AVERAGE ( 'SAU_Estabelecimento de saude(DataSUS)'[Num_Estabelecimentos_Saude] )</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Média Estabelecimentos</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: SAU_Estabelecimento de saude(DataSUS)</li>
<li>Column: Num_Estabelecimentos_Saude (Table: SAU_Estabelecimento de saude(DataSUS))</li>
</ul></span></li>
</ul></td>
		<td>Measure: Média Estabelecimentos</td>
	</tr>
	<tr>
		<td># Estabelecimentos mais recente</td>
		<td>SAU_Estabelecimento de saude(DataSUS)</td>
		<td></td>
		<td><pre>
IF (
    OR (
        HASONEFILTER ( 'UFs(ibge)'[id_map] ),
        HASONEFILTER ( 'UFs(ibge)'[Sigla_UF] )
    ),
    CALCULATE (
        MAX ( 'SAU_Estabelecimento de saude(DataSUS)'[Num_Estabelecimentos_Saude] ),
        FILTER (
            'SAU_Estabelecimento de saude(DataSUS)',
            'SAU_Estabelecimento de saude(DataSUS)'[Ano]
                = MAX ( 'SAU_Estabelecimento de saude(DataSUS)'[Ano] )
        )
    ),
    0
)</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: # Estabelecimentos mais recente</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: UFs(ibge)</li>
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Table: SAU_Estabelecimento de saude(DataSUS)</li>
<li>Column: Ano (Table: SAU_Estabelecimento de saude(DataSUS))</li>
<li>Column: Num_Estabelecimentos_Saude (Table: SAU_Estabelecimento de saude(DataSUS))</li>
<li>Column: id_map (Table: UFs(ibge))</li>
</ul></span></li>
</ul></td>
		<td>Measure: # Estabelecimentos mais recente</td>
	</tr>
	<tr>
		<td>Tendencia_#Estabelecimentos_Saude_Valorizado</td>
		<td>SAU_Estabelecimento de saude(DataSUS)</td>
		<td></td>
		<td><pre>
VAR media =
    CALCULATE (
        DIVIDE (
            SUM ( 'SAU_Estabelecimento de saude(DataSUS)'[Num_Estabelecimentos_Saude] ),
            DISTINCTCOUNT ( 'SAU_Estabelecimento de saude(DataSUS)'[Ano] ),
            "-"
        ),
        REMOVEFILTERS ( 'SAU_Estabelecimento de saude(DataSUS)'[Ano] )
    )
VAR Ultimo_valor =
    CALCULATE (
        MAX ( 'SAU_Estabelecimento de saude(DataSUS)'[Num_Estabelecimentos_Saude] ),
        LASTNONBLANK ( 'SAU_Estabelecimento de saude(DataSUS)'[Ano], 1 )
    )
RETURN
    IF (
        ROUND ( Ultimo_valor, 2 ) = ROUND ( media, 2 ),
        Ultimo_valor,
        IF (
            ROUND ( Ultimo_valor, 2 ) > ROUND ( media, 2 ),
            0,
            IF ( ROUND ( Ultimo_valor, 2 ) < ROUND ( media, 2 ), 100, -1 )
        )
    )</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Tendencia_#Estabelecimentos_Saude_Valorizado</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: SAU_Estabelecimento de saude(DataSUS)</li>
<li>Column: Ano (Table: SAU_Estabelecimento de saude(DataSUS))</li>
<li>Column: Num_Estabelecimentos_Saude (Table: SAU_Estabelecimento de saude(DataSUS))</li>
</ul></span></li>
</ul></td>
		<td>Measure: Tendencia_#Estabelecimentos_Saude_Valorizado</td>
	</tr>
	<tr>
		<td>Linha de Tend&#234;ncia Estab Saude</td>
		<td>SAU_Estabelecimento de saude(DataSUS)</td>
		<td></td>
		<td><pre>
-- Calcula a média de X (Data)
VAR MediaData =
    AVERAGEX (
        ALLSELECTED ( 'SAU_Estabelecimento de saude(DataSUS)'[Ano] ),
        'SAU_Estabelecimento de saude(DataSUS)'[Ano]
    ) -- Calcula a média de Y (Valor)
VAR MediaValor =
    AVERAGEX (
        ALLSELECTED ( 'SAU_Estabelecimento de saude(DataSUS)'[Num_Estabelecimentos_Saude] ),
        'SAU_Estabelecimento de saude(DataSUS)'[Num_Estabelecimentos_Saude]
    ) -- Calcula a inclinação (slope) da linha de tendência
VAR Slope =
    DIVIDE (
        SUMX (
            ALLSELECTED ( 'SAU_Estabelecimento de saude(DataSUS)' ),
            ( 'SAU_Estabelecimento de saude(DataSUS)'[Ano] - MediaData ) * ( 'SAU_Estabelecimento de saude(DataSUS)'[Num_Estabelecimentos_Saude] - MediaValor )
        ),
        SUMX (
            ALLSELECTED ( 'EDU_% Alunos na Rede Pública' ),
            ( 'EDU_% Alunos na Rede Pública'[Ano] - MediaData ) ^ 2
        )
    ) -- Calcula a interseção (intercept) da linha de tendência
VAR Intercept = MediaValor - Slope * MediaData
RETURN
    -- Calcula o valor da linha de tendência para cada ponto de dados
    Intercept
        + Slope * SELECTEDVALUE ( 'SAU_Estabelecimento de saude(DataSUS)'[Ano] )
-- colocar (-) para quando for quanto maior pior e (+) quando for quanto maior melhor</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Linha de Tendência Estab Saude</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: EDU_% Alunos na Rede Pública</li>
<li>Column: Ano (Table: EDU_% Alunos na Rede Pública)</li>
<li>Table: SAU_Estabelecimento de saude(DataSUS)</li>
<li>Column: Ano (Table: SAU_Estabelecimento de saude(DataSUS))</li>
<li>Column: Num_Estabelecimentos_Saude (Table: SAU_Estabelecimento de saude(DataSUS))</li>
</ul></span></li>
</ul></td>
		<td>Measure: Linha de Tendência Estab Saude</td>
	</tr>
	<tr>
		<td>M&#233;dicos M&#233;dia</td>
		<td>SAU_Medicos por 10k Habitantes</td>
		<td></td>
		<td><pre>
AVERAGE ( [Médicos por 10.000 Habitantes] )</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Médicos Média</span><span class="dropDownCaret">
<ul class="nested">
<li>Column: Médicos por 10.000 Habitantes (Table: SAU_Medicos por 10k Habitantes)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Médicos Média</td>
	</tr>
	<tr>
		<td>Tend&#234;ncia M&#233;dicos</td>
		<td>SAU_Medicos por 10k Habitantes</td>
		<td></td>
		<td><pre>
VAR media =
    CALCULATE (
        DIVIDE (
            SUM ( 'SAU_Medicos por 10k Habitantes'[Médicos por 10.000 Habitantes] ),
            DISTINCTCOUNT ( 'SAU_Medicos por 10k Habitantes'[Ano] ),
            "-"
        ),
        REMOVEFILTERS ( 'SAU_Medicos por 10k Habitantes'[Ano] )
    )
VAR Ultimo_valor =
    CALCULATE (
        MAX ( 'SAU_Medicos por 10k Habitantes'[Médicos por 10.000 Habitantes] ),
        LASTNONBLANK ( 'SAU_Medicos por 10k Habitantes'[Ano], 1 )
    )
RETURN
    IF (
        Ultimo_valor > media,
        "Alta",
        IF ( Ultimo_valor < media, "Queda", "Estável" )
    )</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Tendência Médicos</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: SAU_Medicos por 10k Habitantes</li>
<li>Column: Ano (Table: SAU_Medicos por 10k Habitantes)</li>
<li>Column: Médicos por 10.000 Habitantes (Table: SAU_Medicos por 10k Habitantes)</li>
</ul></span></li>
</ul></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Tendência Médicos</span><span class="dropDownCaret">
<ul class="nested">
<li><span class="caret">Measure: Pontuação Média dos Estados</span>
<ul class="nested">
<li>Measure: Posicao</li>
</ul></li>
</ul></span></li>
</ul></td>
	</tr>
	<tr>
		<td># Medicos mais recente</td>
		<td>SAU_Medicos por 10k Habitantes</td>
		<td></td>
		<td><pre>
IF (
    OR (
        HASONEFILTER ( 'UFs(ibge)'[id_map] ),
        HASONEFILTER ( 'UFs(ibge)'[Sigla_UF] )
    ),
    CALCULATE (
        MAX ( 'SAU_Medicos por 10k Habitantes'[Médicos por 10.000 Habitantes] ),
        FILTER (
            'SAU_Medicos por 10k Habitantes',
            'SAU_Medicos por 10k Habitantes'[Ano]
                = MAX ( 'SAU_Medicos por 10k Habitantes'[Ano] )
        )
    ),
    0
)</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: # Medicos mais recente</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: UFs(ibge)</li>
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Table: SAU_Medicos por 10k Habitantes</li>
<li>Column: Ano (Table: SAU_Medicos por 10k Habitantes)</li>
<li>Column: Médicos por 10.000 Habitantes (Table: SAU_Medicos por 10k Habitantes)</li>
<li>Column: id_map (Table: UFs(ibge))</li>
</ul></span></li>
</ul></td>
		<td>Measure: # Medicos mais recente</td>
	</tr>
	<tr>
		<td>Tend&#234;ncia_#_Medicos</td>
		<td>SAU_Medicos por 10k Habitantes</td>
		<td></td>
		<td><pre>
VAR media =
    CALCULATE (
        DIVIDE (
            SUM ( [Médicos por 10.000 Habitantes] ),
            DISTINCTCOUNT ( 'SAU_Medicos por 10k Habitantes'[Ano] ),
            "-"
        ),
        REMOVEFILTERS ( 'SAU_Medicos por 10k Habitantes'[Ano] )
    )
VAR Ultimo_valor =
    CALCULATE (
        MAX ( 'SAU_Medicos por 10k Habitantes'[Médicos por 10.000 Habitantes] ),
        LASTNONBLANK ( 'SAU_Medicos por 10k Habitantes'[Ano], 1 )
    )
RETURN
    IF (
        ROUND ( Ultimo_valor, 2 ) = ROUND ( media, 2 ),
        Ultimo_valor,
        IF (
            ROUND ( Ultimo_valor, 2 ) > ROUND ( media, 2 ),
            0,
            IF ( ROUND ( Ultimo_valor, 2 ) < ROUND ( media, 2 ), 100, -1 )
        )
    )</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Tendência_#_Medicos</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: SAU_Medicos por 10k Habitantes</li>
<li>Column: Ano (Table: SAU_Medicos por 10k Habitantes)</li>
<li>Column: Médicos por 10.000 Habitantes (Table: SAU_Medicos por 10k Habitantes)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Tendência_#_Medicos</td>
	</tr>
	<tr>
		<td>Linha de Tend&#234;ncia Medicos</td>
		<td>SAU_Medicos por 10k Habitantes</td>
		<td></td>
		<td><pre>
-- Calcula a média de X (Data)
VAR MediaData =
    AVERAGEX (
        ALLSELECTED ( 'SAU_Medicos por 10k Habitantes'[Ano] ),
        'SAU_Medicos por 10k Habitantes'[Ano]
    ) -- Calcula a média de Y (Valor)
VAR MediaValor =
    AVERAGEX (
        ALLSELECTED ( 'SAU_Medicos por 10k Habitantes'[Médicos por 10.000 Habitantes] ),
        'SAU_Medicos por 10k Habitantes'[Médicos por 10.000 Habitantes]
    ) -- Calcula a inclinação (slope) da linha de tendência
VAR Slope =
    DIVIDE (
        SUMX (
            ALLSELECTED ( 'SAU_Medicos por 10k Habitantes' ),
            ( 'SAU_Medicos por 10k Habitantes'[Ano] - MediaData ) * ( 'SAU_Medicos por 10k Habitantes'[Médicos por 10.000 Habitantes] - MediaValor )
        ),
        SUMX (
            ALLSELECTED ( 'SAU_Medicos por 10k Habitantes' ),
            ( 'SAU_Medicos por 10k Habitantes'[Ano] - MediaData ) ^ 2
        )
    ) -- Calcula a interseção (intercept) da linha de tendência
VAR Intercept = MediaValor - Slope * MediaData
RETURN
    -- Calcula o valor da linha de tendência para cada ponto de dados
    Intercept
        + Slope * SELECTEDVALUE ( 'SAU_Medicos por 10k Habitantes'[Ano] )
-- colocar (-) para quando for quanto maior pior e (+) quando for quanto maior melhor</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Linha de Tendência Medicos</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: SAU_Medicos por 10k Habitantes</li>
<li>Column: Ano (Table: SAU_Medicos por 10k Habitantes)</li>
<li>Column: Médicos por 10.000 Habitantes (Table: SAU_Medicos por 10k Habitantes)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Linha de Tendência Medicos</td>
	</tr>
	<tr>
		<td>Taxa Homic&#237;dio M&#233;dio</td>
		<td>SEG_Homicidios por 100k Habitantes</td>
		<td></td>
		<td><pre>
AVERAGE ( [Tx Homicidio por 100.000 Habitantes] )</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Taxa Homicídio Médio</span><span class="dropDownCaret">
<ul class="nested">
<li>Column: Tx Homicidio por 100.000 Habitantes (Table: SEG_Homicidios por 100k Habitantes)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Taxa Homicídio Médio</td>
	</tr>
	<tr>
		<td>Tend&#234;ncia homic&#237;dios</td>
		<td>SEG_Homicidios por 100k Habitantes</td>
		<td></td>
		<td><pre>
VAR media =
    CALCULATE (
        DIVIDE (
            SUM ( 'SEG_Homicidios por 100k Habitantes'[Tx Homicidio por 100.000 Habitantes] ),
            DISTINCTCOUNT ( 'SEG_Homicidios por 100k Habitantes'[Ano] ),
            "-"
        ),
        REMOVEFILTERS ( 'SEG_Homicidios por 100k Habitantes'[Ano] )
    )
VAR Ultimo_valor =
    CALCULATE (
        MAX ( 'SEG_Homicidios por 100k Habitantes'[Tx Homicidio por 100.000 Habitantes] ),
        LASTNONBLANK ( 'SEG_Homicidios por 100k Habitantes'[Ano], 1 )
    )
RETURN
    IF (
        Ultimo_valor > media,
        "Piora",
        IF ( Ultimo_valor < media, "Melhora", "Estável" )
    )</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Tendência homicídios</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: SEG_Homicidios por 100k Habitantes</li>
<li>Column: Ano (Table: SEG_Homicidios por 100k Habitantes)</li>
<li>Column: Tx Homicidio por 100.000 Habitantes (Table: SEG_Homicidios por 100k Habitantes)</li>
</ul></span></li>
</ul></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Tendência homicídios</span><span class="dropDownCaret">
<ul class="nested">
<li><span class="caret">Measure: Pontuação Média dos Estados</span>
<ul class="nested">
<li>Measure: Posicao</li>
</ul></li>
</ul></span></li>
</ul></td>
	</tr>
	<tr>
		<td># Homicidios por 100k mais recente</td>
		<td>SEG_Homicidios por 100k Habitantes</td>
		<td></td>
		<td><pre>
IF (
    [Estado_Selecionado] == "",
    0,
    CALCULATE (
        MAX ( 'SEG_Homicidios por 100k Habitantes'[Tx Homicidio por 100.000 Habitantes] ),
        FILTER (
            'SEG_Homicidios por 100k Habitantes',
            'SEG_Homicidios por 100k Habitantes'[Ano]
                = MAX ( 'SEG_Homicidios por 100k Habitantes'[Ano] )
        )
    )
)</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: # Homicidios por 100k mais recente</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: SEG_Homicidios por 100k Habitantes</li>
<li>Column: Ano (Table: SEG_Homicidios por 100k Habitantes)</li>
<li>Column: Tx Homicidio por 100.000 Habitantes (Table: SEG_Homicidios por 100k Habitantes)</li>
<li><span class="caret">Measure: Estado_Selecionado (Table: UFs(ibge))</span>
<ul class="nested">
<li>Table: UFs(ibge)   ...</li>
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: nome_UF (Table: UFs(ibge))</li>
<li>Column: id_map (Table: UFs(ibge))</li>
</ul></li>
</ul></span></li>
</ul></td>
		<td>Measure: # Homicidios por 100k mais recente</td>
	</tr>
	<tr>
		<td>Tend&#234;ncia_#_Homicidios</td>
		<td>SEG_Homicidios por 100k Habitantes</td>
		<td></td>
		<td><pre>
VAR media =
    CALCULATE (
        DIVIDE (
            SUM ( [Tx Homicidio por 100.000 Habitantes] ),
            DISTINCTCOUNT ( 'SEG_Homicidios por 100k Habitantes'[Ano] ),
            "-"
        ),
        REMOVEFILTERS ( 'SEG_Homicidios por 100k Habitantes'[Ano] )
    )
VAR Ultimo_valor =
    CALCULATE (
        MAX ( 'SEG_Homicidios por 100k Habitantes'[Tx Homicidio por 100.000 Habitantes] ),
        LASTNONBLANK ( 'SEG_Homicidios por 100k Habitantes'[Ano], 1 )
    )
RETURN
    IF (
        ROUND ( Ultimo_valor, 2 ) = ROUND ( media, 2 ),
        Ultimo_valor,
        IF (
            ROUND ( Ultimo_valor, 2 ) > ROUND ( media, 2 ),
            0,
            IF ( ROUND ( Ultimo_valor, 2 ) < ROUND ( media, 2 ), 100, -1 )
        )
    )</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Tendência_#_Homicidios</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: SEG_Homicidios por 100k Habitantes</li>
<li>Column: Ano (Table: SEG_Homicidios por 100k Habitantes)</li>
<li>Column: Tx Homicidio por 100.000 Habitantes (Table: SEG_Homicidios por 100k Habitantes)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Tendência_#_Homicidios</td>
	</tr>
	<tr>
		<td>Tendencia_Homicidios_Valorizado</td>
		<td>SEG_Homicidios por 100k Habitantes</td>
		<td></td>
		<td><pre>
VAR media =
    CALCULATE (
        DIVIDE (
            SUM ( 'SEG_Homicidios por 100k Habitantes'[Tx Homicidio por 100.000 Habitantes] ),
            DISTINCTCOUNT ( 'SEG_Homicidios por 100k Habitantes'[Ano] ),
            "-"
        ),
        REMOVEFILTERS ( 'SEG_Homicidios por 100k Habitantes'[Ano] )
    )
VAR Ultimo_valor =
    CALCULATE (
        MAX ( 'SEG_Homicidios por 100k Habitantes'[Tx Homicidio por 100.000 Habitantes] ),
        LASTNONBLANK ( 'SEG_Homicidios por 100k Habitantes'[Ano], 1 )
    )
RETURN
    IF ( Ultimo_valor > media, 0, IF ( Ultimo_valor < media, 100, Ultimo_valor ) )</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Tendencia_Homicidios_Valorizado</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: SEG_Homicidios por 100k Habitantes</li>
<li>Column: Ano (Table: SEG_Homicidios por 100k Habitantes)</li>
<li>Column: Tx Homicidio por 100.000 Habitantes (Table: SEG_Homicidios por 100k Habitantes)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Tendencia_Homicidios_Valorizado</td>
	</tr>
	<tr>
		<td>Linha de Tend&#234;ncia Homicidios</td>
		<td>SEG_Homicidios por 100k Habitantes</td>
		<td></td>
		<td><pre>
-- Calcula a média de X (Data)
VAR MediaData =
    AVERAGEX (
        ALLSELECTED ( 'SEG_Homicidios por 100k Habitantes'[Ano] ),
        'SEG_Homicidios por 100k Habitantes'[Ano]
    ) -- Calcula a média de Y (Valor)
VAR MediaValor =
    AVERAGEX (
        ALLSELECTED ( 'SEG_Homicidios por 100k Habitantes'[Tx Homicidio por 100.000 Habitantes] ),
        'SEG_Homicidios por 100k Habitantes'[Tx Homicidio por 100.000 Habitantes]
    ) -- Calcula a inclinação (slope) da linha de tendência
VAR Slope =
    DIVIDE (
        SUMX (
            ALLSELECTED ( 'SEG_Homicidios por 100k Habitantes' ),
            ( 'SEG_Homicidios por 100k Habitantes'[Ano] - MediaData ) * ( 'SEG_Homicidios por 100k Habitantes'[Tx Homicidio por 100.000 Habitantes] - MediaValor )
        ),
        SUMX (
            ALLSELECTED ( 'SEG_Homicidios por 100k Habitantes' ),
            ( 'SEG_Homicidios por 100k Habitantes'[Ano] - MediaData ) ^ 2
        )
    ) -- Calcula a interseção (intercept) da linha de tendência
VAR Intercept = MediaValor - Slope * MediaData
RETURN
    -- Calcula o valor da linha de tendência para cada ponto de dados
    Intercept
        + Slope * SELECTEDVALUE ( 'SEG_Homicidios por 100k Habitantes'[Ano] )
-- colocar (-) para quando for quanto maior pior e (+) quando for quanto maior melhor</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Linha de Tendência Homicidios</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: SEG_Homicidios por 100k Habitantes</li>
<li>Column: Ano (Table: SEG_Homicidios por 100k Habitantes)</li>
<li>Column: Tx Homicidio por 100.000 Habitantes (Table: SEG_Homicidios por 100k Habitantes)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Linha de Tendência Homicidios</td>
	</tr>
	<tr>
		<td>Taxa Homicidios Atual Anual</td>
		<td>SEG_Homicidios por 100k Habitantes</td>
		<td></td>
		<td><pre>
IF (
    OR (
        HASONEFILTER ( 'UFs(ibge)'[id_map] ),
        HASONEFILTER ( 'UFs(ibge)'[Sigla_UF] )
    ),
    CALCULATE (
        SUM ( 'SEG_Homicidios por 100k Habitantes'[Tx Homicidio por 100.000 Habitantes] ),
        'SEG_Homicidios por 100k Habitantes'[Ano] = MAX ( [Ano] )
    ),
    0
)</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Taxa Homicidios Atual Anual</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: UFs(ibge)</li>
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Table: SEG_Homicidios por 100k Habitantes</li>
<li>Column: Ano (Table: SEG_Homicidios por 100k Habitantes)</li>
<li>Column: Tx Homicidio por 100.000 Habitantes (Table: SEG_Homicidios por 100k Habitantes)</li>
<li>Column: id_map (Table: UFs(ibge))</li>
</ul></span></li>
</ul></td>
		<td>Measure: Taxa Homicidios Atual Anual</td>
	</tr>
	<tr>
		<td>TX Pobreza M&#233;dio</td>
		<td>SOC_Taxa de Pobreza</td>
		<td></td>
		<td><pre>
CALCULATE (
    DIVIDE (
        SUM ( 'SOC_Taxa de Pobreza'[Taxa de Pobreza] ),
        DISTINCTCOUNT ( 'SOC_Taxa de Pobreza'[Ano] ),
        "-"
    )
)</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: TX Pobreza Médio</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: SOC_Taxa de Pobreza</li>
<li>Column: Ano (Table: SOC_Taxa de Pobreza)</li>
<li>Column: Taxa de Pobreza (Table: SOC_Taxa de Pobreza)</li>
</ul></span></li>
</ul></td>
		<td>Measure: TX Pobreza Médio</td>
	</tr>
	<tr>
		<td>Tend&#234;ncia TX Pobreza</td>
		<td>SOC_Taxa de Pobreza</td>
		<td></td>
		<td><pre>
VAR media =
    CALCULATE (
        DIVIDE (
            SUM ( 'SOC_Taxa de Pobreza'[Taxa de Pobreza] ),
            DISTINCTCOUNT ( 'SOC_Taxa de Pobreza'[Ano] ),
            "-"
        ),
        REMOVEFILTERS ( 'SOC_Taxa de Pobreza'[Ano] )
    )
VAR Ultimo_valor =
    CALCULATE (
        MAX ( 'SOC_Taxa de Pobreza'[Taxa de Pobreza] ),
        LASTNONBLANK ( 'SOC_Taxa de Pobreza'[Ano], 1 )
    )
RETURN
    IF (
        Ultimo_valor > media,
        "Alta",
        IF ( Ultimo_valor < media, "Queda", "Estável" )
    )</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Tendência TX Pobreza</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: SOC_Taxa de Pobreza</li>
<li>Column: Ano (Table: SOC_Taxa de Pobreza)</li>
<li>Column: Taxa de Pobreza (Table: SOC_Taxa de Pobreza)</li>
</ul></span></li>
</ul></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Tendência TX Pobreza</span><span class="dropDownCaret">
<ul class="nested">
<li><span class="caret">Measure: Pontuação Média dos Estados</span>
<ul class="nested">
<li>Measure: Posicao</li>
</ul></li>
</ul></span></li>
</ul></td>
	</tr>
	<tr>
		<td>Tendencia_Pobreza_Valorizado</td>
		<td>SOC_Taxa de Pobreza</td>
		<td></td>
		<td><pre>
VAR media =
    CALCULATE (
        DIVIDE (
            SUM ( 'SOC_Taxa de Pobreza'[Taxa de Pobreza] ),
            DISTINCTCOUNT ( 'SOC_Taxa de Pobreza'[Ano] ),
            "-"
        ),
        REMOVEFILTERS ( 'SOC_Taxa de Pobreza'[Ano] )
    )
VAR Ultimo_valor =
    CALCULATE (
        MAX ( 'SOC_Taxa de Pobreza'[Taxa de Pobreza] ),
        LASTNONBLANK ( 'SOC_Taxa de Pobreza'[Ano], 1 )
    )
RETURN
    IF ( Ultimo_valor > media, 0, IF ( Ultimo_valor < media, 100, Ultimo_valor ) )</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Tendencia_Pobreza_Valorizado</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: SOC_Taxa de Pobreza</li>
<li>Column: Ano (Table: SOC_Taxa de Pobreza)</li>
<li>Column: Taxa de Pobreza (Table: SOC_Taxa de Pobreza)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Tendencia_Pobreza_Valorizado</td>
	</tr>
	<tr>
		<td>Taxa Pobreza Atual</td>
		<td>SOC_Taxa de Pobreza</td>
		<td></td>
		<td><pre>
IF (
    OR (
        HASONEFILTER ( 'UFs(ibge)'[id_map] ),
        HASONEFILTER ( 'UFs(ibge)'[Sigla_UF] )
    ),
    CALCULATE (
        SUM ( 'SOC_Taxa de Pobreza'[Taxa de Pobreza] ),
        'SOC_Taxa de Pobreza'[Ano] = MAX ( [Ano] )
    ),
    0
)</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Taxa Pobreza Atual</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: UFs(ibge)</li>
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Table: SOC_Taxa de Pobreza</li>
<li>Column: Ano (Table: SOC_Taxa de Pobreza)</li>
<li>Column: Taxa de Pobreza (Table: SOC_Taxa de Pobreza)</li>
<li>Column: id_map (Table: UFs(ibge))</li>
</ul></span></li>
</ul></td>
		<td>Measure: Taxa Pobreza Atual</td>
	</tr>
	<tr>
		<td>Linha de Tend&#234;ncia Pobreza</td>
		<td>SOC_Taxa de Pobreza</td>
		<td></td>
		<td><pre>
-- Calcula a média de X (Data)
VAR MediaData =
    AVERAGEX (
        ALLSELECTED ( 'SOC_Taxa de Pobreza'[Ano] ),
        'SOC_Taxa de Pobreza'[Ano]
    ) -- Calcula a média de Y (Valor)
VAR MediaValor =
    AVERAGEX (
        ALLSELECTED ( 'SOC_Taxa de Pobreza'[Taxa de Pobreza] ),
        'SOC_Taxa de Pobreza'[Taxa de Pobreza]
    ) -- Calcula a inclinação (slope) da linha de tendência
VAR Slope =
    DIVIDE (
        SUMX (
            ALLSELECTED ( 'SOC_Taxa de Pobreza' ),
            ( 'SOC_Taxa de Pobreza'[Ano] - MediaData ) * ( 'SOC_Taxa de Pobreza'[Taxa de Pobreza] - MediaValor )
        ),
        SUMX (
            ALLSELECTED ( 'SOC_Taxa de Pobreza' ),
            ( 'SOC_Taxa de Pobreza'[Ano] - MediaData ) ^ 2
        )
    ) -- Calcula a interseção (intercept) da linha de tendência
VAR Intercept = MediaValor - Slope * MediaData
RETURN
    -- Calcula o valor da linha de tendência para cada ponto de dados  
    Intercept
        + Slope * SELECTEDVALUE ( 'SOC_Taxa de Pobreza'[Ano] )
-- colocar (-) para quando for quanto maior pior e (+) quando for quanto maior melhor</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Linha de Tendência Pobreza</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: SOC_Taxa de Pobreza</li>
<li>Column: Ano (Table: SOC_Taxa de Pobreza)</li>
<li>Column: Taxa de Pobreza (Table: SOC_Taxa de Pobreza)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Linha de Tendência Pobreza</td>
	</tr>
	<tr>
		<td>Renda per Capita mais recente</td>
		<td>FIN_Renda per capita (Atlas DH - Pnad Cont&#237;nua/A)</td>
		<td></td>
		<td><pre>
IF (
    [Estado_Selecionado] == "",
    0,
    CALCULATE (
        MAX ( 'FIN_Renda per capita (Atlas DH - Pnad Contínua/A)'[Renda per Capita] ),
        FILTER (
            'FIN_Renda per capita (Atlas DH - Pnad Contínua/A)',
            'FIN_Renda per capita (Atlas DH - Pnad Contínua/A)'[Ano]
                = MAX ( 'FIN_Renda per capita (Atlas DH - Pnad Contínua/A)'[Ano] )
        )
    )
)</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Renda per Capita mais recente</span><span class="dropDownCaret">
<ul class="nested">
<li><span class="caret">Measure: Estado_Selecionado (Table: UFs(ibge))</span>
<ul class="nested">
<li>Table: UFs(ibge)   ...</li>
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: nome_UF (Table: UFs(ibge))</li>
<li>Column: id_map (Table: UFs(ibge))</li>
</ul></li>
<li>Table: FIN_Renda per capita (Atlas DH - Pnad Contínua/A)</li>
<li>Column: Ano (Table: FIN_Renda per capita (Atlas DH - Pnad Contínua/A))</li>
<li>Column: Renda per Capita (Table: FIN_Renda per capita (Atlas DH - Pnad Contínua/A))</li>
</ul></span></li>
</ul></td>
		<td>Measure: Renda per Capita mais recente</td>
	</tr>
	<tr>
		<td>Tend&#234;ncia_Renda_per_capita</td>
		<td>FIN_Renda per capita (Atlas DH - Pnad Cont&#237;nua/A)</td>
		<td></td>
		<td><pre>
VAR media =
    CALCULATE (
        DIVIDE (
            SUM ( [Renda per Capita] ),
            DISTINCTCOUNT ( 'FIN_Renda per capita (Atlas DH - Pnad Contínua/A)'[Ano] ),
            "-"
        ),
        REMOVEFILTERS ( 'FIN_Renda per capita (Atlas DH - Pnad Contínua/A)'[Ano] )
    )
VAR Ultimo_valor =
    CALCULATE (
        MAX ( 'FIN_Renda per capita (Atlas DH - Pnad Contínua/A)'[Renda per Capita] ),
        LASTNONBLANK ( 'FIN_Renda per capita (Atlas DH - Pnad Contínua/A)'[Ano], 1 )
    )
RETURN
    IF (
        Ultimo_valor > media,
        "Alta",
        IF ( Ultimo_valor < media, "Queda", "Estável" )
    )</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Tendência_Renda_per_capita</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: FIN_Renda per capita (Atlas DH - Pnad Contínua/A)</li>
<li>Column: Ano (Table: FIN_Renda per capita (Atlas DH - Pnad Contínua/A))</li>
<li>Column: Renda per Capita (Table: FIN_Renda per capita (Atlas DH - Pnad Contínua/A))</li>
</ul></span></li>
</ul></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Tendência_Renda_per_capita</span><span class="dropDownCaret">
<ul class="nested">
<li><span class="caret">Measure: Pontuação Média dos Estados</span>
<ul class="nested">
<li>Measure: Posicao</li>
</ul></li>
</ul></span></li>
</ul></td>
	</tr>
	<tr>
		<td>Tend&#234;ncia_#_RendaperCapita</td>
		<td>FIN_Renda per capita (Atlas DH - Pnad Cont&#237;nua/A)</td>
		<td></td>
		<td><pre>
VAR media =
    CALCULATE (
        DIVIDE (
            SUM ( 'FIN_Renda per capita (Atlas DH - Pnad Contínua/A)'[Renda per Capita] ),
            DISTINCTCOUNT ( 'FIN_Renda per capita (Atlas DH - Pnad Contínua/A)'[Ano] ),
            "-"
        ),
        REMOVEFILTERS ( 'FIN_Renda per capita (Atlas DH - Pnad Contínua/A)'[Ano] )
    )
VAR Ultimo_valor =
    CALCULATE (
        MAX ( 'FIN_Renda per capita (Atlas DH - Pnad Contínua/A)'[Renda per Capita] ),
        LASTNONBLANK ( 'FIN_Renda per capita (Atlas DH - Pnad Contínua/A)'[Ano], 1 )
    )
RETURN
    IF (
        ROUND ( Ultimo_valor, 2 ) = ROUND ( media, 2 ),
        Ultimo_valor,
        IF (
            ROUND ( Ultimo_valor, 2 ) > ROUND ( media, 2 ),
            0,
            IF ( ROUND ( Ultimo_valor, 2 ) < ROUND ( media, 2 ), 100, -1 )
        )
    )</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Tendência_#_RendaperCapita</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: FIN_Renda per capita (Atlas DH - Pnad Contínua/A)</li>
<li>Column: Ano (Table: FIN_Renda per capita (Atlas DH - Pnad Contínua/A))</li>
<li>Column: Renda per Capita (Table: FIN_Renda per capita (Atlas DH - Pnad Contínua/A))</li>
</ul></span></li>
</ul></td>
		<td>Measure: Tendência_#_RendaperCapita</td>
	</tr>
	<tr>
		<td>Tendencia_RendaPerCapita_Valorizado</td>
		<td>FIN_Renda per capita (Atlas DH - Pnad Cont&#237;nua/A)</td>
		<td></td>
		<td><pre>
VAR media =
    CALCULATE (
        DIVIDE (
            SUM ( 'FIN_Renda per capita (Atlas DH - Pnad Contínua/A)'[Renda per Capita] ),
            DISTINCTCOUNT ( 'FIN_Renda per capita (Atlas DH - Pnad Contínua/A)'[Ano] ),
            "-"
        ),
        REMOVEFILTERS ( 'FIN_Renda per capita (Atlas DH - Pnad Contínua/A)'[Ano] )
    )
VAR Ultimo_valor =
    CALCULATE (
        MAX ( 'FIN_Renda per capita (Atlas DH - Pnad Contínua/A)'[Renda per Capita] ),
        LASTNONBLANK ( 'FIN_Renda per capita (Atlas DH - Pnad Contínua/A)'[Ano], 1 )
    )
RETURN
    IF (
        ROUND ( Ultimo_valor, 2 ) = ROUND ( media, 2 ),
        Ultimo_valor,
        IF (
            ROUND ( Ultimo_valor, 2 ) > ROUND ( media, 2 ),
            Ultimo_valor,
            IF ( ROUND ( Ultimo_valor, 2 ) < ROUND ( media, 2 ), media, -1 )
        )
    )</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Tendencia_RendaPerCapita_Valorizado</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: FIN_Renda per capita (Atlas DH - Pnad Contínua/A)</li>
<li>Column: Ano (Table: FIN_Renda per capita (Atlas DH - Pnad Contínua/A))</li>
<li>Column: Renda per Capita (Table: FIN_Renda per capita (Atlas DH - Pnad Contínua/A))</li>
</ul></span></li>
</ul></td>
		<td>Measure: Tendencia_RendaPerCapita_Valorizado</td>
	</tr>
	<tr>
		<td>Linha de Tend&#234;ncia Renda</td>
		<td>FIN_Renda per capita (Atlas DH - Pnad Cont&#237;nua/A)</td>
		<td></td>
		<td><pre>
-- Calcula a média de X (Data)
VAR MediaData =
    AVERAGEX (
        ALLSELECTED ( 'FIN_Renda per capita (Atlas DH - Pnad Contínua/A)'[Ano] ),
        'FIN_Renda per capita (Atlas DH - Pnad Contínua/A)'[Ano]
    ) -- Calcula a média de Y (Valor)
VAR MediaValor =
    AVERAGEX (
        ALLSELECTED ( 'FIN_Renda per capita (Atlas DH - Pnad Contínua/A)'[Renda per Capita] ),
        'FIN_Renda per capita (Atlas DH - Pnad Contínua/A)'[Renda per Capita]
    ) -- Calcula a inclinação (slope) da linha de tendência
VAR Slope =
    DIVIDE (
        SUMX (
            ALLSELECTED ( 'FIN_Renda per capita (Atlas DH - Pnad Contínua/A)' ),
            ( 'FIN_Renda per capita (Atlas DH - Pnad Contínua/A)'[Ano] - MediaData ) * ( 'FIN_Renda per capita (Atlas DH - Pnad Contínua/A)'[Renda per Capita] - MediaValor )
        ),
        SUMX (
            ALLSELECTED ( 'FIN_Renda per capita (Atlas DH - Pnad Contínua/A)' ),
            ( 'FIN_Renda per capita (Atlas DH - Pnad Contínua/A)'[Ano] - MediaData ) ^ 2
        )
    ) -- Calcula a interseção (intercept) da linha de tendência
VAR Intercept = MediaValor - Slope * MediaData
RETURN
    -- Calcula o valor da linha de tendência para cada ponto de dados
    Intercept
        + Slope
            * SELECTEDVALUE ( 'FIN_Renda per capita (Atlas DH - Pnad Contínua/A)'[Ano] )
-- colocar (-) para quando for quanto maior pior e (+) quando for quanto maior melhor</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Linha de Tendência Renda</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: FIN_Renda per capita (Atlas DH - Pnad Contínua/A)</li>
<li>Column: Ano (Table: FIN_Renda per capita (Atlas DH - Pnad Contínua/A))</li>
<li>Column: Renda per Capita (Table: FIN_Renda per capita (Atlas DH - Pnad Contínua/A))</li>
</ul></span></li>
</ul></td>
		<td>Measure: Linha de Tendência Renda</td>
	</tr>
	<tr>
		<td>Receita-Despesa mais recente</td>
		<td>FIN_Receitas x Despesas</td>
		<td></td>
		<td><pre>
IF (
    OR (
        HASONEFILTER ( 'UFs(ibge)'[id_map] ),
        HASONEFILTER ( 'UFs(ibge)'[Sigla_UF] )
    ),
    CALCULATE (
        MAX ( 'FIN_Receitas x Despesas'[Receita - Despesa] ),
        FILTER (
            'FIN_Receitas x Despesas',
            'FIN_Receitas x Despesas'[Ano] = MAX ( 'FIN_Receitas x Despesas'[Ano] )
        )
    ),
    0
)</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Receita-Despesa mais recente</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: UFs(ibge)</li>
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li><span class="caret">Table: FIN_Receitas x Despesas</span>
<ul class="nested">
<li>Partition: FIN_Receita corrente - receita bruta - estadual (Table: FIN_Receita corrente - receita bruta - estadual)</li>
<li>Partition: FIN_Despesas correntes - estadual (Table: FIN_Despesas correntes - estadual)</li>
</ul></li>
<li>Column: Ano (Table: FIN_Receitas x Despesas)</li>
<li>Column: Receita - Despesa (Table: FIN_Receitas x Despesas)</li>
<li>Column: id_map (Table: UFs(ibge))</li>
</ul></span></li>
</ul></td>
		<td>Measure: Receita-Despesa mais recente</td>
	</tr>
	<tr>
		<td>Tend&#234;ncia_Receita_Despesa</td>
		<td>FIN_Receitas x Despesas</td>
		<td></td>
		<td><pre>
VAR media =
    CALCULATE (
        DIVIDE (
            SUM ( [Receita - Despesa] ),
            DISTINCTCOUNT ( 'FIN_Receitas x Despesas'[Ano] ),
            "-"
        ),
        REMOVEFILTERS ( 'FIN_Receitas x Despesas'[Ano] )
    )
VAR Ultimo_valor =
    CALCULATE (
        MAX ( 'FIN_Receitas x Despesas'[Receita - Despesa] ),
        LASTNONBLANK ( 'FIN_Receitas x Despesas'[Ano], 1 )
    )
RETURN
    IF (
        Ultimo_valor > media,
        "Alta",
        IF ( Ultimo_valor < media, "Queda", "Estável" )
    )</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Tendência_Receita_Despesa</span><span class="dropDownCaret">
<ul class="nested">
<li><span class="caret">Table: FIN_Receitas x Despesas</span>
<ul class="nested">
<li>Partition: FIN_Receita corrente - receita bruta - estadual (Table: FIN_Receita corrente - receita bruta - estadual)</li>
<li>Partition: FIN_Despesas correntes - estadual (Table: FIN_Despesas correntes - estadual)</li>
</ul></li>
<li>Column: Ano (Table: FIN_Receitas x Despesas)</li>
<li>Column: Receita - Despesa (Table: FIN_Receitas x Despesas)</li>
</ul></span></li>
</ul></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Tendência_Receita_Despesa</span><span class="dropDownCaret">
<ul class="nested">
<li><span class="caret">Measure: Pontuação Média dos Estados</span>
<ul class="nested">
<li>Measure: Posicao</li>
</ul></li>
</ul></span></li>
</ul></td>
	</tr>
	<tr>
		<td>Tendencia_RendaEstadual_Valorizado</td>
		<td>FIN_Receitas x Despesas</td>
		<td></td>
		<td><pre>
VAR media =
    CALCULATE (
        DIVIDE (
            SUM ( 'FIN_Receitas x Despesas'[Receita - Despesa] ),
            DISTINCTCOUNT ( 'FIN_Receitas x Despesas'[Ano] ),
            "-"
        ),
        REMOVEFILTERS ( 'FIN_Receitas x Despesas'[Ano] )
    )
VAR Ultimo_valor =
    CALCULATE (
        MAX ( 'FIN_Receitas x Despesas'[Receita - Despesa] ),
        LASTNONBLANK ( 'FIN_Receitas x Despesas'[Ano], 1 )
    )
RETURN
    IF (
        ROUND ( Ultimo_valor, 2 ) = ROUND ( media, 2 ),
        Ultimo_valor,
        IF (
            ROUND ( Ultimo_valor, 2 ) > ROUND ( media, 2 ),
            Ultimo_valor,
            IF ( ROUND ( Ultimo_valor, 2 ) < ROUND ( media, 2 ), media, -1 )
        )
    )</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Tendencia_RendaEstadual_Valorizado</span><span class="dropDownCaret">
<ul class="nested">
<li><span class="caret">Table: FIN_Receitas x Despesas</span>
<ul class="nested">
<li>Partition: FIN_Receita corrente - receita bruta - estadual (Table: FIN_Receita corrente - receita bruta - estadual)</li>
<li>Partition: FIN_Despesas correntes - estadual (Table: FIN_Despesas correntes - estadual)</li>
</ul></li>
<li>Column: Ano (Table: FIN_Receitas x Despesas)</li>
<li>Column: Receita - Despesa (Table: FIN_Receitas x Despesas)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Tendencia_RendaEstadual_Valorizado</td>
	</tr>
	<tr>
		<td>Linha de Tend&#234;ncia Receita - Despesa</td>
		<td>FIN_Receitas x Despesas</td>
		<td></td>
		<td><pre>
-- Calcula a média de X (Data)
VAR MediaData =
    AVERAGEX (
        ALLSELECTED ( 'FIN_Receitas x Despesas'[Ano] ),
        'FIN_Receitas x Despesas'[Ano]
    ) -- Calcula a média de Y (Valor)
VAR MediaValor =
    AVERAGEX (
        ALLSELECTED ( 'FIN_Receitas x Despesas'[Receita - Despesa] ),
        'FIN_Receitas x Despesas'[Receita - Despesa]
    ) -- Calcula a inclinação (slope) da linha de tendência
VAR Slope =
    DIVIDE (
        SUMX (
            ALLSELECTED ( 'FIN_Receitas x Despesas' ),
            ( 'FIN_Receitas x Despesas'[Ano] - MediaData ) * ( 'FIN_Receitas x Despesas'[Receita - Despesa] - MediaValor )
        ),
        SUMX (
            ALLSELECTED ( 'FIN_Receitas x Despesas' ),
            ( 'FIN_Receitas x Despesas'[Ano] - MediaData ) ^ 2
        )
    ) -- Calcula a interseção (intercept) da linha de tendência
VAR Intercept = MediaValor - Slope * MediaData
RETURN
    -- Calcula o valor da linha de tendência para cada ponto de dados
    Intercept
        + Slope * SELECTEDVALUE ( 'FIN_Receitas x Despesas'[Ano] )
-- colocar (-) para quando for quanto maior pior e (+) quando for quanto maior melhor</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Linha de Tendência Receita - Despesa</span><span class="dropDownCaret">
<ul class="nested">
<li><span class="caret">Table: FIN_Receitas x Despesas</span>
<ul class="nested">
<li>Partition: FIN_Receita corrente - receita bruta - estadual (Table: FIN_Receita corrente - receita bruta - estadual)</li>
<li>Partition: FIN_Despesas correntes - estadual (Table: FIN_Despesas correntes - estadual)</li>
</ul></li>
<li>Column: Ano (Table: FIN_Receitas x Despesas)</li>
<li>Column: Receita - Despesa (Table: FIN_Receitas x Despesas)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Linha de Tendência Receita - Despesa</td>
	</tr>
	<tr>
		<td>Gini M&#233;dio</td>
		<td>SOC_Indice de Gini</td>
		<td></td>
		<td><pre>
AVERAGE ( [Indice de Gini] )</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Gini Médio</span><span class="dropDownCaret">
<ul class="nested">
<li>Column: Indice de Gini (Table: SOC_Indice de Gini)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Gini Médio</td>
	</tr>
	<tr>
		<td>Tend&#234;ncia Gini</td>
		<td>SOC_Indice de Gini</td>
		<td></td>
		<td><pre>
VAR media =
    CALCULATE (
        DIVIDE (
            SUM ( 'SOC_Indice de Gini'[Indice de Gini] ),
            DISTINCTCOUNT ( 'SOC_Indice de Gini'[Ano] ),
            "-"
        ),
        REMOVEFILTERS ( 'SOC_Indice de Gini'[Ano] )
    )
VAR Ultimo_valor =
    CALCULATE (
        MAX ( 'SOC_Indice de Gini'[Indice de Gini] ),
        LASTNONBLANK ( 'SOC_Indice de Gini'[Ano], 1 )
    )
RETURN
    IF (
        Ultimo_valor > media,
        "Piora",
        IF ( Ultimo_valor < media, "Melhora", "Estável" )
    )</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Tendência Gini</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: SOC_Indice de Gini</li>
<li>Column: Ano (Table: SOC_Indice de Gini)</li>
<li>Column: Indice de Gini (Table: SOC_Indice de Gini)</li>
</ul></span></li>
</ul></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Tendência Gini</span><span class="dropDownCaret">
<ul class="nested">
<li><span class="caret">Measure: Pontuação Média dos Estados</span>
<ul class="nested">
<li>Measure: Posicao</li>
</ul></li>
</ul></span></li>
</ul></td>
	</tr>
	<tr>
		<td>Gini mais recente</td>
		<td>SOC_Indice de Gini</td>
		<td></td>
		<td><pre>
IF (
    OR (
        HASONEFILTER ( 'UFs(ibge)'[id_map] ),
        HASONEFILTER ( 'UFs(ibge)'[Sigla_UF] )
    ),
    CALCULATE (
        MAX ( 'SOC_Indice de Gini'[Indice de Gini] ),
        FILTER (
            'SOC_Indice de Gini',
            'SOC_Indice de Gini'[Ano] = MAX ( 'SOC_Indice de Gini'[Ano] )
        )
    ),
    0
)</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Gini mais recente</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: UFs(ibge)</li>
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Table: SOC_Indice de Gini</li>
<li>Column: Ano (Table: SOC_Indice de Gini)</li>
<li>Column: Indice de Gini (Table: SOC_Indice de Gini)</li>
<li>Column: id_map (Table: UFs(ibge))</li>
</ul></span></li>
</ul></td>
		<td>Measure: Gini mais recente</td>
	</tr>
	<tr>
		<td>Tendencia_Gini_Valorizado</td>
		<td>SOC_Indice de Gini</td>
		<td></td>
		<td><pre>
VAR media =
    CALCULATE (
        DIVIDE (
            SUM ( 'SOC_Indice de Gini'[Indice de Gini] ),
            DISTINCTCOUNT ( 'SOC_Indice de Gini'[Ano] ),
            "-"
        ),
        REMOVEFILTERS ( 'SOC_Indice de Gini'[Ano] )
    )
VAR Ultimo_valor =
    CALCULATE (
        MAX ( 'SOC_Indice de Gini'[Indice de Gini] ),
        LASTNONBLANK ( 'SOC_Indice de Gini'[Ano], 1 )
    )
RETURN
    IF (
        Ultimo_valor = media,
        Ultimo_valor,
        IF ( Ultimo_valor > media, 0, IF ( Ultimo_valor < media, 100, -1 ) )
    )</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Tendencia_Gini_Valorizado</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: SOC_Indice de Gini</li>
<li>Column: Ano (Table: SOC_Indice de Gini)</li>
<li>Column: Indice de Gini (Table: SOC_Indice de Gini)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Tendencia_Gini_Valorizado</td>
	</tr>
	<tr>
		<td>Linha de Tend&#234;ncia Gini</td>
		<td>SOC_Indice de Gini</td>
		<td></td>
		<td><pre>
-- Calcula a média de X (Data)
VAR MediaData =
    AVERAGEX (
        ALLSELECTED ( 'SOC_Indice de Gini'[Ano] ),
        'SOC_Indice de Gini'[Ano]
    ) -- Calcula a média de Y (Valor)
VAR MediaValor =
    AVERAGEX (
        ALLSELECTED ( 'SOC_Indice de Gini'[Indice de Gini] ),
        'SOC_Indice de Gini'[Indice de Gini]
    ) -- Calcula a inclinação (slope) da linha de tendência
VAR Slope =
    DIVIDE (
        SUMX (
            ALLSELECTED ( 'SOC_Indice de Gini' ),
            ( 'SOC_Indice de Gini'[Ano] - MediaData ) * ( 'SOC_Indice de Gini'[Indice de Gini] - MediaValor )
        ),
        SUMX (
            ALLSELECTED ( 'SOC_Indice de Gini' ),
            ( 'SOC_Indice de Gini'[Ano] - MediaData ) ^ 2
        )
    ) -- Calcula a interseção (intercept) da linha de tendência
VAR Intercept = MediaValor - Slope * MediaData
RETURN
    -- Calcula o valor da linha de tendência para cada ponto de dados  
    Intercept
        + Slope * SELECTEDVALUE ( 'SOC_Indice de Gini'[Ano] )
-- colocar (-) para quando for quanto maior pior e (+) quando for quanto maior melhor</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Linha de Tendência Gini</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: SOC_Indice de Gini</li>
<li>Column: Ano (Table: SOC_Indice de Gini)</li>
<li>Column: Indice de Gini (Table: SOC_Indice de Gini)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Linha de Tendência Gini</td>
	</tr>
	<tr>
		<td>M&#233;dia do Crime</td>
		<td>SEG_Ocorr&#234;ncias Criminais</td>
		<td></td>
		<td><pre>
AVERAGE ( [Vítimas] )</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Média do Crime</span><span class="dropDownCaret">
<ul class="nested">
<li>Column: Vítimas (Table: SEG_Ocorrências Criminais)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Média do Crime</td>
	</tr>
	<tr>
		<td>Tend&#234;ncia Crime</td>
		<td>SEG_Ocorr&#234;ncias Criminais</td>
		<td></td>
		<td><pre>
VAR media =
    DIVIDE (
        SUM ( 'SEG_Ocorrências Criminais'[Vítimas] ),
        DISTINCTCOUNT ( 'SEG_Ocorrências Criminais'[Ano] ),
        "-"
    )
VAR Ultimo_valor =
    CALCULATE (
        MAX ( 'SEG_Ocorrências Criminais'[Vítimas] ),
        LASTNONBLANK ( 'SEG_Ocorrências Criminais'[Ano], 1 )
    )
RETURN
    IF (
        Ultimo_valor > media,
        "Alta",
        IF ( Ultimo_valor < media, "Queda", "Estável" )
    )</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Tendência Crime</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: SEG_Ocorrências Criminais</li>
<li>Column: Ano (Table: SEG_Ocorrências Criminais)</li>
<li>Column: Vítimas (Table: SEG_Ocorrências Criminais)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Tendência Crime</td>
	</tr>
	<tr>
		<td>Ano_Select</td>
		<td>Calendario</td>
		<td></td>
		<td><pre>
SELECTEDVALUE ( Tema_ind_over[Column], "-" )</pre></td>
		<td>Measure: Ano_Select</td>
		<td>Measure: Ano_Select</td>
	</tr>
	<tr>
		<td>Ano_mais_recente_Indice</td>
		<td>Indices_mais_recentes</td>
		<td></td>
		<td><pre>
CALCULATE ( MAX ( [Ano] ), 'Indices_mais_recentes'[Indice] = "Indice de Gini" )</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Ano_mais_recente_Indice</span><span class="dropDownCaret">
<ul class="nested">
<li><span class="caret">Table: Indices_mais_recentes</span>
<ul class="nested">
<li>Partition: SOC_Taxa de Pobreza (Table: SOC_Taxa de Pobreza)</li>
<li>Partition: SOC_Indice de Gini (Table: SOC_Indice de Gini)</li>
<li>Partition: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais (Table: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais)</li>
<li>Partition: SOC_IDHM_por_UF (Table: SOC_IDHM_por_UF)</li>
<li>Partition: FIN_Renda per capita (Atlas DH - Pnad Contínua/A) (Table: FIN_Renda per capita (Atlas DH - Pnad Contínua/A))</li>
<li><span class="caret">Partition: FIN_Receitas x Despesas (Table: FIN_Receitas x Despesas)</span>
<ul class="nested">
<li>Partition: FIN_Receita corrente - receita bruta - estadual (Table: FIN_Receita corrente - receita bruta - estadual)</li>
<li>Partition: FIN_Despesas correntes - estadual (Table: FIN_Despesas correntes - estadual)</li>
</ul></li>
<li>Partition: FIN_Receita corrente - receita bruta - estadual (Table: FIN_Receita corrente - receita bruta - estadual)</li>
<li>Partition: SEG_Ocorrências Criminais (Table: SEG_Ocorrências Criminais)</li>
<li>Partition: SEG_Homicidios por 100k Habitantes (Table: SEG_Homicidios por 100k Habitantes)</li>
<li>Partition: SAU_Estabelecimento de saude(DataSUS) (Table: SAU_Estabelecimento de saude(DataSUS))</li>
<li>Partition: SAU_Medicos por 10k Habitantes (Table: SAU_Medicos por 10k Habitantes)</li>
<li>Partition: EDU_% Alunos na Rede Pública (Table: EDU_% Alunos na Rede Pública)</li>
<li>Partition: SOC_Taxa de desemprego (IBGE - Continua) (Table: SOC_Taxa de desemprego (IBGE - Continua))</li>
<li>Partition: SOC_Taxa de desemprego por Ano (IBGE - Continua) (Table: SOC_Taxa de desemprego por Ano (IBGE - Continua))</li>
</ul></li>
<li>Column: Ano (Table: Indices_mais_recentes)</li>
<li>Column: Indice (Table: Indices_mais_recentes)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Ano_mais_recente_Indice</td>
	</tr>
	<tr>
		<td>Tend&#234;ncia TX Desemprego por ano</td>
		<td>SOC_Taxa de desemprego por Ano (IBGE - Continua)</td>
		<td></td>
		<td><pre>
VAR media =
    CALCULATE (
        DIVIDE (
            SUM ( 'SOC_Taxa de desemprego por Ano (IBGE - Continua)'[Taxa Desemprego média anual %] ),
            DISTINCTCOUNT ( 'SOC_Taxa de desemprego por Ano (IBGE - Continua)'[Ano] ),
            "-"
        ),
        REMOVEFILTERS ( 'SOC_Taxa de desemprego por Ano (IBGE - Continua)'[Ano] )
    )
VAR Ultimo_valor =
    CALCULATE (
        MAX ( 'SOC_Taxa de desemprego por Ano (IBGE - Continua)'[Taxa Desemprego média anual %] ),
        LASTNONBLANK ( 'SOC_Taxa de desemprego por Ano (IBGE - Continua)'[Ano], 1 )
    )
RETURN
    IF (
        Ultimo_valor > media,
        "Alta",
        IF ( Ultimo_valor < media, "Queda", "Estável" )
    )</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Tendência TX Desemprego por ano</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: SOC_Taxa de desemprego por Ano (IBGE - Continua)</li>
<li>Column: Ano (Table: SOC_Taxa de desemprego por Ano (IBGE - Continua))</li>
<li>Column: Taxa Desemprego média anual % (Table: SOC_Taxa de desemprego por Ano (IBGE - Continua))</li>
</ul></span></li>
</ul></td>
		<td>Measure: Tendência TX Desemprego por ano</td>
	</tr>
	<tr>
		<td>TX Desemprego M&#233;dio anual</td>
		<td>SOC_Taxa de desemprego por Ano (IBGE - Continua)</td>
		<td></td>
		<td><pre>
AVERAGE ( [Taxa Desemprego média anual %] )</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: TX Desemprego Médio anual</span><span class="dropDownCaret">
<ul class="nested">
<li>Column: Taxa Desemprego média anual % (Table: SOC_Taxa de desemprego por Ano (IBGE - Continua))</li>
</ul></span></li>
</ul></td>
		<td>Measure: TX Desemprego Médio anual</td>
	</tr>
	<tr>
		<td>Taxa Desemprego Atual Anual</td>
		<td>SOC_Taxa de desemprego por Ano (IBGE - Continua)</td>
		<td></td>
		<td><pre>
IF (
    OR (
        HASONEFILTER ( 'UFs(ibge)'[id_map] ),
        HASONEFILTER ( 'UFs(ibge)'[Sigla_UF] )
    ),
    CALCULATE (
        SUM ( 'SOC_Taxa de desemprego por Ano (IBGE - Continua)'[Taxa Desemprego média anual %] ),
        'SOC_Taxa de desemprego por Ano (IBGE - Continua)'[Ano] = MAX ( [Ano] )
    ),
    0
)</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Taxa Desemprego Atual Anual</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: UFs(ibge)</li>
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: id_map (Table: UFs(ibge))</li>
<li>Table: SOC_Taxa de desemprego por Ano (IBGE - Continua)</li>
<li>Column: Ano (Table: SOC_Taxa de desemprego por Ano (IBGE - Continua))</li>
<li>Column: Taxa Desemprego média anual % (Table: SOC_Taxa de desemprego por Ano (IBGE - Continua))</li>
</ul></span></li>
</ul></td>
		<td>Measure: Taxa Desemprego Atual Anual</td>
	</tr>
	<tr>
		<td>Tendencia_Desemprego_Valorizado</td>
		<td>SOC_Taxa de desemprego por Ano (IBGE - Continua)</td>
		<td></td>
		<td><pre>
VAR media =
    CALCULATE (
        DIVIDE (
            SUM ( 'SOC_Taxa de desemprego por Ano (IBGE - Continua)'[Taxa Desemprego média anual %] ),
            DISTINCTCOUNT ( 'SOC_Taxa de desemprego por Ano (IBGE - Continua)'[Ano] ),
            "-"
        ),
        REMOVEFILTERS ( 'SOC_Taxa de desemprego por Ano (IBGE - Continua)'[Ano] )
    )
VAR Ultimo_valor =
    CALCULATE (
        MAX ( 'SOC_Taxa de desemprego por Ano (IBGE - Continua)'[Taxa Desemprego média anual %] ),
        LASTNONBLANK ( 'SOC_Taxa de desemprego por Ano (IBGE - Continua)'[Ano], 1 )
    )
RETURN
    IF ( Ultimo_valor > media, 0, IF ( Ultimo_valor < media, 100, Ultimo_valor ) )</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Tendencia_Desemprego_Valorizado</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: SOC_Taxa de desemprego por Ano (IBGE - Continua)</li>
<li>Column: Ano (Table: SOC_Taxa de desemprego por Ano (IBGE - Continua))</li>
<li>Column: Taxa Desemprego média anual % (Table: SOC_Taxa de desemprego por Ano (IBGE - Continua))</li>
</ul></span></li>
</ul></td>
		<td>Measure: Tendencia_Desemprego_Valorizado</td>
	</tr>
	<tr>
		<td>Linha de Tend&#234;ncia Desemprego</td>
		<td>SOC_Taxa de desemprego por Ano (IBGE - Continua)</td>
		<td></td>
		<td><pre>
-- Calcula a média de X (Data)
VAR MediaData =
    AVERAGEX (
        ALLSELECTED ( 'SOC_Taxa de desemprego por Ano (IBGE - Continua)'[Ano] ),
        'SOC_Taxa de desemprego por Ano (IBGE - Continua)'[Ano]
    ) -- Calcula a média de Y (Valor)
VAR MediaValor =
    AVERAGEX (
        ALLSELECTED ( 'SOC_Taxa de desemprego por Ano (IBGE - Continua)'[Taxa Desemprego média anual %] ),
        'SOC_Taxa de desemprego por Ano (IBGE - Continua)'[Taxa Desemprego média anual %]
    ) -- Calcula a inclinação (slope) da linha de tendência
VAR Slope =
    DIVIDE (
        SUMX (
            ALLSELECTED ( 'SOC_Taxa de desemprego por Ano (IBGE - Continua)' ),
            ( 'SOC_Taxa de desemprego por Ano (IBGE - Continua)'[Ano] - MediaData ) * ( 'SOC_Taxa de desemprego por Ano (IBGE - Continua)'[Taxa Desemprego média anual %] - MediaValor )
        ),
        SUMX (
            ALLSELECTED ( 'SOC_Taxa de desemprego por Ano (IBGE - Continua)' ),
            ( 'SOC_Taxa de desemprego por Ano (IBGE - Continua)'[Ano] - MediaData ) ^ 2
        )
    ) -- Calcula a interseção (intercept) da linha de tendência
VAR Intercept = MediaValor - Slope * MediaData
RETURN
    -- Calcula o valor da linha de tendência para cada ponto de dados  
    Intercept
        + Slope
            * SELECTEDVALUE ( 'SOC_Taxa de desemprego por Ano (IBGE - Continua)'[Ano] )
-- colocar (-) para quando for quanto maior pior e (+) quando for quanto maior melhor</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Linha de Tendência Desemprego</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: SOC_Taxa de desemprego por Ano (IBGE - Continua)</li>
<li>Column: Ano (Table: SOC_Taxa de desemprego por Ano (IBGE - Continua))</li>
<li>Column: Taxa Desemprego média anual % (Table: SOC_Taxa de desemprego por Ano (IBGE - Continua))</li>
</ul></span></li>
</ul></td>
		<td>Measure: Linha de Tendência Desemprego</td>
	</tr>
	<tr>
		<td>Taxa Analfabetismo mais recente</td>
		<td>SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais</td>
		<td></td>
		<td><pre>
IF (
    OR (
        HASONEFILTER ( 'UFs(ibge)'[id_map] ),
        HASONEFILTER ( 'UFs(ibge)'[Sigla_UF] )
    ),
    CALCULATE (
        MAX ( 'SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais'[Taxa Analfabetismo] ),
        FILTER (
            'SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais',
            'SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais'[Ano]
                = MAX ( 'SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais'[Ano] )
        )
    ),
    0
)</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Taxa Analfabetismo mais recente</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: UFs(ibge)</li>
<li>Column: Sigla_UF (Table: UFs(ibge))</li>
<li>Column: id_map (Table: UFs(ibge))</li>
<li>Table: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais</li>
<li>Column: Ano (Table: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais)</li>
<li>Column: Taxa Analfabetismo (Table: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Taxa Analfabetismo mais recente</td>
	</tr>
	<tr>
		<td>Tendencia_Analfabetismo_Valorizado</td>
		<td>SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais</td>
		<td></td>
		<td><pre>
VAR media =
    CALCULATE (
        DIVIDE (
            SUM ( 'SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais'[Taxa Analfabetismo] ),
            DISTINCTCOUNT ( 'SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais'[Ano] ),
            "-"
        ),
        REMOVEFILTERS ( 'SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais'[Ano] )
    )
VAR Ultimo_valor =
    CALCULATE (
        MAX ( 'SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais'[Taxa Analfabetismo] ),
        LASTNONBLANK (
            'SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais'[Ano],
            1
        )
    )
RETURN
    IF (
        Ultimo_valor = media,
        Ultimo_valor,
        IF ( Ultimo_valor > media, 0, IF ( Ultimo_valor < media, 100, -1 ) )
    )</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Tendencia_Analfabetismo_Valorizado</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais</li>
<li>Column: Ano (Table: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais)</li>
<li>Column: Taxa Analfabetismo (Table: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Tendencia_Analfabetismo_Valorizado</td>
	</tr>
	<tr>
		<td>Linha de Tend&#234;ncia Analfa</td>
		<td>SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais</td>
		<td></td>
		<td><pre>
-- Calcula a média de X (Data)
VAR MediaData =
    AVERAGEX (
        ALLSELECTED ( 'SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais'[Ano] ),
        'SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais'[Ano]
    ) -- Calcula a média de Y (Valor)
VAR MediaValor =
    AVERAGEX (
        ALLSELECTED ( 'SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais'[Taxa Analfabetismo] ),
        'SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais'[Taxa Analfabetismo]
    ) -- Calcula a inclinação (slope) da linha de tendência
VAR Slope =
    DIVIDE (
        SUMX (
            ALLSELECTED ( 'SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais' ),
            ( 'SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais'[Ano] - MediaData ) * ( 'SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais'[Taxa Analfabetismo] - MediaValor )
        ),
        SUMX (
            ALLSELECTED ( 'SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais' ),
            ( 'SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais'[Ano] - MediaData ) ^ 2
        )
    ) -- Calcula a interseção (intercept) da linha de tendência
VAR Intercept = MediaValor - Slope * MediaData
RETURN
    -- Calcula o valor da linha de tendência para cada ponto de dados  
    Intercept
        + Slope
            * SELECTEDVALUE ( 'SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais'[Ano] )
-- colocar (-) para quando for quanto maior pior e (+) quando for quanto maior melhor</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Linha de Tendência Analfa</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais</li>
<li>Column: Ano (Table: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais)</li>
<li>Column: Taxa Analfabetismo (Table: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais)</li>
</ul></span></li>
</ul></td>
		<td>Measure: Linha de Tendência Analfa</td>
	</tr>
	<tr>
		<td>Tend&#234;ncia_TX_Analfa</td>
		<td>SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais</td>
		<td></td>
		<td><pre>
VAR media =
    CALCULATE (
        DIVIDE (
            SUM ( [Taxa Analfabetismo] ),
            DISTINCTCOUNT ( 'SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais'[Ano] ),
            "-"
        ),
        REMOVEFILTERS ( 'SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais'[Ano] )
    )
VAR Ultimo_valor =
    CALCULATE (
        MAX ( 'SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais'[Taxa Analfabetismo] ),
        LASTNONBLANK (
            'SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais'[Ano],
            1
        )
    )
RETURN
    IF (
        ROUND ( Ultimo_valor, 2 ) > ROUND ( media, 2 ),
        "Alta",
        IF ( ROUND ( Ultimo_valor, 2 ) < ROUND ( media, 2 ), "Queda", "Estável" )
    )</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Tendência_TX_Analfa</span><span class="dropDownCaret">
<ul class="nested">
<li>Table: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais</li>
<li>Column: Ano (Table: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais)</li>
<li>Column: Taxa Analfabetismo (Table: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais)</li>
</ul></span></li>
</ul></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Tendência_TX_Analfa</span><span class="dropDownCaret">
<ul class="nested">
<li><span class="caret">Measure: Pontuação Média dos Estados</span>
<ul class="nested">
<li>Measure: Posicao</li>
</ul></li>
</ul></span></li>
</ul></td>
	</tr>
	<tr>
		<td>Pontua&#231;&#227;o Total</td>
		<td>Indices Ano mais recente</td>
		<td></td>
		<td><pre>
CALCULATE ( SUM ( 'Indices Ano mais recente'[Pontuação Ponderada] ) )</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Pontuação Total</span><span class="dropDownCaret">
<ul class="nested">
<li><span class="caret">Calc_Table: Indices Ano mais recente (Table: Indices Ano mais recente)</span>
<ul class="nested">
<li><span class="caret">Table: Indices_agregados_classificados</span>
<ul class="nested">
<li>Partition: SOC_Taxa de Pobreza (Table: SOC_Taxa de Pobreza)</li>
<li>Partition: SOC_Indice de Gini (Table: SOC_Indice de Gini)</li>
<li>Partition: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais (Table: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais)</li>
<li>Partition: SOC_IDHM_por_UF (Table: SOC_IDHM_por_UF)</li>
<li>Partition: FIN_Renda per capita (Atlas DH - Pnad Contínua/A) (Table: FIN_Renda per capita (Atlas DH - Pnad Contínua/A))</li>
<li><span class="caret">Partition: FIN_Receitas x Despesas (Table: FIN_Receitas x Despesas)</span>
<ul class="nested">
<li>Partition: FIN_Receita corrente - receita bruta - estadual (Table: FIN_Receita corrente - receita bruta - estadual)</li>
<li>Partition: FIN_Despesas correntes - estadual (Table: FIN_Despesas correntes - estadual)</li>
</ul></li>
<li>Partition: FIN_Receita corrente - receita bruta - estadual (Table: FIN_Receita corrente - receita bruta - estadual)</li>
<li>Partition: SEG_Ocorrências Criminais (Table: SEG_Ocorrências Criminais)</li>
<li>Partition: SEG_Homicidios por 100k Habitantes (Table: SEG_Homicidios por 100k Habitantes)</li>
<li>Partition: SAU_Estabelecimento de saude(DataSUS) (Table: SAU_Estabelecimento de saude(DataSUS))</li>
<li>Partition: SAU_Medicos por 10k Habitantes (Table: SAU_Medicos por 10k Habitantes)</li>
<li>Partition: EDU_% Alunos na Rede Pública (Table: EDU_% Alunos na Rede Pública)</li>
<li>Partition: SOC_Taxa de desemprego (IBGE - Continua) (Table: SOC_Taxa de desemprego (IBGE - Continua))</li>
<li>Partition: SOC_Taxa de desemprego por Ano (IBGE - Continua) (Table: SOC_Taxa de desemprego por Ano (IBGE - Continua))</li>
</ul></li>
<li>Column: RowNumber-2662979B-1795-4F74-8F37-6A1BA8059B61 (Table: Indices_agregados_classificados)</li>
<li>Column: Sigla_UF (Table: Indices_agregados_classificados)</li>
<li>Column: Ano (Table: Indices_agregados_classificados)</li>
<li>Column: Indice (Table: Indices_agregados_classificados)</li>
<li>Column: Valor (Table: Indices_agregados_classificados)</li>
<li>Column: Indices_Ranking (Table: Indices_agregados_classificados)</li>
<li>Column: Area (Table: Indices_agregados_classificados)</li>
<li><span class="caret">Calc_Column: Eh Ano mais recente (Table: Indices_agregados_classificados)</span>
<ul class="nested">
<li>Table: Indices_agregados_classificados   ...</li>
<li>Column: Sigla_UF (Table: Indices_agregados_classificados)</li>
<li>Column: Ano (Table: Indices_agregados_classificados)</li>
<li>Column: Indice (Table: Indices_agregados_classificados)</li>
<li>Column: Indices_Ranking (Table: Indices_agregados_classificados)</li>
<li>Column: Area (Table: Indices_agregados_classificados)</li>
</ul></li>
</ul></li>
<li><span class="caret">Calc_Column: Pontuação Ponderada (Table: Indices Ano mais recente)</span>
<ul class="nested">
<li><span class="caret">Calc_Table: Indices Ano mais recente (Table: Indices Ano mais recente)</span>
<ul class="nested">
<li><span class="caret">Table: Indices_agregados_classificados</span>
<ul class="nested">
<li>Partition: SOC_Taxa de Pobreza (Table: SOC_Taxa de Pobreza)</li>
<li>Partition: SOC_Indice de Gini (Table: SOC_Indice de Gini)</li>
<li>Partition: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais (Table: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais)</li>
<li>Partition: SOC_IDHM_por_UF (Table: SOC_IDHM_por_UF)</li>
<li>Partition: FIN_Renda per capita (Atlas DH - Pnad Contínua/A) (Table: FIN_Renda per capita (Atlas DH - Pnad Contínua/A))</li>
<li><span class="caret">Partition: FIN_Receitas x Despesas (Table: FIN_Receitas x Despesas)</span>
<ul class="nested">
<li>Partition: FIN_Receita corrente - receita bruta - estadual (Table: FIN_Receita corrente - receita bruta - estadual)</li>
<li>Partition: FIN_Despesas correntes - estadual (Table: FIN_Despesas correntes - estadual)</li>
</ul></li>
<li>Partition: FIN_Receita corrente - receita bruta - estadual (Table: FIN_Receita corrente - receita bruta - estadual)</li>
<li>Partition: SEG_Ocorrências Criminais (Table: SEG_Ocorrências Criminais)</li>
<li>Partition: SEG_Homicidios por 100k Habitantes (Table: SEG_Homicidios por 100k Habitantes)</li>
<li>Partition: SAU_Estabelecimento de saude(DataSUS) (Table: SAU_Estabelecimento de saude(DataSUS))</li>
<li>Partition: SAU_Medicos por 10k Habitantes (Table: SAU_Medicos por 10k Habitantes)</li>
<li>Partition: EDU_% Alunos na Rede Pública (Table: EDU_% Alunos na Rede Pública)</li>
<li>Partition: SOC_Taxa de desemprego (IBGE - Continua) (Table: SOC_Taxa de desemprego (IBGE - Continua))</li>
<li>Partition: SOC_Taxa de desemprego por Ano (IBGE - Continua) (Table: SOC_Taxa de desemprego por Ano (IBGE - Continua))</li>
</ul></li>
<li>Column: RowNumber-2662979B-1795-4F74-8F37-6A1BA8059B61 (Table: Indices_agregados_classificados)</li>
<li>Column: Sigla_UF (Table: Indices_agregados_classificados)</li>
<li>Column: Ano (Table: Indices_agregados_classificados)</li>
<li>Column: Indice (Table: Indices_agregados_classificados)</li>
<li>Column: Valor (Table: Indices_agregados_classificados)</li>
<li>Column: Indices_Ranking (Table: Indices_agregados_classificados)</li>
<li>Column: Area (Table: Indices_agregados_classificados)</li>
<li><span class="caret">Calc_Column: Eh Ano mais recente (Table: Indices_agregados_classificados)</span>
<ul class="nested">
<li>Table: Indices_agregados_classificados   ...</li>
<li>Column: Sigla_UF (Table: Indices_agregados_classificados)</li>
<li>Column: Ano (Table: Indices_agregados_classificados)</li>
<li>Column: Indice (Table: Indices_agregados_classificados)</li>
<li>Column: Indices_Ranking (Table: Indices_agregados_classificados)</li>
<li>Column: Area (Table: Indices_agregados_classificados)</li>
</ul></li>
</ul></li>
<li>Calc_Column: Indices_Ranking (Table: Indices Ano mais recente)</li>
<li><span class="caret">Calc_Column: Posicao Normalizado (Table: Indices Ano mais recente)</span>
<ul class="nested">
<li><span class="caret">Calc_Table: Indices Ano mais recente (Table: Indices Ano mais recente)</span>
<ul class="nested">
<li><span class="caret">Table: Indices_agregados_classificados</span>
<ul class="nested">
<li>Partition: SOC_Taxa de Pobreza (Table: SOC_Taxa de Pobreza)</li>
<li>Partition: SOC_Indice de Gini (Table: SOC_Indice de Gini)</li>
<li>Partition: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais (Table: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais)</li>
<li>Partition: SOC_IDHM_por_UF (Table: SOC_IDHM_por_UF)</li>
<li>Partition: FIN_Renda per capita (Atlas DH - Pnad Contínua/A) (Table: FIN_Renda per capita (Atlas DH - Pnad Contínua/A))</li>
<li><span class="caret">Partition: FIN_Receitas x Despesas (Table: FIN_Receitas x Despesas)</span>
<ul class="nested">
<li>Partition: FIN_Receita corrente - receita bruta - estadual (Table: FIN_Receita corrente - receita bruta - estadual)</li>
<li>Partition: FIN_Despesas correntes - estadual (Table: FIN_Despesas correntes - estadual)</li>
</ul></li>
<li>Partition: FIN_Receita corrente - receita bruta - estadual (Table: FIN_Receita corrente - receita bruta - estadual)</li>
<li>Partition: SEG_Ocorrências Criminais (Table: SEG_Ocorrências Criminais)</li>
<li>Partition: SEG_Homicidios por 100k Habitantes (Table: SEG_Homicidios por 100k Habitantes)</li>
<li>Partition: SAU_Estabelecimento de saude(DataSUS) (Table: SAU_Estabelecimento de saude(DataSUS))</li>
<li>Partition: SAU_Medicos por 10k Habitantes (Table: SAU_Medicos por 10k Habitantes)</li>
<li>Partition: EDU_% Alunos na Rede Pública (Table: EDU_% Alunos na Rede Pública)</li>
<li>Partition: SOC_Taxa de desemprego (IBGE - Continua) (Table: SOC_Taxa de desemprego (IBGE - Continua))</li>
<li>Partition: SOC_Taxa de desemprego por Ano (IBGE - Continua) (Table: SOC_Taxa de desemprego por Ano (IBGE - Continua))</li>
</ul></li>
<li>Column: RowNumber-2662979B-1795-4F74-8F37-6A1BA8059B61 (Table: Indices_agregados_classificados)</li>
<li>Column: Sigla_UF (Table: Indices_agregados_classificados)</li>
<li>Column: Ano (Table: Indices_agregados_classificados)</li>
<li>Column: Indice (Table: Indices_agregados_classificados)</li>
<li>Column: Valor (Table: Indices_agregados_classificados)</li>
<li>Column: Indices_Ranking (Table: Indices_agregados_classificados)</li>
<li>Column: Area (Table: Indices_agregados_classificados)</li>
<li><span class="caret">Calc_Column: Eh Ano mais recente (Table: Indices_agregados_classificados)</span>
<ul class="nested">
<li>Table: Indices_agregados_classificados   ...</li>
<li>Column: Sigla_UF (Table: Indices_agregados_classificados)</li>
<li>Column: Ano (Table: Indices_agregados_classificados)</li>
<li>Column: Indice (Table: Indices_agregados_classificados)</li>
<li>Column: Indices_Ranking (Table: Indices_agregados_classificados)</li>
<li>Column: Area (Table: Indices_agregados_classificados)</li>
</ul></li>
</ul></li>
<li><span class="caret">Calc_Column: Posição entre os Estados (Table: Indices Ano mais recente)</span>
<ul class="nested">
<li><span class="caret">Calc_Table: Indices Ano mais recente (Table: Indices Ano mais recente)</span>
<ul class="nested">
<li><span class="caret">Table: Indices_agregados_classificados</span>
<ul class="nested">
<li>Partition: SOC_Taxa de Pobreza (Table: SOC_Taxa de Pobreza)</li>
<li>Partition: SOC_Indice de Gini (Table: SOC_Indice de Gini)</li>
<li>Partition: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais (Table: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais)</li>
<li>Partition: SOC_IDHM_por_UF (Table: SOC_IDHM_por_UF)</li>
<li>Partition: FIN_Renda per capita (Atlas DH - Pnad Contínua/A) (Table: FIN_Renda per capita (Atlas DH - Pnad Contínua/A))</li>
<li><span class="caret">Partition: FIN_Receitas x Despesas (Table: FIN_Receitas x Despesas)</span>
<ul class="nested">
<li>Partition: FIN_Receita corrente - receita bruta - estadual (Table: FIN_Receita corrente - receita bruta - estadual)</li>
<li>Partition: FIN_Despesas correntes - estadual (Table: FIN_Despesas correntes - estadual)</li>
</ul></li>
<li>Partition: FIN_Receita corrente - receita bruta - estadual (Table: FIN_Receita corrente - receita bruta - estadual)</li>
<li>Partition: SEG_Ocorrências Criminais (Table: SEG_Ocorrências Criminais)</li>
<li>Partition: SEG_Homicidios por 100k Habitantes (Table: SEG_Homicidios por 100k Habitantes)</li>
<li>Partition: SAU_Estabelecimento de saude(DataSUS) (Table: SAU_Estabelecimento de saude(DataSUS))</li>
<li>Partition: SAU_Medicos por 10k Habitantes (Table: SAU_Medicos por 10k Habitantes)</li>
<li>Partition: EDU_% Alunos na Rede Pública (Table: EDU_% Alunos na Rede Pública)</li>
<li>Partition: SOC_Taxa de desemprego (IBGE - Continua) (Table: SOC_Taxa de desemprego (IBGE - Continua))</li>
<li>Partition: SOC_Taxa de desemprego por Ano (IBGE - Continua) (Table: SOC_Taxa de desemprego por Ano (IBGE - Continua))</li>
</ul></li>
<li>Column: RowNumber-2662979B-1795-4F74-8F37-6A1BA8059B61 (Table: Indices_agregados_classificados)</li>
<li>Column: Sigla_UF (Table: Indices_agregados_classificados)</li>
<li>Column: Ano (Table: Indices_agregados_classificados)</li>
<li>Column: Indice (Table: Indices_agregados_classificados)</li>
<li>Column: Valor (Table: Indices_agregados_classificados)</li>
<li>Column: Indices_Ranking (Table: Indices_agregados_classificados)</li>
<li>Column: Area (Table: Indices_agregados_classificados)</li>
<li><span class="caret">Calc_Column: Eh Ano mais recente (Table: Indices_agregados_classificados)</span>
<ul class="nested">
<li>Table: Indices_agregados_classificados   ...</li>
<li>Column: Sigla_UF (Table: Indices_agregados_classificados)</li>
<li>Column: Ano (Table: Indices_agregados_classificados)</li>
<li>Column: Indice (Table: Indices_agregados_classificados)</li>
<li>Column: Indices_Ranking (Table: Indices_agregados_classificados)</li>
<li>Column: Area (Table: Indices_agregados_classificados)</li>
</ul></li>
</ul></li>
<li><span class="caret">Calc_Column: Classificacao (Table: Indices Ano mais recente)</span>
<ul class="nested">
<li>Table: Raking</li>
<li>Column: Indice (Table: Raking)</li>
<li>Column: Referencias (Table: Raking)</li>
<li><span class="caret">Calc_Table: Indices Ano mais recente (Table: Indices Ano mais recente)</span>
<ul class="nested">
<li><span class="caret">Table: Indices_agregados_classificados</span>
<ul class="nested">
<li>Partition: SOC_Taxa de Pobreza (Table: SOC_Taxa de Pobreza)</li>
<li>Partition: SOC_Indice de Gini (Table: SOC_Indice de Gini)</li>
<li>Partition: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais (Table: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais)</li>
<li>Partition: SOC_IDHM_por_UF (Table: SOC_IDHM_por_UF)</li>
<li>Partition: FIN_Renda per capita (Atlas DH - Pnad Contínua/A) (Table: FIN_Renda per capita (Atlas DH - Pnad Contínua/A))</li>
<li><span class="caret">Partition: FIN_Receitas x Despesas (Table: FIN_Receitas x Despesas)</span>
<ul class="nested">
<li>Partition: FIN_Receita corrente - receita bruta - estadual (Table: FIN_Receita corrente - receita bruta - estadual)</li>
<li>Partition: FIN_Despesas correntes - estadual (Table: FIN_Despesas correntes - estadual)</li>
</ul></li>
<li>Partition: FIN_Receita corrente - receita bruta - estadual (Table: FIN_Receita corrente - receita bruta - estadual)</li>
<li>Partition: SEG_Ocorrências Criminais (Table: SEG_Ocorrências Criminais)</li>
<li>Partition: SEG_Homicidios por 100k Habitantes (Table: SEG_Homicidios por 100k Habitantes)</li>
<li>Partition: SAU_Estabelecimento de saude(DataSUS) (Table: SAU_Estabelecimento de saude(DataSUS))</li>
<li>Partition: SAU_Medicos por 10k Habitantes (Table: SAU_Medicos por 10k Habitantes)</li>
<li>Partition: EDU_% Alunos na Rede Pública (Table: EDU_% Alunos na Rede Pública)</li>
<li>Partition: SOC_Taxa de desemprego (IBGE - Continua) (Table: SOC_Taxa de desemprego (IBGE - Continua))</li>
<li>Partition: SOC_Taxa de desemprego por Ano (IBGE - Continua) (Table: SOC_Taxa de desemprego por Ano (IBGE - Continua))</li>
</ul></li>
<li>Column: RowNumber-2662979B-1795-4F74-8F37-6A1BA8059B61 (Table: Indices_agregados_classificados)</li>
<li>Column: Sigla_UF (Table: Indices_agregados_classificados)</li>
<li>Column: Ano (Table: Indices_agregados_classificados)</li>
<li>Column: Indice (Table: Indices_agregados_classificados)</li>
<li>Column: Valor (Table: Indices_agregados_classificados)</li>
<li>Column: Indices_Ranking (Table: Indices_agregados_classificados)</li>
<li>Column: Area (Table: Indices_agregados_classificados)</li>
<li><span class="caret">Calc_Column: Eh Ano mais recente (Table: Indices_agregados_classificados)</span>
<ul class="nested">
<li>Table: Indices_agregados_classificados   ...</li>
<li>Column: Sigla_UF (Table: Indices_agregados_classificados)</li>
<li>Column: Ano (Table: Indices_agregados_classificados)</li>
<li>Column: Indice (Table: Indices_agregados_classificados)</li>
<li>Column: Indices_Ranking (Table: Indices_agregados_classificados)</li>
<li>Column: Area (Table: Indices_agregados_classificados)</li>
</ul></li>
</ul></li>
<li>Column: RowNumber-2662979B-1795-4F74-8F37-6A1BA8059B61 (Table: Indices Ano mais recente)</li>
<li>Calc_Column: Sigla_UF (Table: Indices Ano mais recente)</li>
<li>Calc_Column: Valor (Table: Indices Ano mais recente)</li>
<li>Calc_Column: Indices_Ranking (Table: Indices Ano mais recente)</li>
<li>Calc_Column: Area (Table: Indices Ano mais recente)</li>
</ul></li>
</ul></li>
</ul></li>
</ul></li>
</ul></span></li>
</ul></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Pontuação Total</span><span class="dropDownCaret">
<ul class="nested">
<li>Measure: Posicao Geral mais recente</li>
</ul></span></li>
</ul></td>
	</tr>
	<tr>
		<td>Soma_Posi&#231;&#245;es_Ponderadas</td>
		<td>Indices Ano mais recente</td>
		<td></td>
		<td><pre>
SUM ( [Pontuação Ponderada] )</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Soma_Posições_Ponderadas</span><span class="dropDownCaret">
<ul class="nested">
<li><span class="caret">Calc_Column: Pontuação Ponderada (Table: Indices Ano mais recente)</span>
<ul class="nested">
<li><span class="caret">Calc_Table: Indices Ano mais recente (Table: Indices Ano mais recente)</span>
<ul class="nested">
<li><span class="caret">Table: Indices_agregados_classificados</span>
<ul class="nested">
<li>Partition: SOC_Taxa de Pobreza (Table: SOC_Taxa de Pobreza)</li>
<li>Partition: SOC_Indice de Gini (Table: SOC_Indice de Gini)</li>
<li>Partition: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais (Table: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais)</li>
<li>Partition: SOC_IDHM_por_UF (Table: SOC_IDHM_por_UF)</li>
<li>Partition: FIN_Renda per capita (Atlas DH - Pnad Contínua/A) (Table: FIN_Renda per capita (Atlas DH - Pnad Contínua/A))</li>
<li><span class="caret">Partition: FIN_Receitas x Despesas (Table: FIN_Receitas x Despesas)</span>
<ul class="nested">
<li>Partition: FIN_Receita corrente - receita bruta - estadual (Table: FIN_Receita corrente - receita bruta - estadual)</li>
<li>Partition: FIN_Despesas correntes - estadual (Table: FIN_Despesas correntes - estadual)</li>
</ul></li>
<li>Partition: FIN_Receita corrente - receita bruta - estadual (Table: FIN_Receita corrente - receita bruta - estadual)</li>
<li>Partition: SEG_Ocorrências Criminais (Table: SEG_Ocorrências Criminais)</li>
<li>Partition: SEG_Homicidios por 100k Habitantes (Table: SEG_Homicidios por 100k Habitantes)</li>
<li>Partition: SAU_Estabelecimento de saude(DataSUS) (Table: SAU_Estabelecimento de saude(DataSUS))</li>
<li>Partition: SAU_Medicos por 10k Habitantes (Table: SAU_Medicos por 10k Habitantes)</li>
<li>Partition: EDU_% Alunos na Rede Pública (Table: EDU_% Alunos na Rede Pública)</li>
<li>Partition: SOC_Taxa de desemprego (IBGE - Continua) (Table: SOC_Taxa de desemprego (IBGE - Continua))</li>
<li>Partition: SOC_Taxa de desemprego por Ano (IBGE - Continua) (Table: SOC_Taxa de desemprego por Ano (IBGE - Continua))</li>
</ul></li>
<li>Column: RowNumber-2662979B-1795-4F74-8F37-6A1BA8059B61 (Table: Indices_agregados_classificados)</li>
<li>Column: Sigla_UF (Table: Indices_agregados_classificados)</li>
<li>Column: Ano (Table: Indices_agregados_classificados)</li>
<li>Column: Indice (Table: Indices_agregados_classificados)</li>
<li>Column: Valor (Table: Indices_agregados_classificados)</li>
<li>Column: Indices_Ranking (Table: Indices_agregados_classificados)</li>
<li>Column: Area (Table: Indices_agregados_classificados)</li>
<li><span class="caret">Calc_Column: Eh Ano mais recente (Table: Indices_agregados_classificados)</span>
<ul class="nested">
<li>Table: Indices_agregados_classificados   ...</li>
<li>Column: Sigla_UF (Table: Indices_agregados_classificados)</li>
<li>Column: Ano (Table: Indices_agregados_classificados)</li>
<li>Column: Indice (Table: Indices_agregados_classificados)</li>
<li>Column: Indices_Ranking (Table: Indices_agregados_classificados)</li>
<li>Column: Area (Table: Indices_agregados_classificados)</li>
</ul></li>
</ul></li>
<li>Calc_Column: Indices_Ranking (Table: Indices Ano mais recente)</li>
<li><span class="caret">Calc_Column: Posicao Normalizado (Table: Indices Ano mais recente)</span>
<ul class="nested">
<li><span class="caret">Calc_Table: Indices Ano mais recente (Table: Indices Ano mais recente)</span>
<ul class="nested">
<li><span class="caret">Table: Indices_agregados_classificados</span>
<ul class="nested">
<li>Partition: SOC_Taxa de Pobreza (Table: SOC_Taxa de Pobreza)</li>
<li>Partition: SOC_Indice de Gini (Table: SOC_Indice de Gini)</li>
<li>Partition: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais (Table: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais)</li>
<li>Partition: SOC_IDHM_por_UF (Table: SOC_IDHM_por_UF)</li>
<li>Partition: FIN_Renda per capita (Atlas DH - Pnad Contínua/A) (Table: FIN_Renda per capita (Atlas DH - Pnad Contínua/A))</li>
<li><span class="caret">Partition: FIN_Receitas x Despesas (Table: FIN_Receitas x Despesas)</span>
<ul class="nested">
<li>Partition: FIN_Receita corrente - receita bruta - estadual (Table: FIN_Receita corrente - receita bruta - estadual)</li>
<li>Partition: FIN_Despesas correntes - estadual (Table: FIN_Despesas correntes - estadual)</li>
</ul></li>
<li>Partition: FIN_Receita corrente - receita bruta - estadual (Table: FIN_Receita corrente - receita bruta - estadual)</li>
<li>Partition: SEG_Ocorrências Criminais (Table: SEG_Ocorrências Criminais)</li>
<li>Partition: SEG_Homicidios por 100k Habitantes (Table: SEG_Homicidios por 100k Habitantes)</li>
<li>Partition: SAU_Estabelecimento de saude(DataSUS) (Table: SAU_Estabelecimento de saude(DataSUS))</li>
<li>Partition: SAU_Medicos por 10k Habitantes (Table: SAU_Medicos por 10k Habitantes)</li>
<li>Partition: EDU_% Alunos na Rede Pública (Table: EDU_% Alunos na Rede Pública)</li>
<li>Partition: SOC_Taxa de desemprego (IBGE - Continua) (Table: SOC_Taxa de desemprego (IBGE - Continua))</li>
<li>Partition: SOC_Taxa de desemprego por Ano (IBGE - Continua) (Table: SOC_Taxa de desemprego por Ano (IBGE - Continua))</li>
</ul></li>
<li>Column: RowNumber-2662979B-1795-4F74-8F37-6A1BA8059B61 (Table: Indices_agregados_classificados)</li>
<li>Column: Sigla_UF (Table: Indices_agregados_classificados)</li>
<li>Column: Ano (Table: Indices_agregados_classificados)</li>
<li>Column: Indice (Table: Indices_agregados_classificados)</li>
<li>Column: Valor (Table: Indices_agregados_classificados)</li>
<li>Column: Indices_Ranking (Table: Indices_agregados_classificados)</li>
<li>Column: Area (Table: Indices_agregados_classificados)</li>
<li><span class="caret">Calc_Column: Eh Ano mais recente (Table: Indices_agregados_classificados)</span>
<ul class="nested">
<li>Table: Indices_agregados_classificados   ...</li>
<li>Column: Sigla_UF (Table: Indices_agregados_classificados)</li>
<li>Column: Ano (Table: Indices_agregados_classificados)</li>
<li>Column: Indice (Table: Indices_agregados_classificados)</li>
<li>Column: Indices_Ranking (Table: Indices_agregados_classificados)</li>
<li>Column: Area (Table: Indices_agregados_classificados)</li>
</ul></li>
</ul></li>
<li><span class="caret">Calc_Column: Posição entre os Estados (Table: Indices Ano mais recente)</span>
<ul class="nested">
<li><span class="caret">Calc_Table: Indices Ano mais recente (Table: Indices Ano mais recente)</span>
<ul class="nested">
<li><span class="caret">Table: Indices_agregados_classificados</span>
<ul class="nested">
<li>Partition: SOC_Taxa de Pobreza (Table: SOC_Taxa de Pobreza)</li>
<li>Partition: SOC_Indice de Gini (Table: SOC_Indice de Gini)</li>
<li>Partition: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais (Table: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais)</li>
<li>Partition: SOC_IDHM_por_UF (Table: SOC_IDHM_por_UF)</li>
<li>Partition: FIN_Renda per capita (Atlas DH - Pnad Contínua/A) (Table: FIN_Renda per capita (Atlas DH - Pnad Contínua/A))</li>
<li><span class="caret">Partition: FIN_Receitas x Despesas (Table: FIN_Receitas x Despesas)</span>
<ul class="nested">
<li>Partition: FIN_Receita corrente - receita bruta - estadual (Table: FIN_Receita corrente - receita bruta - estadual)</li>
<li>Partition: FIN_Despesas correntes - estadual (Table: FIN_Despesas correntes - estadual)</li>
</ul></li>
<li>Partition: FIN_Receita corrente - receita bruta - estadual (Table: FIN_Receita corrente - receita bruta - estadual)</li>
<li>Partition: SEG_Ocorrências Criminais (Table: SEG_Ocorrências Criminais)</li>
<li>Partition: SEG_Homicidios por 100k Habitantes (Table: SEG_Homicidios por 100k Habitantes)</li>
<li>Partition: SAU_Estabelecimento de saude(DataSUS) (Table: SAU_Estabelecimento de saude(DataSUS))</li>
<li>Partition: SAU_Medicos por 10k Habitantes (Table: SAU_Medicos por 10k Habitantes)</li>
<li>Partition: EDU_% Alunos na Rede Pública (Table: EDU_% Alunos na Rede Pública)</li>
<li>Partition: SOC_Taxa de desemprego (IBGE - Continua) (Table: SOC_Taxa de desemprego (IBGE - Continua))</li>
<li>Partition: SOC_Taxa de desemprego por Ano (IBGE - Continua) (Table: SOC_Taxa de desemprego por Ano (IBGE - Continua))</li>
</ul></li>
<li>Column: RowNumber-2662979B-1795-4F74-8F37-6A1BA8059B61 (Table: Indices_agregados_classificados)</li>
<li>Column: Sigla_UF (Table: Indices_agregados_classificados)</li>
<li>Column: Ano (Table: Indices_agregados_classificados)</li>
<li>Column: Indice (Table: Indices_agregados_classificados)</li>
<li>Column: Valor (Table: Indices_agregados_classificados)</li>
<li>Column: Indices_Ranking (Table: Indices_agregados_classificados)</li>
<li>Column: Area (Table: Indices_agregados_classificados)</li>
<li><span class="caret">Calc_Column: Eh Ano mais recente (Table: Indices_agregados_classificados)</span>
<ul class="nested">
<li>Table: Indices_agregados_classificados   ...</li>
<li>Column: Sigla_UF (Table: Indices_agregados_classificados)</li>
<li>Column: Ano (Table: Indices_agregados_classificados)</li>
<li>Column: Indice (Table: Indices_agregados_classificados)</li>
<li>Column: Indices_Ranking (Table: Indices_agregados_classificados)</li>
<li>Column: Area (Table: Indices_agregados_classificados)</li>
</ul></li>
</ul></li>
<li><span class="caret">Calc_Column: Classificacao (Table: Indices Ano mais recente)</span>
<ul class="nested">
<li>Table: Raking</li>
<li>Column: Indice (Table: Raking)</li>
<li>Column: Referencias (Table: Raking)</li>
<li><span class="caret">Calc_Table: Indices Ano mais recente (Table: Indices Ano mais recente)</span>
<ul class="nested">
<li><span class="caret">Table: Indices_agregados_classificados</span>
<ul class="nested">
<li>Partition: SOC_Taxa de Pobreza (Table: SOC_Taxa de Pobreza)</li>
<li>Partition: SOC_Indice de Gini (Table: SOC_Indice de Gini)</li>
<li>Partition: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais (Table: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais)</li>
<li>Partition: SOC_IDHM_por_UF (Table: SOC_IDHM_por_UF)</li>
<li>Partition: FIN_Renda per capita (Atlas DH - Pnad Contínua/A) (Table: FIN_Renda per capita (Atlas DH - Pnad Contínua/A))</li>
<li><span class="caret">Partition: FIN_Receitas x Despesas (Table: FIN_Receitas x Despesas)</span>
<ul class="nested">
<li>Partition: FIN_Receita corrente - receita bruta - estadual (Table: FIN_Receita corrente - receita bruta - estadual)</li>
<li>Partition: FIN_Despesas correntes - estadual (Table: FIN_Despesas correntes - estadual)</li>
</ul></li>
<li>Partition: FIN_Receita corrente - receita bruta - estadual (Table: FIN_Receita corrente - receita bruta - estadual)</li>
<li>Partition: SEG_Ocorrências Criminais (Table: SEG_Ocorrências Criminais)</li>
<li>Partition: SEG_Homicidios por 100k Habitantes (Table: SEG_Homicidios por 100k Habitantes)</li>
<li>Partition: SAU_Estabelecimento de saude(DataSUS) (Table: SAU_Estabelecimento de saude(DataSUS))</li>
<li>Partition: SAU_Medicos por 10k Habitantes (Table: SAU_Medicos por 10k Habitantes)</li>
<li>Partition: EDU_% Alunos na Rede Pública (Table: EDU_% Alunos na Rede Pública)</li>
<li>Partition: SOC_Taxa de desemprego (IBGE - Continua) (Table: SOC_Taxa de desemprego (IBGE - Continua))</li>
<li>Partition: SOC_Taxa de desemprego por Ano (IBGE - Continua) (Table: SOC_Taxa de desemprego por Ano (IBGE - Continua))</li>
</ul></li>
<li>Column: RowNumber-2662979B-1795-4F74-8F37-6A1BA8059B61 (Table: Indices_agregados_classificados)</li>
<li>Column: Sigla_UF (Table: Indices_agregados_classificados)</li>
<li>Column: Ano (Table: Indices_agregados_classificados)</li>
<li>Column: Indice (Table: Indices_agregados_classificados)</li>
<li>Column: Valor (Table: Indices_agregados_classificados)</li>
<li>Column: Indices_Ranking (Table: Indices_agregados_classificados)</li>
<li>Column: Area (Table: Indices_agregados_classificados)</li>
<li><span class="caret">Calc_Column: Eh Ano mais recente (Table: Indices_agregados_classificados)</span>
<ul class="nested">
<li>Table: Indices_agregados_classificados   ...</li>
<li>Column: Sigla_UF (Table: Indices_agregados_classificados)</li>
<li>Column: Ano (Table: Indices_agregados_classificados)</li>
<li>Column: Indice (Table: Indices_agregados_classificados)</li>
<li>Column: Indices_Ranking (Table: Indices_agregados_classificados)</li>
<li>Column: Area (Table: Indices_agregados_classificados)</li>
</ul></li>
</ul></li>
<li>Column: RowNumber-2662979B-1795-4F74-8F37-6A1BA8059B61 (Table: Indices Ano mais recente)</li>
<li>Calc_Column: Sigla_UF (Table: Indices Ano mais recente)</li>
<li>Calc_Column: Valor (Table: Indices Ano mais recente)</li>
<li>Calc_Column: Indices_Ranking (Table: Indices Ano mais recente)</li>
<li>Calc_Column: Area (Table: Indices Ano mais recente)</li>
</ul></li>
</ul></li>
</ul></li>
</ul></li>
</ul></span></li>
</ul></td>
		<td>Measure: Soma_Posições_Ponderadas</td>
	</tr>
	<tr>
		<td>Posicao Geral mais recente</td>
		<td>Indices Ano mais recente</td>
		<td></td>
		<td><pre>
RANKX (
    ALL ( 'Indices Ano mais recente'[Sigla_UF] ),
    [Pontuação Total],
    ,
    DESC,
    DENSE
)</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Posicao Geral mais recente</span><span class="dropDownCaret">
<ul class="nested">
<li><span class="caret">Calc_Table: Indices Ano mais recente (Table: Indices Ano mais recente)</span>
<ul class="nested">
<li><span class="caret">Table: Indices_agregados_classificados</span>
<ul class="nested">
<li>Partition: SOC_Taxa de Pobreza (Table: SOC_Taxa de Pobreza)</li>
<li>Partition: SOC_Indice de Gini (Table: SOC_Indice de Gini)</li>
<li>Partition: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais (Table: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais)</li>
<li>Partition: SOC_IDHM_por_UF (Table: SOC_IDHM_por_UF)</li>
<li>Partition: FIN_Renda per capita (Atlas DH - Pnad Contínua/A) (Table: FIN_Renda per capita (Atlas DH - Pnad Contínua/A))</li>
<li><span class="caret">Partition: FIN_Receitas x Despesas (Table: FIN_Receitas x Despesas)</span>
<ul class="nested">
<li>Partition: FIN_Receita corrente - receita bruta - estadual (Table: FIN_Receita corrente - receita bruta - estadual)</li>
<li>Partition: FIN_Despesas correntes - estadual (Table: FIN_Despesas correntes - estadual)</li>
</ul></li>
<li>Partition: FIN_Receita corrente - receita bruta - estadual (Table: FIN_Receita corrente - receita bruta - estadual)</li>
<li>Partition: SEG_Ocorrências Criminais (Table: SEG_Ocorrências Criminais)</li>
<li>Partition: SEG_Homicidios por 100k Habitantes (Table: SEG_Homicidios por 100k Habitantes)</li>
<li>Partition: SAU_Estabelecimento de saude(DataSUS) (Table: SAU_Estabelecimento de saude(DataSUS))</li>
<li>Partition: SAU_Medicos por 10k Habitantes (Table: SAU_Medicos por 10k Habitantes)</li>
<li>Partition: EDU_% Alunos na Rede Pública (Table: EDU_% Alunos na Rede Pública)</li>
<li>Partition: SOC_Taxa de desemprego (IBGE - Continua) (Table: SOC_Taxa de desemprego (IBGE - Continua))</li>
<li>Partition: SOC_Taxa de desemprego por Ano (IBGE - Continua) (Table: SOC_Taxa de desemprego por Ano (IBGE - Continua))</li>
</ul></li>
<li>Column: RowNumber-2662979B-1795-4F74-8F37-6A1BA8059B61 (Table: Indices_agregados_classificados)</li>
<li>Column: Sigla_UF (Table: Indices_agregados_classificados)</li>
<li>Column: Ano (Table: Indices_agregados_classificados)</li>
<li>Column: Indice (Table: Indices_agregados_classificados)</li>
<li>Column: Valor (Table: Indices_agregados_classificados)</li>
<li>Column: Indices_Ranking (Table: Indices_agregados_classificados)</li>
<li>Column: Area (Table: Indices_agregados_classificados)</li>
<li><span class="caret">Calc_Column: Eh Ano mais recente (Table: Indices_agregados_classificados)</span>
<ul class="nested">
<li>Table: Indices_agregados_classificados   ...</li>
<li>Column: Sigla_UF (Table: Indices_agregados_classificados)</li>
<li>Column: Ano (Table: Indices_agregados_classificados)</li>
<li>Column: Indice (Table: Indices_agregados_classificados)</li>
<li>Column: Indices_Ranking (Table: Indices_agregados_classificados)</li>
<li>Column: Area (Table: Indices_agregados_classificados)</li>
</ul></li>
</ul></li>
<li>Calc_Column: Sigla_UF (Table: Indices Ano mais recente)</li>
<li><span class="caret">Measure: Pontuação Total (Table: Indices Ano mais recente)</span>
<ul class="nested">
<li><span class="caret">Calc_Table: Indices Ano mais recente (Table: Indices Ano mais recente)</span>
<ul class="nested">
<li><span class="caret">Table: Indices_agregados_classificados</span>
<ul class="nested">
<li>Partition: SOC_Taxa de Pobreza (Table: SOC_Taxa de Pobreza)</li>
<li>Partition: SOC_Indice de Gini (Table: SOC_Indice de Gini)</li>
<li>Partition: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais (Table: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais)</li>
<li>Partition: SOC_IDHM_por_UF (Table: SOC_IDHM_por_UF)</li>
<li>Partition: FIN_Renda per capita (Atlas DH - Pnad Contínua/A) (Table: FIN_Renda per capita (Atlas DH - Pnad Contínua/A))</li>
<li><span class="caret">Partition: FIN_Receitas x Despesas (Table: FIN_Receitas x Despesas)</span>
<ul class="nested">
<li>Partition: FIN_Receita corrente - receita bruta - estadual (Table: FIN_Receita corrente - receita bruta - estadual)</li>
<li>Partition: FIN_Despesas correntes - estadual (Table: FIN_Despesas correntes - estadual)</li>
</ul></li>
<li>Partition: FIN_Receita corrente - receita bruta - estadual (Table: FIN_Receita corrente - receita bruta - estadual)</li>
<li>Partition: SEG_Ocorrências Criminais (Table: SEG_Ocorrências Criminais)</li>
<li>Partition: SEG_Homicidios por 100k Habitantes (Table: SEG_Homicidios por 100k Habitantes)</li>
<li>Partition: SAU_Estabelecimento de saude(DataSUS) (Table: SAU_Estabelecimento de saude(DataSUS))</li>
<li>Partition: SAU_Medicos por 10k Habitantes (Table: SAU_Medicos por 10k Habitantes)</li>
<li>Partition: EDU_% Alunos na Rede Pública (Table: EDU_% Alunos na Rede Pública)</li>
<li>Partition: SOC_Taxa de desemprego (IBGE - Continua) (Table: SOC_Taxa de desemprego (IBGE - Continua))</li>
<li>Partition: SOC_Taxa de desemprego por Ano (IBGE - Continua) (Table: SOC_Taxa de desemprego por Ano (IBGE - Continua))</li>
</ul></li>
<li>Column: RowNumber-2662979B-1795-4F74-8F37-6A1BA8059B61 (Table: Indices_agregados_classificados)</li>
<li>Column: Sigla_UF (Table: Indices_agregados_classificados)</li>
<li>Column: Ano (Table: Indices_agregados_classificados)</li>
<li>Column: Indice (Table: Indices_agregados_classificados)</li>
<li>Column: Valor (Table: Indices_agregados_classificados)</li>
<li>Column: Indices_Ranking (Table: Indices_agregados_classificados)</li>
<li>Column: Area (Table: Indices_agregados_classificados)</li>
<li><span class="caret">Calc_Column: Eh Ano mais recente (Table: Indices_agregados_classificados)</span>
<ul class="nested">
<li>Table: Indices_agregados_classificados   ...</li>
<li>Column: Sigla_UF (Table: Indices_agregados_classificados)</li>
<li>Column: Ano (Table: Indices_agregados_classificados)</li>
<li>Column: Indice (Table: Indices_agregados_classificados)</li>
<li>Column: Indices_Ranking (Table: Indices_agregados_classificados)</li>
<li>Column: Area (Table: Indices_agregados_classificados)</li>
</ul></li>
</ul></li>
<li><span class="caret">Calc_Column: Pontuação Ponderada (Table: Indices Ano mais recente)</span>
<ul class="nested">
<li><span class="caret">Calc_Table: Indices Ano mais recente (Table: Indices Ano mais recente)</span>
<ul class="nested">
<li><span class="caret">Table: Indices_agregados_classificados</span>
<ul class="nested">
<li>Partition: SOC_Taxa de Pobreza (Table: SOC_Taxa de Pobreza)</li>
<li>Partition: SOC_Indice de Gini (Table: SOC_Indice de Gini)</li>
<li>Partition: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais (Table: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais)</li>
<li>Partition: SOC_IDHM_por_UF (Table: SOC_IDHM_por_UF)</li>
<li>Partition: FIN_Renda per capita (Atlas DH - Pnad Contínua/A) (Table: FIN_Renda per capita (Atlas DH - Pnad Contínua/A))</li>
<li><span class="caret">Partition: FIN_Receitas x Despesas (Table: FIN_Receitas x Despesas)</span>
<ul class="nested">
<li>Partition: FIN_Receita corrente - receita bruta - estadual (Table: FIN_Receita corrente - receita bruta - estadual)</li>
<li>Partition: FIN_Despesas correntes - estadual (Table: FIN_Despesas correntes - estadual)</li>
</ul></li>
<li>Partition: FIN_Receita corrente - receita bruta - estadual (Table: FIN_Receita corrente - receita bruta - estadual)</li>
<li>Partition: SEG_Ocorrências Criminais (Table: SEG_Ocorrências Criminais)</li>
<li>Partition: SEG_Homicidios por 100k Habitantes (Table: SEG_Homicidios por 100k Habitantes)</li>
<li>Partition: SAU_Estabelecimento de saude(DataSUS) (Table: SAU_Estabelecimento de saude(DataSUS))</li>
<li>Partition: SAU_Medicos por 10k Habitantes (Table: SAU_Medicos por 10k Habitantes)</li>
<li>Partition: EDU_% Alunos na Rede Pública (Table: EDU_% Alunos na Rede Pública)</li>
<li>Partition: SOC_Taxa de desemprego (IBGE - Continua) (Table: SOC_Taxa de desemprego (IBGE - Continua))</li>
<li>Partition: SOC_Taxa de desemprego por Ano (IBGE - Continua) (Table: SOC_Taxa de desemprego por Ano (IBGE - Continua))</li>
</ul></li>
<li>Column: RowNumber-2662979B-1795-4F74-8F37-6A1BA8059B61 (Table: Indices_agregados_classificados)</li>
<li>Column: Sigla_UF (Table: Indices_agregados_classificados)</li>
<li>Column: Ano (Table: Indices_agregados_classificados)</li>
<li>Column: Indice (Table: Indices_agregados_classificados)</li>
<li>Column: Valor (Table: Indices_agregados_classificados)</li>
<li>Column: Indices_Ranking (Table: Indices_agregados_classificados)</li>
<li>Column: Area (Table: Indices_agregados_classificados)</li>
<li><span class="caret">Calc_Column: Eh Ano mais recente (Table: Indices_agregados_classificados)</span>
<ul class="nested">
<li>Table: Indices_agregados_classificados   ...</li>
<li>Column: Sigla_UF (Table: Indices_agregados_classificados)</li>
<li>Column: Ano (Table: Indices_agregados_classificados)</li>
<li>Column: Indice (Table: Indices_agregados_classificados)</li>
<li>Column: Indices_Ranking (Table: Indices_agregados_classificados)</li>
<li>Column: Area (Table: Indices_agregados_classificados)</li>
</ul></li>
</ul></li>
<li>Calc_Column: Indices_Ranking (Table: Indices Ano mais recente)</li>
<li><span class="caret">Calc_Column: Posicao Normalizado (Table: Indices Ano mais recente)</span>
<ul class="nested">
<li><span class="caret">Calc_Table: Indices Ano mais recente (Table: Indices Ano mais recente)</span>
<ul class="nested">
<li><span class="caret">Table: Indices_agregados_classificados</span>
<ul class="nested">
<li>Partition: SOC_Taxa de Pobreza (Table: SOC_Taxa de Pobreza)</li>
<li>Partition: SOC_Indice de Gini (Table: SOC_Indice de Gini)</li>
<li>Partition: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais (Table: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais)</li>
<li>Partition: SOC_IDHM_por_UF (Table: SOC_IDHM_por_UF)</li>
<li>Partition: FIN_Renda per capita (Atlas DH - Pnad Contínua/A) (Table: FIN_Renda per capita (Atlas DH - Pnad Contínua/A))</li>
<li><span class="caret">Partition: FIN_Receitas x Despesas (Table: FIN_Receitas x Despesas)</span>
<ul class="nested">
<li>Partition: FIN_Receita corrente - receita bruta - estadual (Table: FIN_Receita corrente - receita bruta - estadual)</li>
<li>Partition: FIN_Despesas correntes - estadual (Table: FIN_Despesas correntes - estadual)</li>
</ul></li>
<li>Partition: FIN_Receita corrente - receita bruta - estadual (Table: FIN_Receita corrente - receita bruta - estadual)</li>
<li>Partition: SEG_Ocorrências Criminais (Table: SEG_Ocorrências Criminais)</li>
<li>Partition: SEG_Homicidios por 100k Habitantes (Table: SEG_Homicidios por 100k Habitantes)</li>
<li>Partition: SAU_Estabelecimento de saude(DataSUS) (Table: SAU_Estabelecimento de saude(DataSUS))</li>
<li>Partition: SAU_Medicos por 10k Habitantes (Table: SAU_Medicos por 10k Habitantes)</li>
<li>Partition: EDU_% Alunos na Rede Pública (Table: EDU_% Alunos na Rede Pública)</li>
<li>Partition: SOC_Taxa de desemprego (IBGE - Continua) (Table: SOC_Taxa de desemprego (IBGE - Continua))</li>
<li>Partition: SOC_Taxa de desemprego por Ano (IBGE - Continua) (Table: SOC_Taxa de desemprego por Ano (IBGE - Continua))</li>
</ul></li>
<li>Column: RowNumber-2662979B-1795-4F74-8F37-6A1BA8059B61 (Table: Indices_agregados_classificados)</li>
<li>Column: Sigla_UF (Table: Indices_agregados_classificados)</li>
<li>Column: Ano (Table: Indices_agregados_classificados)</li>
<li>Column: Indice (Table: Indices_agregados_classificados)</li>
<li>Column: Valor (Table: Indices_agregados_classificados)</li>
<li>Column: Indices_Ranking (Table: Indices_agregados_classificados)</li>
<li>Column: Area (Table: Indices_agregados_classificados)</li>
<li><span class="caret">Calc_Column: Eh Ano mais recente (Table: Indices_agregados_classificados)</span>
<ul class="nested">
<li>Table: Indices_agregados_classificados   ...</li>
<li>Column: Sigla_UF (Table: Indices_agregados_classificados)</li>
<li>Column: Ano (Table: Indices_agregados_classificados)</li>
<li>Column: Indice (Table: Indices_agregados_classificados)</li>
<li>Column: Indices_Ranking (Table: Indices_agregados_classificados)</li>
<li>Column: Area (Table: Indices_agregados_classificados)</li>
</ul></li>
</ul></li>
<li><span class="caret">Calc_Column: Posição entre os Estados (Table: Indices Ano mais recente)</span>
<ul class="nested">
<li><span class="caret">Calc_Table: Indices Ano mais recente (Table: Indices Ano mais recente)</span>
<ul class="nested">
<li><span class="caret">Table: Indices_agregados_classificados</span>
<ul class="nested">
<li>Partition: SOC_Taxa de Pobreza (Table: SOC_Taxa de Pobreza)</li>
<li>Partition: SOC_Indice de Gini (Table: SOC_Indice de Gini)</li>
<li>Partition: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais (Table: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais)</li>
<li>Partition: SOC_IDHM_por_UF (Table: SOC_IDHM_por_UF)</li>
<li>Partition: FIN_Renda per capita (Atlas DH - Pnad Contínua/A) (Table: FIN_Renda per capita (Atlas DH - Pnad Contínua/A))</li>
<li><span class="caret">Partition: FIN_Receitas x Despesas (Table: FIN_Receitas x Despesas)</span>
<ul class="nested">
<li>Partition: FIN_Receita corrente - receita bruta - estadual (Table: FIN_Receita corrente - receita bruta - estadual)</li>
<li>Partition: FIN_Despesas correntes - estadual (Table: FIN_Despesas correntes - estadual)</li>
</ul></li>
<li>Partition: FIN_Receita corrente - receita bruta - estadual (Table: FIN_Receita corrente - receita bruta - estadual)</li>
<li>Partition: SEG_Ocorrências Criminais (Table: SEG_Ocorrências Criminais)</li>
<li>Partition: SEG_Homicidios por 100k Habitantes (Table: SEG_Homicidios por 100k Habitantes)</li>
<li>Partition: SAU_Estabelecimento de saude(DataSUS) (Table: SAU_Estabelecimento de saude(DataSUS))</li>
<li>Partition: SAU_Medicos por 10k Habitantes (Table: SAU_Medicos por 10k Habitantes)</li>
<li>Partition: EDU_% Alunos na Rede Pública (Table: EDU_% Alunos na Rede Pública)</li>
<li>Partition: SOC_Taxa de desemprego (IBGE - Continua) (Table: SOC_Taxa de desemprego (IBGE - Continua))</li>
<li>Partition: SOC_Taxa de desemprego por Ano (IBGE - Continua) (Table: SOC_Taxa de desemprego por Ano (IBGE - Continua))</li>
</ul></li>
<li>Column: RowNumber-2662979B-1795-4F74-8F37-6A1BA8059B61 (Table: Indices_agregados_classificados)</li>
<li>Column: Sigla_UF (Table: Indices_agregados_classificados)</li>
<li>Column: Ano (Table: Indices_agregados_classificados)</li>
<li>Column: Indice (Table: Indices_agregados_classificados)</li>
<li>Column: Valor (Table: Indices_agregados_classificados)</li>
<li>Column: Indices_Ranking (Table: Indices_agregados_classificados)</li>
<li>Column: Area (Table: Indices_agregados_classificados)</li>
<li><span class="caret">Calc_Column: Eh Ano mais recente (Table: Indices_agregados_classificados)</span>
<ul class="nested">
<li>Table: Indices_agregados_classificados   ...</li>
<li>Column: Sigla_UF (Table: Indices_agregados_classificados)</li>
<li>Column: Ano (Table: Indices_agregados_classificados)</li>
<li>Column: Indice (Table: Indices_agregados_classificados)</li>
<li>Column: Indices_Ranking (Table: Indices_agregados_classificados)</li>
<li>Column: Area (Table: Indices_agregados_classificados)</li>
</ul></li>
</ul></li>
<li><span class="caret">Calc_Column: Classificacao (Table: Indices Ano mais recente)</span>
<ul class="nested">
<li>Table: Raking</li>
<li>Column: Indice (Table: Raking)</li>
<li>Column: Referencias (Table: Raking)</li>
<li><span class="caret">Calc_Table: Indices Ano mais recente (Table: Indices Ano mais recente)</span>
<ul class="nested">
<li><span class="caret">Table: Indices_agregados_classificados</span>
<ul class="nested">
<li>Partition: SOC_Taxa de Pobreza (Table: SOC_Taxa de Pobreza)</li>
<li>Partition: SOC_Indice de Gini (Table: SOC_Indice de Gini)</li>
<li>Partition: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais (Table: SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais)</li>
<li>Partition: SOC_IDHM_por_UF (Table: SOC_IDHM_por_UF)</li>
<li>Partition: FIN_Renda per capita (Atlas DH - Pnad Contínua/A) (Table: FIN_Renda per capita (Atlas DH - Pnad Contínua/A))</li>
<li><span class="caret">Partition: FIN_Receitas x Despesas (Table: FIN_Receitas x Despesas)</span>
<ul class="nested">
<li>Partition: FIN_Receita corrente - receita bruta - estadual (Table: FIN_Receita corrente - receita bruta - estadual)</li>
<li>Partition: FIN_Despesas correntes - estadual (Table: FIN_Despesas correntes - estadual)</li>
</ul></li>
<li>Partition: FIN_Receita corrente - receita bruta - estadual (Table: FIN_Receita corrente - receita bruta - estadual)</li>
<li>Partition: SEG_Ocorrências Criminais (Table: SEG_Ocorrências Criminais)</li>
<li>Partition: SEG_Homicidios por 100k Habitantes (Table: SEG_Homicidios por 100k Habitantes)</li>
<li>Partition: SAU_Estabelecimento de saude(DataSUS) (Table: SAU_Estabelecimento de saude(DataSUS))</li>
<li>Partition: SAU_Medicos por 10k Habitantes (Table: SAU_Medicos por 10k Habitantes)</li>
<li>Partition: EDU_% Alunos na Rede Pública (Table: EDU_% Alunos na Rede Pública)</li>
<li>Partition: SOC_Taxa de desemprego (IBGE - Continua) (Table: SOC_Taxa de desemprego (IBGE - Continua))</li>
<li>Partition: SOC_Taxa de desemprego por Ano (IBGE - Continua) (Table: SOC_Taxa de desemprego por Ano (IBGE - Continua))</li>
</ul></li>
<li>Column: RowNumber-2662979B-1795-4F74-8F37-6A1BA8059B61 (Table: Indices_agregados_classificados)</li>
<li>Column: Sigla_UF (Table: Indices_agregados_classificados)</li>
<li>Column: Ano (Table: Indices_agregados_classificados)</li>
<li>Column: Indice (Table: Indices_agregados_classificados)</li>
<li>Column: Valor (Table: Indices_agregados_classificados)</li>
<li>Column: Indices_Ranking (Table: Indices_agregados_classificados)</li>
<li>Column: Area (Table: Indices_agregados_classificados)</li>
<li><span class="caret">Calc_Column: Eh Ano mais recente (Table: Indices_agregados_classificados)</span>
<ul class="nested">
<li>Table: Indices_agregados_classificados   ...</li>
<li>Column: Sigla_UF (Table: Indices_agregados_classificados)</li>
<li>Column: Ano (Table: Indices_agregados_classificados)</li>
<li>Column: Indice (Table: Indices_agregados_classificados)</li>
<li>Column: Indices_Ranking (Table: Indices_agregados_classificados)</li>
<li>Column: Area (Table: Indices_agregados_classificados)</li>
</ul></li>
</ul></li>
<li>Column: RowNumber-2662979B-1795-4F74-8F37-6A1BA8059B61 (Table: Indices Ano mais recente)</li>
<li>Calc_Column: Sigla_UF (Table: Indices Ano mais recente)</li>
<li>Calc_Column: Valor (Table: Indices Ano mais recente)</li>
<li>Calc_Column: Indices_Ranking (Table: Indices Ano mais recente)</li>
<li>Calc_Column: Area (Table: Indices Ano mais recente)</li>
</ul></li>
</ul></li>
</ul></li>
</ul></li>
</ul></li>
</ul></span></li>
</ul></td>
		<td>Measure: Posicao Geral mais recente</td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Columns for Table UFs(ibge):</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Column Name</th>
		<th>Description</th>
		<th>Calculated Column</th>
		<th>Expression</th>
	</tr>
	<tr>
		<td>UF_id</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Sigla_UF</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>nome_UF</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>regiao_id</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Pa&#237;s</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>id_map</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Columns for Table Populacao Historica UFs:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Column Name</th>
		<th>Description</th>
		<th>Calculated Column</th>
		<th>Expression</th>
	</tr>
	<tr>
		<td>Sigla_UF</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Ano</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Popula&#231;&#227;o</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Columns for Table FIN_PIB Estadual:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Column Name</th>
		<th>Description</th>
		<th>Calculated Column</th>
		<th>Expression</th>
	</tr>
	<tr>
		<td>Sigla_UF</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Ano</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Valor PIB Estadual / 1000</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>PIB Brasil no ano</td>
		<td></td>
		<td>Calculated Column</td>
		<td>RELATED(&#39;FIN_PIB Brasil&#39;[Valor PIB Brasil])</td>
	</tr>
	<tr>
		<td>% Rela&#231;&#227;o PIB Brasil</td>
		<td></td>
		<td>Calculated Column</td>
		<td>
if ([Estado_Selecionado] == &quot;&quot;, 0,
    (Divide([Valor PIB Estadual] , [PIB Brasil no ano], 0) )
)
</td>
	</tr>
	<tr>
		<td>Valor PIB Estadual</td>
		<td></td>
		<td>Calculated Column</td>
		<td>[Valor PIB Estadual / 1000] *1000</td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Columns for Table Territorios(ipea):</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Column Name</th>
		<th>Description</th>
		<th>Calculated Column</th>
		<th>Expression</th>
	</tr>
	<tr>
		<td>Tipo Regiao</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Municipio_id</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Munic&#237;pio</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>TERNOMEPADRAO</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>CAPITAL</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>&#193;rea do territ&#243;rio (em km&#178;)</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Relacao ao Territ&#243;rio Nacional</td>
		<td></td>
		<td>Calculated Column</td>
		<td>
VAR Total_territorio = LOOKUPVALUE(&#39;Territorios(ipea)&#39;[&#193;rea do territ&#243;rio (em km&#178;)],[Tipo Regiao],&quot;Brasil&quot;)
VAR Area = IF (ISNUMBER([&#193;rea do territ&#243;rio (em km&#178;)]),[&#193;rea do territ&#243;rio (em km&#178;)],0 )
Return
Divide(Area, Total_territorio, 0)</td>
	</tr>
	<tr>
		<td>Sigla_UF</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Columns for Table SOC_IDHM_por_UF:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Column Name</th>
		<th>Description</th>
		<th>Calculated Column</th>
		<th>Expression</th>
	</tr>
	<tr>
		<td>Sigla_UF</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Ano</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>IDHM_UF</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>.Ano</td>
		<td></td>
		<td>Calculated Column</td>
		<td>convert(MAX([Ano]),STRING)</td>
	</tr>
	<tr>
		<td>Ano_Data</td>
		<td></td>
		<td>Calculated Column</td>
		<td>DATE([Ano],01,01) </td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Columns for Table EDU_% Alunos na Rede Pública:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Column Name</th>
		<th>Description</th>
		<th>Calculated Column</th>
		<th>Expression</th>
	</tr>
	<tr>
		<td>Sigla_UF</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Ano</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Valor(%)</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Ano_Data</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Columns for Table Governadores (wikimedia):</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Column Name</th>
		<th>Description</th>
		<th>Calculated Column</th>
		<th>Expression</th>
	</tr>
	<tr>
		<td>Nome Fanta - Nome</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Nome_UF</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Nome</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Mandato</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Sigla_UF</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Foto</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Partido</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>No governo desde </td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Columns for Table SOC_Taxa de desemprego (IBGE - Continua):</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Column Name</th>
		<th>Description</th>
		<th>Calculated Column</th>
		<th>Expression</th>
	</tr>
	<tr>
		<td>Sigla_UF</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Codigo</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Periodo</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Taxa Desemprego %</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Trimestres</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Ano</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Columns for Table SAU_Estabelecimento de saude(DataSUS):</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Column Name</th>
		<th>Description</th>
		<th>Calculated Column</th>
		<th>Expression</th>
	</tr>
	<tr>
		<td>Sigla_UF</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Ano</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Num_Estabelecimentos_Saude</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Columns for Table FIN_PIB Brasil:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Column Name</th>
		<th>Description</th>
		<th>Calculated Column</th>
		<th>Expression</th>
	</tr>
	<tr>
		<td>Sigla_UF</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Ano</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Valor PIB Brasil em trilhao</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Valor PIB Brasil</td>
		<td></td>
		<td>Calculated Column</td>
		<td>[Valor PIB Brasil em trilhao] * 1000</td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Columns for Table SAU_Medicos por 10k Habitantes:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Column Name</th>
		<th>Description</th>
		<th>Calculated Column</th>
		<th>Expression</th>
	</tr>
	<tr>
		<td>Sigla_UF</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Ano</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>M&#233;dicos por 10.000 Habitantes</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Columns for Table SEG_Homicidios por 100k Habitantes:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Column Name</th>
		<th>Description</th>
		<th>Calculated Column</th>
		<th>Expression</th>
	</tr>
	<tr>
		<td>Sigla_UF</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Ano</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Tx Homicidio por 100.000 Habitantes</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Columns for Table SOC_Taxa de Pobreza:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Column Name</th>
		<th>Description</th>
		<th>Calculated Column</th>
		<th>Expression</th>
	</tr>
	<tr>
		<td>Sigla_UF</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Ano</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Taxa de Pobreza</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Columns for Table FIN_Receita corrente - receita bruta - estadual:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Column Name</th>
		<th>Description</th>
		<th>Calculated Column</th>
		<th>Expression</th>
	</tr>
	<tr>
		<td>Sigla_UF</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Ano</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Receita bruta</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Indice</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Columns for Table FIN_Despesas correntes - estadual:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Column Name</th>
		<th>Description</th>
		<th>Calculated Column</th>
		<th>Expression</th>
	</tr>
	<tr>
		<td>Sigla_UF</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Ano</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Despesas Correntes</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Indice</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Columns for Table FIN_Renda per capita (Atlas DH - Pnad Contínua/A):</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Column Name</th>
		<th>Description</th>
		<th>Calculated Column</th>
		<th>Expression</th>
	</tr>
	<tr>
		<td>Sigla_UF</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Ano</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Renda per Capita</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Columns for Table FIN_Receitas x Despesas:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Column Name</th>
		<th>Description</th>
		<th>Calculated Column</th>
		<th>Expression</th>
	</tr>
	<tr>
		<td>Sigla_UF</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Ano</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Receita bruta</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Despesas Correntes</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Receita - Despesa</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Columns for Table SOC_Indice de Gini:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Column Name</th>
		<th>Description</th>
		<th>Calculated Column</th>
		<th>Expression</th>
	</tr>
	<tr>
		<td>Sigla_UF</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Ano</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Indice de Gini</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Meta</td>
		<td></td>
		<td>Calculated Column</td>
		<td>0.35</td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Columns for Table SEG_Ocorrências Criminais:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Column Name</th>
		<th>Description</th>
		<th>Calculated Column</th>
		<th>Expression</th>
	</tr>
	<tr>
		<td>Ano</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Tipo Crime</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>V&#237;timas</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Sigla_UF</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Columns for Table Calendario:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Column Name</th>
		<th>Description</th>
		<th>Calculated Column</th>
		<th>Expression</th>
	</tr>
	<tr>
		<td>Date</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Ano</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>M&#234;s</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Dia</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Nome do M&#234;s</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Trimestre</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Columns for Table PIB Estadual histórico:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Column Name</th>
		<th>Description</th>
		<th>Calculated Column</th>
		<th>Expression</th>
	</tr>
	<tr>
		<td>Sigla_UF</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Atributo</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Valor</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>DAX Colour</td>
		<td></td>
		<td>Calculated Column</td>
		<td>SWITCH(
    TRUE(),
    [Sigla_UF] IN {&quot;SP&quot;, &quot;RJ&quot;, &quot;MG&quot;, &quot;ES&quot;}, &quot;#A3C800&quot;,
    [Sigla_UF] IN {&quot;RS&quot;, &quot;SC&quot;, &quot;PR&quot;}, &quot;#005FE4&quot;,
    [Sigla_UF] IN {&quot;AC&quot;, &quot;AM&quot;, &quot;PA&quot;, &quot;RR&quot;, &quot;RO&quot;, &quot;AP&quot;}, &quot;#B2F850&quot;,
    [Sigla_UF] IN {&quot;MA&quot;, &quot;PI&quot;, &quot;CE&quot;, &quot;RN&quot;, &quot;SE&quot;, &quot;AL&quot;, &quot;PB&quot;, &quot;PE&quot;, &quot;BA&quot;}, &quot;#FBB214&quot;,
    [Sigla_UF] IN {&quot;MT&quot;, &quot;MS&quot;, &quot;GO&quot;, &quot;DF&quot;, &quot;TO&quot;}, &quot;#00E7FC&quot;,
    &quot;#0000F0&quot;
)</td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Columns for Table Raking:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Column Name</th>
		<th>Description</th>
		<th>Calculated Column</th>
		<th>Expression</th>
	</tr>
	<tr>
		<td>Area</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Indice</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Observa&#231;&#245;es</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Referencias</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Columns for Table Indices_mais_recentes:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Column Name</th>
		<th>Description</th>
		<th>Calculated Column</th>
		<th>Expression</th>
	</tr>
	<tr>
		<td>Sigla_UF</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Ano</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Indice</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Valor</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Indices_Ranking</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Area</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Columns for Table Ano Filtragem Indices:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Column Name</th>
		<th>Description</th>
		<th>Calculated Column</th>
		<th>Expression</th>
	</tr>
	<tr>
		<td>Ano Filtragem Indices</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Columns for Table SOC_Taxa de desemprego por Ano (IBGE - Continua):</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Column Name</th>
		<th>Description</th>
		<th>Calculated Column</th>
		<th>Expression</th>
	</tr>
	<tr>
		<td>Sigla_UF</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Ano</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Taxa Desemprego m&#233;dia anual %</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Columns for Table SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Column Name</th>
		<th>Description</th>
		<th>Calculated Column</th>
		<th>Expression</th>
	</tr>
	<tr>
		<td>Sigla_UF</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Ano</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Taxa Analfabetismo</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Columns for Table Indices_agregados_classificados:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Column Name</th>
		<th>Description</th>
		<th>Calculated Column</th>
		<th>Expression</th>
	</tr>
	<tr>
		<td>Sigla_UF</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Ano</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Indice</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Valor</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Indices_Ranking</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Area</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Eh Ano mais recente</td>
		<td></td>
		<td>Calculated Column</td>
		<td>
VAR ANO = CALCULATE( MAX(&#39;Indices_agregados_classificados&#39;[Ano]), ALLEXCEPT(&#39;Indices_agregados_classificados&#39;, &#39;Indices_agregados_classificados&#39;[Sigla_UF], &#39;Indices_agregados_classificados&#39;[Indice], &#39;Indices_agregados_classificados&#39;[Indices_Ranking], &#39;Indices_agregados_classificados&#39;[Area]) )
RETURN
ANO</td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Columns for Table Indices Ano mais recente:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Column Name</th>
		<th>Description</th>
		<th>Calculated Column</th>
		<th>Expression</th>
	</tr>
	<tr>
		<td>Sigla_UF</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Ano</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Indice</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Valor</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Indices_Ranking</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Area</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Eh Ano mais recente</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Classificacao</td>
		<td></td>
		<td>Calculated Column</td>
		<td>
VAR CurrentArea = &#39;Indices Ano mais recente&#39;[Area]
VAR CurrentIndice = &#39;Indices Ano mais recente&#39;[Indices_Ranking]
VAR CurrentSigla = &#39;Indices Ano mais recente&#39;[Sigla_UF]
VAR Ref = LOOKUPVALUE(&#39;Raking&#39;[Referencias], &#39;Raking&#39;[Indice], CurrentIndice)

RETURN

IF(
    Ref = -1,
    RANKX(
        FILTER(&#39;Indices Ano mais recente&#39;, &#39;Indices Ano mais recente&#39;[Indices_Ranking] = CurrentIndice),
        &#39;Indices Ano mais recente&#39;[Valor],
        ,
        ASC
    ),
    IF(
        Ref = 1,
        RANKX(
            FILTER(&#39;Indices Ano mais recente&#39;, &#39;Indices Ano mais recente&#39;[Indices_Ranking] = CurrentIndice),
            &#39;Indices Ano mais recente&#39;[Valor],
            ,
            DESC
        ),
        BLANK()
    )
)</td>
	</tr>
	<tr>
		<td>Posi&#231;&#227;o entre os Estados</td>
		<td></td>
		<td>Calculated Column</td>
		<td>[Classificacao] &amp; &quot;&#186; lugar&quot;</td>
	</tr>
	<tr>
		<td>Posicao Normalizado</td>
		<td></td>
		<td>Calculated Column</td>
		<td>
VAR num_digitos = find(&quot;&#186;&quot;,[Posi&#231;&#227;o entre os Estados],1,0)-1
VAR valor_pos = left([Posi&#231;&#227;o entre os Estados],num_digitos)
RETURN
IF ( len(valor_pos) &gt; 0,
    1 - ( VALUE(valor_pos) - 1 ) / 26
)</td>
	</tr>
	<tr>
		<td>Pontua&#231;&#227;o Ponderada</td>
		<td></td>
		<td>Calculated Column</td>
		<td>
VAR IDH = 0.7
VAR Renda = 0.65
VAR Indice_Gini = 0.6
VAR TX_Analfa = 0.55
VAR TX_Desemprego = 0.5
VAR TX_Pobreza = 0.45
VAR Medicos = 0.4
VAR Homicidios = 0.35
VAR PIB = 0.3
VAR Estabelecimentos = 0.25
VAR Receita = 0.15
VAR Alunos = 0.1
Return
SWITCH([Indices_Ranking],
   &quot;IDHM_UF&quot;, IDH * [Posicao Normalizado],
   &quot;Renda per Capita&quot;, Renda * [Posicao Normalizado],
    &quot;&#205;ndice Gini&quot;, Indice_Gini * [Posicao Normalizado],
    &quot;Taxa Analfabetismo&quot;, TX_Analfa * [Posicao Normalizado],
    &quot;Taxa Desemprego m&#233;dia Anual %&quot;, TX_Desemprego * [Posicao Normalizado],
    &quot;Taxa de Pobreza&quot;, TX_Pobreza * [Posicao Normalizado],
    &quot;M&#233;dicos por 10.000 Habitantes&quot;, Medicos * [Posicao Normalizado],
    &quot;Homic&#237;dios por 100 mil Habitantes&quot;, Homicidios * [Posicao Normalizado],
    &quot;Num_estabelecimentos_saude&quot;, Estabelecimentos * [Posicao Normalizado],
 //   &quot;Receita - Despesas (bruto)&quot;, Receita * [Posicao Normalizado],
    &quot;Receita - Despesa&quot;, Receita * [Posicao Normalizado],
 //   &quot;Despesas Correntes&quot;, Receita * [Posicao Normalizado],
    &quot;% Alunos na Rede P&#250;blica&quot;, Alunos * [Posicao Normalizado],
    0
)
</td>
	</tr>
	<tr>
		<td>Partido</td>
		<td></td>
		<td>Calculated Column</td>
		<td>LOOKUPVALUE(&#39;Governadores (wikimedia)&#39;[Partido],&#39;Governadores (wikimedia)&#39;[Sigla_UF],&#39;Indices Ano mais recente&#39;[Sigla_UF])</td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Roles:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Role Name</th>
		<th>Table Name</th>
		<th>Description</th>
		<th>Expression</th>
	</tr>
</table>
<hr></hr><br></br><h3><div>Relationships:</div></h3><br></br><table border='1px' cellpadding='1' cellspacing='1'><tr ><td >Name</td><td >CrossFilteringBehavior</td><td >FromCardinality</td><td >FromColumn</td><td >FromTable</td><td >IsActive</td><td >IsRemoved</td><td >JoinOnDateBehavior</td><td >RelyOnReferentialIntegrity</td><td >SecurityFilteringBehavior</td><td >State</td><td >ToCardinality</td><td >ToColumn</td><td >ToTable</td><td >Type</td></tr><tr ><td >AutoDetected_a246f32d-387f-42e4-b705-bb7914d5cdfa</td><td >OneDirection</td><td >Many</td><td >Sigla_UF</td><td >Populacao Historica UFs</td><td >True</td><td >False</td><td >DateAndTime</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >Sigla_UF</td><td >UFs(ibge)</td><td >SingleColumn</td></tr><tr ><td >AutoDetected_87c24f61-8d9a-4dc9-bea7-e8cbf09616ac</td><td >OneDirection</td><td >Many</td><td >Sigla_UF</td><td >FIN_PIB Estadual</td><td >True</td><td >False</td><td >DateAndTime</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >Sigla_UF</td><td >UFs(ibge)</td><td >SingleColumn</td></tr><tr ><td >AutoDetected_db1f02aa-0656-4f68-9fc2-e1645db3712b</td><td >OneDirection</td><td >Many</td><td >Sigla_UF</td><td >SOC_IDHM_por_UF</td><td >True</td><td >False</td><td >DateAndTime</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >Sigla_UF</td><td >UFs(ibge)</td><td >SingleColumn</td></tr><tr ><td >AutoDetected_a10f45fd-8455-4635-ba30-68c3a0600aa4</td><td >OneDirection</td><td >Many</td><td >Sigla_UF</td><td >EDU_% Alunos na Rede Pública</td><td >True</td><td >False</td><td >DateAndTime</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >Sigla_UF</td><td >UFs(ibge)</td><td >SingleColumn</td></tr><tr ><td >AutoDetected_4d399378-d1e9-4da9-9731-a4b9285a07a1</td><td >OneDirection</td><td >Many</td><td >Sigla_UF</td><td >Governadores (wikimedia)</td><td >True</td><td >False</td><td >DateAndTime</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >Sigla_UF</td><td >UFs(ibge)</td><td >SingleColumn</td></tr><tr ><td >AutoDetected_fb8ecac6-2b2f-4179-8d08-3bd4468a4b27</td><td >OneDirection</td><td >Many</td><td >Sigla_UF</td><td >SOC_Taxa de desemprego (IBGE - Continua)</td><td >True</td><td >False</td><td >DateAndTime</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >Sigla_UF</td><td >UFs(ibge)</td><td >SingleColumn</td></tr><tr ><td >AutoDetected_453f7fe0-f30f-4c04-b67b-98945e1e3193</td><td >OneDirection</td><td >Many</td><td >Sigla_UF</td><td >SAU_Estabelecimento de saude(DataSUS)</td><td >True</td><td >False</td><td >DateAndTime</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >Sigla_UF</td><td >UFs(ibge)</td><td >SingleColumn</td></tr><tr ><td >AutoDetected_6c0dd54d-e968-4d33-8786-7cb70e508099</td><td >OneDirection</td><td >Many</td><td >Ano</td><td >FIN_PIB Estadual</td><td >True</td><td >False</td><td >DateAndTime</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >Ano</td><td >FIN_PIB Brasil</td><td >SingleColumn</td></tr><tr ><td >9814f3b3-68d4-c04d-9488-ad96336ebe05</td><td >OneDirection</td><td >Many</td><td >Sigla_UF</td><td >SAU_Medicos por 10k Habitantes</td><td >True</td><td >False</td><td >DateAndTime</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >Sigla_UF</td><td >UFs(ibge)</td><td >SingleColumn</td></tr><tr ><td >AutoDetected_ff3d9f0f-58ee-451e-a51d-2341be5a78bc</td><td >OneDirection</td><td >Many</td><td >Sigla_UF</td><td >SEG_Homicidios por 100k Habitantes</td><td >True</td><td >False</td><td >DateAndTime</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >Sigla_UF</td><td >UFs(ibge)</td><td >SingleColumn</td></tr><tr ><td >AutoDetected_cd34beed-1479-4826-9ea5-8237e1c4329c</td><td >OneDirection</td><td >Many</td><td >Sigla_UF</td><td >SOC_Taxa de Pobreza</td><td >True</td><td >False</td><td >DateAndTime</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >Sigla_UF</td><td >UFs(ibge)</td><td >SingleColumn</td></tr><tr ><td >a0414d31-a10c-455e-14b2-d5a10da59a87</td><td >OneDirection</td><td >Many</td><td >Sigla_UF</td><td >FIN_Despesas correntes - estadual</td><td >True</td><td >False</td><td >DateAndTime</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >Sigla_UF</td><td >UFs(ibge)</td><td >SingleColumn</td></tr><tr ><td >6c88188d-6ec6-c6fd-6bd3-c626b12c8983</td><td >OneDirection</td><td >Many</td><td >Sigla_UF</td><td >FIN_Receita corrente - receita bruta - estadual</td><td >True</td><td >False</td><td >DateAndTime</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >Sigla_UF</td><td >UFs(ibge)</td><td >SingleColumn</td></tr><tr ><td >b83678b1-77df-39c9-4779-ca52d7d0fb39</td><td >OneDirection</td><td >Many</td><td >Sigla_UF</td><td >FIN_Renda per capita (Atlas DH - Pnad Contínua/A)</td><td >True</td><td >False</td><td >DateAndTime</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >Sigla_UF</td><td >UFs(ibge)</td><td >SingleColumn</td></tr><tr ><td >AutoDetected_00aacb91-59e0-4e8c-82a6-36e6c47ac7cd</td><td >OneDirection</td><td >Many</td><td >Sigla_UF</td><td >FIN_Receitas x Despesas</td><td >True</td><td >False</td><td >DateAndTime</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >Sigla_UF</td><td >UFs(ibge)</td><td >SingleColumn</td></tr><tr ><td >AutoDetected_cc03ed78-861f-4978-91e7-32a39b1da662</td><td >OneDirection</td><td >Many</td><td >Sigla_UF</td><td >SOC_Indice de Gini</td><td >True</td><td >False</td><td >DateAndTime</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >Sigla_UF</td><td >UFs(ibge)</td><td >SingleColumn</td></tr><tr ><td >AutoDetected_b2a9d9f4-d0a3-4827-a3d6-0382a16d0cf1</td><td >OneDirection</td><td >Many</td><td >Sigla_UF</td><td >SEG_Ocorrências Criminais</td><td >True</td><td >False</td><td >DateAndTime</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >Sigla_UF</td><td >UFs(ibge)</td><td >SingleColumn</td></tr><tr ><td >AutoDetected_28a9e196-fb3f-4b2d-a551-d9d3f0faea81</td><td >OneDirection</td><td >Many</td><td >Sigla_UF</td><td >PIB Estadual histórico</td><td >True</td><td >False</td><td >DateAndTime</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >Sigla_UF</td><td >UFs(ibge)</td><td >SingleColumn</td></tr><tr ><td >AutoDetected_12fb90f4-bad5-445b-b5cf-a56e48b8d495</td><td >OneDirection</td><td >Many</td><td >Sigla_UF</td><td >SOC_Taxa de desemprego por Ano (IBGE - Continua)</td><td >True</td><td >False</td><td >DateAndTime</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >Sigla_UF</td><td >UFs(ibge)</td><td >SingleColumn</td></tr><tr ><td >AutoDetected_ab6ed497-2fe6-4d19-be33-232f9b5c1709</td><td >OneDirection</td><td >Many</td><td >Sigla_UF</td><td >SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais</td><td >True</td><td >False</td><td >DateAndTime</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >Sigla_UF</td><td >UFs(ibge)</td><td >SingleColumn</td></tr><tr ><td >AutoDetected_1a7af5f8-de76-4207-9310-5978ba65ad89</td><td >OneDirection</td><td >Many</td><td >Sigla_UF</td><td >Indices_agregados_classificados</td><td >True</td><td >False</td><td >DateAndTime</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >Sigla_UF</td><td >UFs(ibge)</td><td >SingleColumn</td></tr><tr ><td >4214c873-4923-84e3-0575-0219811bfa6b</td><td >OneDirection</td><td >Many</td><td >Sigla_UF</td><td >Indices Ano mais recente</td><td >True</td><td >False</td><td >DateAndTime</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >Sigla_UF</td><td >UFs(ibge)</td><td >SingleColumn</td></tr><tr ><td >AutoDetected_1c758e6b-cae8-4a7b-82d3-fd6d61e00112</td><td >OneDirection</td><td >Many</td><td >Sigla_UF</td><td >Territorios(ipea)</td><td >True</td><td >False</td><td >DateAndTime</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >Sigla_UF</td><td >UFs(ibge)</td><td >SingleColumn</td></tr><tr ><td >a03fdb86-b031-65e4-0dd5-24d8bb872d7a</td><td >OneDirection</td><td >Many</td><td >Sigla_UF</td><td >Indices_mais_recentes</td><td >True</td><td >False</td><td >DateAndTime</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >Sigla_UF</td><td >UFs(ibge)</td><td >SingleColumn</td></tr></table><hr></hr><br></br><h2><div>M (Power Query) Script:</div></h2><br></br><br></br><font face="verdana" size="2"<div>UFs(ibge)<br></br><br></br><font color="blue">let</font><br></br>    Fonte = <font color="purple">Json.Document</font>(<font color="purple">Web.Contents</font>("https:<font color="green">//servicodados.ibge.gov.br/api/v1/localidades/regioes/1|2|3|4|5/estados")),
</font>
    #<font color="red">"Convertido para Tabela"</font> = <font color="purple">Table.FromList</font>(Fonte, <font color="purple">Splitter.SplitByNothing</font>(), <font color="blue">null</font>, <font color="blue">null</font>, <font color="purple">ExtraValues.Error</font>),<br></br>    #<font color="red">"Column1 Expandido"</font> = <font color="purple">Table.ExpandRecordColumn</font>(#<font color="red">"Convertido para Tabela"</font>, <font color="red">"Column1"</font>, {<font color="red">"id"</font>, <font color="red">"sigla"</font>, <font color="red">"nome"</font>, <font color="red">"regiao"</font>}, {<font color="red">"id"</font>, <font color="red">"sigla"</font>, <font color="red">"nome"</font>, <font color="red">"regiao"</font>}),<br></br>    #<font color="red">"regiao Expandido"</font> = <font color="purple">Table.ExpandRecordColumn</font>(#<font color="red">"Column1 Expandido"</font>, <font color="red">"regiao"</font>, {<font color="red">"id"</font>, <font color="red">"sigla"</font>, <font color="red">"nome"</font>}, {<font color="red">"regiao.id"</font>, <font color="red">"regiao.sigla"</font>, <font color="red">"regiao.nome"</font>}),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"regiao Expandido"</font>,{{<font color="red">"id"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"sigla"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"nome"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"regiao.id"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"regiao.sigla"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"regiao.nome"</font>, <font color="blue">type</font> <font color="blue">text</font>}}),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Tipo Alterado"</font>,{{<font color="red">"id"</font>, <font color="red">"UF_id"</font>}, {<font color="red">"nome"</font>, <font color="red">"nome_UF"</font>}, {<font color="red">"regiao.id"</font>, <font color="red">"regiao_id"</font>}}),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Colunas Renomeadas"</font>,{<font color="red">"regiao.sigla"</font>, <font color="red">"regiao.nome"</font>}),<br></br>    #<font color="red">"Colunas Renomeadas1"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Colunas Removidas"</font>,{{<font color="red">"sigla"</font>, <font color="red">"Sigla_UF"</font>}}),<br></br>    #<font color="red">"Personalização Adicionada"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Colunas Renomeadas1"</font>, <font color="red">"Pais"</font>, each <font color="red">"Brasil"</font>),<br></br>    #<font color="red">"Colunas Renomeadas2"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Personalização Adicionada"</font>,{{<font color="red">"Pais"</font>, <font color="red">"País"</font>}}),<br></br>    #<font color="red">"Coluna Condicional Adicionada"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Colunas Renomeadas2"</font>, <font color="red">"id_map"</font>, each if [nome_UF] = <font color="red">"Rondônia"</font> then <font color="red">"Rondonia"</font> else if [nome_UF] = <font color="red">"Pará"</font> then <font color="red">"Para"</font> else if [nome_UF] = <font color="red">"Amapá"</font> then <font color="red">"Amapa"</font> else if [nome_UF] = <font color="red">"Maranhão"</font> then <font color="red">"Maranhao"</font> else if [nome_UF] = <font color="red">"Piauí"</font> then <font color="red">"Piaui"</font> else if [nome_UF] = <font color="red">"Ceará"</font> then <font color="red">"Ceara"</font> else if [nome_UF] = <font color="red">"Paraíba"</font> then <font color="red">"Paraiba"</font> else if [nome_UF] = <font color="red">"Espírito Santo"</font> then <font color="red">"Espirito Santo"</font> else if [nome_UF] = <font color="red">"São Paulo"</font> then <font color="red">"Sao Paulo"</font> else if [nome_UF] = <font color="red">"Paraná"</font> then <font color="red">"Parana"</font> else if [nome_UF] = <font color="red">"Goiás"</font> then <font color="red">"Goias"</font> else [nome_UF], <font color="blue">type</font> <font color="blue">text</font>)<br></br><font color="blue">in</font><br></br>    #<font color="red">"Coluna Condicional Adicionada"</font><br></br><br></br><br></br>----------------------<br></br>Populacao Historica UFs<br></br><br></br><font color="blue">let</font><br></br>    Fonte = <font color="purple">Web.BrowserContents</font>("http:<font color="green">//www.ipeadata.gov.br/ExibeSerieR.aspx?stub=1&serid=1678536198&MINDATA=1990&MAXDATA=2025&TNIVID=2&TPAID=1&module=R"),
</font>
    #<font color="red">"Tabela extraída de HTML"</font> = <font color="purple">Html.Table</font>(Fonte, {{<font color="red">"Column1"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(1)"}, {<font color="red">"Column2"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(2)"}, {<font color="red">"Column3"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(3)"}, {<font color="red">"Column4"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(4)"}, {<font color="red">"Column5"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(5)"}, {<font color="red">"Column6"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(6)"}, {<font color="red">"Column7"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(7)"}, {<font color="red">"Column8"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(8)"}}, [RowSelector="TABLE[id='grd_DXMainTable'] > * > TR"]),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Tabela extraída de HTML"</font>,{{<font color="red">"Column1"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column2"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column3"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column4"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column5"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column6"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column7"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column8"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Cabeçalhos Promovidos"</font> = <font color="purple">Table.PromoteHeaders</font>(#<font color="red">"Tipo Alterado"</font>, [PromoteAllScalars=<font color="blue">true</font>]),<br></br>    #<font color="red">"Tipo Alterado1"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Cabeçalhos Promovidos"</font>,{{<font color="red">"Sigla"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Estado"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"1991"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"1996"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2000"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2007"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2010"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2022"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Somente as Colunas Selecionadas Foram Transformadas em Linhas"</font> = <font color="purple">Table.Unpivot</font>(#<font color="red">"Tipo Alterado1"</font>, {<font color="red">"1991"</font>, <font color="red">"1996"</font>, <font color="red">"2000"</font>, <font color="red">"2007"</font>, <font color="red">"2010"</font>, <font color="red">"2022"</font>}, <font color="red">"Atributo"</font>, <font color="red">"Valor"</font>),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Somente as Colunas Selecionadas Foram Transformadas em Linhas"</font>,{{<font color="red">"Atributo"</font>, <font color="red">"Ano"</font>}, {<font color="red">"Valor"</font>, <font color="red">"População"</font>}, {<font color="red">"Sigla"</font>, <font color="red">"Sigla_UF"</font>}}),<br></br>    #<font color="red">"Tipo Alterado2"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Colunas Renomeadas"</font>,{{<font color="red">"População"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Ano"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Tipo Alterado2"</font>,{<font color="red">"Estado"</font>})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Colunas Removidas"</font><br></br><br></br><br></br>----------------------<br></br>FIN_PIB Estadual<br></br><br></br><font color="blue">let</font><br></br>    Fonte = <font color="purple">Web.BrowserContents</font>("http:<font color="green">//www.ipeadata.gov.br/ExibeSerieR.aspx?stub=1&serid=1540855420&MINDATA=2014&MAXDATA=2025&TNIVID=2&TPAID=1&module=R"),
</font>
    #<font color="red">"Tabela extraída de HTML"</font> = <font color="purple">Html.Table</font>(Fonte, {{<font color="red">"Column1"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(1)"}, {<font color="red">"Column2"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(2)"}, {<font color="red">"Column3"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(3)"}, {<font color="red">"Column4"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(4)"}, {<font color="red">"Column5"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(5)"}, {<font color="red">"Column6"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(6)"}, {<font color="red">"Column7"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(7)"}, {<font color="red">"Column8"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(8)"}, {<font color="red">"Column9"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(9)"}, {<font color="red">"Column10"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(10)"}}, [RowSelector="TABLE[id='grd_DXMainTable'] > * > TR"]),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Tabela extraída de HTML"</font>,{{<font color="red">"Column1"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column2"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column3"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column4"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column5"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column6"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column7"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column8"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column9"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column10"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Cabeçalhos Promovidos"</font> = <font color="purple">Table.PromoteHeaders</font>(#<font color="red">"Tipo Alterado"</font>, [PromoteAllScalars=<font color="blue">true</font>]),<br></br>    #<font color="red">"Tipo Alterado1"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Cabeçalhos Promovidos"</font>,{{<font color="red">"Sigla"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Estado"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"2014"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2015"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2016"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2017"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2018"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2019"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2020"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2021"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Somente as Colunas Selecionadas Foram Transformadas em Linhas"</font> = <font color="purple">Table.Unpivot</font>(#<font color="red">"Tipo Alterado1"</font>, {<font color="red">"2014"</font>, <font color="red">"2015"</font>, <font color="red">"2016"</font>, <font color="red">"2017"</font>, <font color="red">"2018"</font>, <font color="red">"2019"</font>, <font color="red">"2020"</font>, <font color="red">"2021"</font>}, <font color="red">"Atributo"</font>, <font color="red">"Valor"</font>),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Somente as Colunas Selecionadas Foram Transformadas em Linhas"</font>,{{<font color="red">"Atributo"</font>, <font color="red">"Ano"</font>}, {<font color="red">"Valor"</font>, <font color="red">"Valor PIB Estadual"</font>}, {<font color="red">"Sigla"</font>, <font color="red">"Sigla_UF"</font>}}),<br></br>    #<font color="red">"Tipo Alterado2"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Colunas Renomeadas"</font>,{{<font color="red">"Ano"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Colunas Renomeadas1"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Tipo Alterado2"</font>,{{<font color="red">"Valor PIB Estadual"</font>, <font color="red">"Valor PIB Estadual / 1000"</font>}}),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Colunas Renomeadas1"</font>,{<font color="red">"Estado"</font>})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Colunas Removidas"</font><br></br><br></br><br></br>----------------------<br></br>Territorios(ipea)<br></br><br></br><font color="blue">let</font><br></br>    Fonte = <font color="purple">Json.Document</font>(<font color="purple">Web.Contents</font>(<font color="red">"http:<font color="green">//www.ipeadata.gov.br/api/odata4/Territorios"</font>)),
</font>
    #<font color="red">"Convertido para Tabela"</font> = <font color="purple">Table.FromRecords</font>({Fonte}),<br></br>    #<font color="red">"value Expandido"</font> = <font color="purple">Table.ExpandListColumn</font>(#<font color="red">"Convertido para Tabela"</font>, <font color="red">"value"</font>),<br></br>    #<font color="red">"value Expandido1"</font> = <font color="purple">Table.ExpandRecordColumn</font>(#<font color="red">"value Expandido"</font>, <font color="red">"value"</font>, {<font color="red">"NIVNOME"</font>, <font color="red">"TERCODIGO"</font>, <font color="red">"TERNOME"</font>, <font color="red">"TERNOMEPADRAO"</font>, <font color="red">"TERCAPITAL"</font>, <font color="red">"TERAREA"</font>, <font color="red">"NIVAMC"</font>}, {<font color="red">"value.NIVNOME"</font>, <font color="red">"value.TERCODIGO"</font>, <font color="red">"value.TERNOME"</font>, <font color="red">"value.TERNOMEPADRAO"</font>, <font color="red">"value.TERCAPITAL"</font>, <font color="red">"value.TERAREA"</font>, <font color="red">"value.NIVAMC"</font>}),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"value Expandido1"</font>,{{<font color="red">"value.TERAREA"</font>, "Área do território (em km²)"}, {<font color="red">"value.TERCAPITAL"</font>, <font color="red">"CAPITAL"</font>}}),<br></br>    #<font color="red">"Linhas Filtradas"</font> = <font color="purple">Table.SelectRows</font>(#<font color="red">"Colunas Renomeadas"</font>, each ([value.NIVNOME] <> <font color="red">""</font> and [value.NIVNOME] <> "AMC 1872-00" and [value.NIVNOME] <> "AMC 20-00" and [value.NIVNOME] <> "AMC 40-00" and [value.NIVNOME] <> "AMC 60-00" and [value.NIVNOME] <> "AMC 70-00" and [value.NIVNOME] <> "AMC 91-00")),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Linhas Filtradas"</font>,{"@odata.context"}),<br></br>    #<font color="red">"Colunas Renomeadas1"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Colunas Removidas"</font>,{{<font color="red">"value.NIVNOME"</font>, <font color="red">"Tipo Regiao"</font>}, {<font color="red">"value.TERCODIGO"</font>, <font color="red">"Municipio_id"</font>}, {<font color="red">"value.TERNOME"</font>, <font color="red">"Município"</font>}}),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Colunas Renomeadas1"</font>,{{"Área do território (em km²)", <font color="blue">type</font> number}, {<font color="red">"Tipo Regiao"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Municipio_id"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Município"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"value.TERNOMEPADRAO"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"CAPITAL"</font>, <font color="blue">type</font> logical}, {<font color="red">"value.NIVAMC"</font>, <font color="blue">type</font> logical}}),<br></br>    #<font color="red">"Colunas Removidas1"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Tipo Alterado"</font>,{<font color="red">"value.NIVAMC"</font>}),<br></br>    #<font color="red">"Erros Removidos"</font> = <font color="purple">Table.RemoveRows</font>WithErrors(#<font color="red">"Colunas Removidas1"</font>, {<font color="red">"Municipio_id"</font>}),<br></br>    #<font color="red">"Linhas Filtradas1"</font> = <font color="purple">Table.SelectRows</font>(#<font color="red">"Erros Removidos"</font>, each ([Tipo Regiao] = <font color="red">"Estados"</font>)),<br></br>    #<font color="red">"Colunas Renomeadas2"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Linhas Filtradas1"</font>,{{<font color="red">"value.TERNOMEPADRAO"</font>, <font color="red">"TERNOMEPADRAO"</font>}}),<br></br>    #<font color="red">"Coluna Condicional Adicionada"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Colunas Renomeadas2"</font>, <font color="red">"Sigla_UF"</font>, each if [TERNOMEPADRAO] = <font color="red">"RONDONIA"</font> then <font color="red">"RO"</font> else if [TERNOMEPADRAO] = <font color="red">"ACRE"</font> then <font color="red">"AC"</font> else if [TERNOMEPADRAO] = <font color="red">"RORAIMA"</font> then <font color="red">"RR"</font> else if [TERNOMEPADRAO] = <font color="red">"PARA"</font> then <font color="red">"PA"</font> else if [TERNOMEPADRAO] = <font color="red">"TOCANTINS"</font> then <font color="red">"TO"</font> else if [TERNOMEPADRAO] = <font color="red">"MARANHAO"</font> then <font color="red">"MA"</font> else if [TERNOMEPADRAO] = <font color="red">"PIAUI"</font> then <font color="red">"PI"</font> else if [TERNOMEPADRAO] = <font color="red">"CEARA"</font> then <font color="red">"CE"</font> else if [TERNOMEPADRAO] = <font color="red">"RIO GRANDE DO NORTE"</font> then <font color="red">"RN"</font> else if [TERNOMEPADRAO] = <font color="red">"PARAIBA"</font> then <font color="red">"PB"</font> else if [TERNOMEPADRAO] = <font color="red">"PERNAMBUCO"</font> then <font color="red">"PE"</font> else if [TERNOMEPADRAO] = <font color="red">"ALAGOAS"</font> then <font color="red">"AL"</font> else if [TERNOMEPADRAO] = <font color="red">"SERGIPE"</font> then <font color="red">"SE"</font> else if [TERNOMEPADRAO] = <font color="red">"BAHIA"</font> then <font color="red">"BA"</font> else if [TERNOMEPADRAO] = <font color="red">"MINAS GERAIS"</font> then <font color="red">"MG"</font> else if [TERNOMEPADRAO] = <font color="red">"ESPIRITO SANTO"</font> then <font color="red">"ES"</font> else if [TERNOMEPADRAO] = <font color="red">"RIO DE JANEIRO"</font> then <font color="red">"RJ"</font> else if [TERNOMEPADRAO] = <font color="red">"SAO PAULO"</font> then <font color="red">"SP"</font> else if [TERNOMEPADRAO] = <font color="red">"PARANA"</font> then <font color="red">"PR"</font> else if [TERNOMEPADRAO] = <font color="red">"SANTA CATARINA"</font> then <font color="red">"SC"</font> else if [TERNOMEPADRAO] = <font color="red">"RIO GRANDE DO SUL"</font> then <font color="red">"RS"</font> else if [TERNOMEPADRAO] = <font color="red">"MATO GROSSO DO SUL"</font> then <font color="red">"MS"</font> else if [TERNOMEPADRAO] = <font color="red">"MATO GROSSO"</font> then <font color="red">"MT"</font> else if [TERNOMEPADRAO] = <font color="red">"GOIAS"</font> then <font color="red">"GO"</font> else if [TERNOMEPADRAO] = <font color="red">"DISTRITO FEDERAL"</font> then <font color="red">"DF"</font> else <font color="red">"AM"</font>, <font color="blue">type</font> <font color="blue">text</font>)<br></br><font color="blue">in</font><br></br>    #<font color="red">"Coluna Condicional Adicionada"</font><br></br><br></br><br></br>----------------------<br></br>SOC_IDHM_por_UF<br></br><br></br><font color="blue">let</font><br></br>    Fonte = <font color="purple">Web.BrowserContents</font>("http:<font color="green">//www.ipeadata.gov.br/ExibeSerieR.aspx?stub=1&serid=40037&MINDATA=2015&MAXDATA=2025&TNIVID=2&TPAID=1&module=S"),
</font>
    #<font color="red">"Tabela extraída de HTML"</font> = <font color="purple">Html.Table</font>(Fonte, {{<font color="red">"Column1"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(1)"}, {<font color="red">"Column2"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(2)"}, {<font color="red">"Column3"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(3)"}, {<font color="red">"Column4"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(4)"}, {<font color="red">"Column5"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(5)"}, {<font color="red">"Column6"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(6)"}, {<font color="red">"Column7"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(7)"}, {<font color="red">"Column8"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(8)"}, {<font color="red">"Column9"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(9)"}, {<font color="red">"Column10"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(10)"}, {<font color="red">"Column11"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(11)"}, {<font color="red">"Column12"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(12)"}, {<font color="red">"Column13"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(13)"}, {<font color="red">"Column14"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(14)"}, {<font color="red">"Column15"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(15)"}, {<font color="red">"Column16"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(16)"}, {<font color="red">"Column17"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(17)"}}, [RowSelector="TABLE[id='grd_DXMainTable'] > * > TR"]),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Tabela extraída de HTML"</font>,{{<font color="red">"Column1"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column2"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column3"</font>, <font color="blue">type</font> number}, {<font color="red">"Column4"</font>, <font color="blue">type</font> number}, {<font color="red">"Column5"</font>, <font color="blue">type</font> number}, {<font color="red">"Column6"</font>, <font color="blue">type</font> number}, {<font color="red">"Column7"</font>, <font color="blue">type</font> number}, {<font color="red">"Column8"</font>, <font color="blue">type</font> number}, {<font color="red">"Column9"</font>, <font color="blue">type</font> number}, {<font color="red">"Column10"</font>, <font color="blue">type</font> number}, {<font color="red">"Column11"</font>, <font color="blue">type</font> number}, {<font color="red">"Column12"</font>, <font color="blue">type</font> number}, {<font color="red">"Column13"</font>, <font color="blue">type</font> number}, {<font color="red">"Column14"</font>, <font color="blue">type</font> number}, {<font color="red">"Column15"</font>, <font color="blue">type</font> number}, {<font color="red">"Column16"</font>, <font color="blue">type</font> number}, {<font color="red">"Column17"</font>, <font color="blue">type</font> number}}),<br></br>    #<font color="red">"Cabeçalhos Promovidos"</font> = <font color="purple">Table.PromoteHeaders</font>(#<font color="red">"Tipo Alterado"</font>, [PromoteAllScalars=<font color="blue">true</font>]),<br></br>    #<font color="red">"Outras Colunas Não Dinâmicas"</font> = <font color="purple">Table.Unpivot</font>OtherColumns(#<font color="red">"Cabeçalhos Promovidos"</font>, {<font color="red">"Sigla"</font>, <font color="red">"Estado"</font>}, <font color="red">"Atributo"</font>, <font color="red">"Valor"</font>),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Outras Colunas Não Dinâmicas"</font>,{{<font color="red">"Valor"</font>, <font color="red">"IDHM_UF"</font>}, {<font color="red">"Atributo"</font>, <font color="red">"Ano"</font>}, {<font color="red">"Sigla"</font>, <font color="red">"Sigla_UF"</font>}}),<br></br>    #<font color="red">"Tipo Alterado2"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Colunas Renomeadas"</font>,{{<font color="red">"IDHM_UF"</font>, <font color="blue">type</font> number}}),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Tipo Alterado2"</font>,{<font color="red">"Estado"</font>})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Colunas Removidas"</font><br></br><br></br><br></br>----------------------<br></br>EDU_% Alunos na Rede Pública<br></br><br></br><font color="blue">let</font><br></br>    Fonte = <font color="purple">Web.BrowserContents</font>("http:<font color="green">//www.ipeadata.gov.br/ExibeSerieR.aspx?stub=1&serid=2096726958&MINDATA=2015&MAXDATA=2025&TNIVID=2&TPAID=1&module=S"),
</font>
    Séries1 = <font color="purple">Html.Table</font>(Fonte, {{<font color="red">"Column1"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(1)"}, {<font color="red">"Column2"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(2)"}, {<font color="red">"Column3"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(3)"}, {<font color="red">"Column4"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(4)"}, {<font color="red">"Column5"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(5)"}, {<font color="red">"Column6"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(6)"}, {<font color="red">"Column7"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(7)"}, {<font color="red">"Column8"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(8)"}}, [RowSelector="TABLE[id='grd_DXMainTable'] > * > TR"]),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(Séries1,{{<font color="red">"Column1"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column2"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column3"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column4"</font>, <font color="blue">type</font> number}, {<font color="red">"Column5"</font>, <font color="blue">type</font> number}, {<font color="red">"Column6"</font>, <font color="blue">type</font> number}, {<font color="red">"Column7"</font>, <font color="blue">type</font> number}, {<font color="red">"Column8"</font>, <font color="blue">type</font> number}}),<br></br>    #<font color="red">"Cabeçalhos Promovidos"</font> = <font color="purple">Table.PromoteHeaders</font>(#<font color="red">"Tipo Alterado"</font>, [PromoteAllScalars=<font color="blue">true</font>]),<br></br>    #<font color="red">"Tipo Alterado1"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Cabeçalhos Promovidos"</font>,{{<font color="red">"Sigla"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Estado"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"2017"</font>, <font color="blue">type</font> number}, {<font color="red">"2018"</font>, <font color="blue">type</font> number}, {<font color="red">"2019"</font>, <font color="blue">type</font> number}, {<font color="red">"2022"</font>, <font color="blue">type</font> number}, {<font color="red">"2023"</font>, <font color="blue">type</font> number}}),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Tipo Alterado1"</font>,{{<font color="red">"Sigla"</font>, <font color="red">"Sigla_UF"</font>}}),<br></br>    #<font color="red">"Somente as Colunas Selecionadas Foram Transformadas em Linhas"</font> = <font color="purple">Table.Unpivot</font>(#<font color="red">"Colunas Renomeadas"</font>, {<font color="red">"2016"</font>, <font color="red">"2017"</font>, <font color="red">"2018"</font>, <font color="red">"2019"</font>, <font color="red">"2022"</font>, <font color="red">"2023"</font>}, <font color="red">"Atributo"</font>, <font color="red">"Valor"</font>),<br></br>    #<font color="red">"Tipo Alterado3"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Somente as Colunas Selecionadas Foram Transformadas em Linhas"</font>,{{<font color="red">"Valor"</font>, <font color="blue">type</font> number}}),<br></br>    #<font color="red">"Colunas Renomeadas1"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Tipo Alterado3"</font>,{{<font color="red">"Valor"</font>, "Valor(%)"}, {<font color="red">"Atributo"</font>, <font color="red">"Ano"</font>}}),<br></br>    #<font color="red">"Tipo Alterado2"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Colunas Renomeadas1"</font>,{{<font color="red">"Ano"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Data Inserida"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tipo Alterado2"</font>, <font color="red">"Ano_Data"</font>, each <font color="purple">Date.From</font>(<font color="purple">Text.From</font>([Ano], "pt-BR")), <font color="blue">type</font> <font color="blue">date</font>),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Data Inserida"</font>,{<font color="red">"Estado"</font>})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Colunas Removidas"</font><br></br><br></br><br></br>----------------------<br></br>Governadores (wikimedia)<br></br><br></br><font color="blue">let</font><br></br>    Fonte = <font color="purple">Web.BrowserContents</font>(<font color="red">"https:<font color="green">//www.wikiwand.com/pt/Lista_de_governadores_das_unidades_federativas_do_Brasil"</font>),
</font>
    #<font color="red">"Tabela extraída de HTML"</font> = <font color="purple">Html.Table</font>(Fonte, {{<font color="red">"Column1"</font>, "TH + TD + *"}, {<font color="red">"Column2"</font>, "BR:nth-child(2) + A"}, {<font color="red">"Column3"</font>, ".pcs-collapse-table-container B"}, {<font color="red">"Column4"</font>, "TD:nth-child(6)"}, {<font color="red">"Column5"</font>, <font color="red">"SMALL A"</font>}, {<font color="red">"Column6"</font>, ".pcs-collapse-table-container B *"}, {<font color="red">"Column7"</font>, "TD:nth-child(6) A"}, {<font color="red">"Column8"</font>, "B + BR + *"}, {<font color="red">"Column9"</font>, "TD:nth-child(1) A:nth-child(2)"}, {<font color="red">"Column10"</font>, "P SMALL *"}, {<font color="red">"Column11"</font>, "TD .mw-redirect"}, {<font color="red">"Column12"</font>, ".default-touch-area .mw-reflink-<font color="blue">text</font>"}, {<font color="red">"Column13"</font>, "B + P SMALL"}, {<font color="red">"Column14"</font>, "BR + .<font color="blue">date</font> *"}, {<font color="red">"Column15"</font>, ".right-touch-area .mw-reflink-<font color="blue">text</font>"}, {<font color="red">"Column16"</font>, "TD:nth-child(4) .<font color="blue">date</font>:nth-child(3)"}, {<font color="red">"Column17"</font>, "TD:nth-child(4) SMALL"}}, [RowSelector="BR:nth-child(2) + A"]),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Tabela extraída de HTML"</font>,{{<font color="red">"Column1"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column2"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column3"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column4"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column5"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column6"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column7"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column8"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column9"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column10"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column11"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column12"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column13"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column14"</font>, <font color="blue">type</font> <font color="blue">date</font>}, {<font color="red">"Column15"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column16"</font>, <font color="blue">type</font> <font color="blue">date</font>}, {<font color="red">"Column17"</font>, <font color="blue">type</font> <font color="blue">text</font>}}),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Tipo Alterado"</font>,{<font color="red">"Column11"</font>, <font color="red">"Column12"</font>, <font color="red">"Column13"</font>, <font color="red">"Column14"</font>, <font color="red">"Column15"</font>, <font color="red">"Column16"</font>, <font color="red">"Column17"</font>, <font color="red">"Column7"</font>, <font color="red">"Column8"</font>, <font color="red">"Column9"</font>, <font color="red">"Column10"</font>, <font color="red">"Column5"</font>, <font color="red">"Column6"</font>}),<br></br>    #<font color="red">"Coluna Condicional Adicionada1"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Colunas Removidas"</font>, <font color="red">"Sigla_UF"</font>, each if [Column2] = <font color="red">"Acre"</font> then <font color="red">"AC"</font> else if [Column2] = <font color="red">"Alagoas"</font> then <font color="red">"AL"</font> else if [Column2] = <font color="red">"Amapá"</font> then <font color="red">"AP"</font> else if [Column2] = <font color="red">"Amazonas"</font> then <font color="red">"AM"</font> else if [Column2] = <font color="red">"Bahia"</font> then <font color="red">"BA"</font> else if [Column2] = <font color="red">"Ceará"</font> then <font color="red">"CE"</font> else if [Column2] = <font color="red">"Distrito Federal"</font> then <font color="red">"DF"</font> else if [Column2] = <font color="red">"Espírito Santo"</font> then <font color="red">"ES"</font> else if [Column2] = <font color="red">"Goiás"</font> then <font color="red">"GO"</font> else if [Column2] = <font color="red">"Maranhão"</font> then <font color="red">"MA"</font> else if [Column2] = <font color="red">"Mato Grosso do Sul"</font> then <font color="red">"MS"</font> else if [Column2] = <font color="red">"Pará"</font> then <font color="red">"PA"</font> else if [Column2] = <font color="red">"Paraíba"</font> then <font color="red">"PB"</font> else if [Column2] = <font color="red">"Paraná"</font> then <font color="red">"PR"</font> else if [Column2] = <font color="red">"Pernambuco"</font> then <font color="red">"PE"</font> else if [Column2] = <font color="red">"Piauí"</font> then <font color="red">"PI"</font> else if [Column2] = <font color="red">"Rio de Janeiro"</font> then <font color="red">"RJ"</font> else if [Column2] = <font color="red">"Rio Grande do Norte"</font> then <font color="red">"RN"</font> else if [Column2] = <font color="red">"Rio Grande do Sul"</font> then <font color="red">"RS"</font> else if [Column2] = <font color="red">"Rondônia"</font> then <font color="red">"RO"</font> else if [Column2] = <font color="red">"Roraima"</font> then <font color="red">"RR"</font> else if [Column2] = <font color="red">"Santa Catarina"</font> then <font color="red">"SC"</font> else if [Column2] = <font color="red">"São Paulo"</font> then <font color="red">"SP"</font> else if [Column2] = <font color="red">"Sergipe"</font> then <font color="red">"SE"</font> else if [Column2] = <font color="red">"Tocantins"</font> then <font color="red">"TO"</font> else <font color="red">"MG"</font>, <font color="blue">type</font> <font color="blue">text</font>),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Coluna Condicional Adicionada1"</font>,{{<font color="red">"Column1"</font>, "Nome Fanta - Nome"}, {<font color="red">"Column2"</font>, <font color="red">"Nome_UF"</font>}, {<font color="red">"Column3"</font>, <font color="red">"Nome"</font>}, {<font color="red">"Column4"</font>, <font color="red">"Mandato"</font>}}),<br></br>    #<font color="red">"Coluna Condicional Adicionada2"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Colunas Renomeadas"</font>, <font color="red">"Personalizar"</font>, each if [Nome] = <font color="red">"Gladson Cameli"</font> then "https:<font color="green">//upload.wikimedia.org/wikipedia/commons/thumb/f/f0/Retrato_oficial_Gladson_Cameli_2019.jpg/225px-Retrato_oficial_Gladson_Cameli_2019.jpg" else if [Nome] = <font color="red">"Paulo Dantas"</font> then "https://upload.wikimedia.org/wikipedia/commons/thumb/6/63/Paulo_Dantas_-_Deputado_Estadual_%28cropped%29.jpg/224px-Paulo_Dantas_-_Deputado_Estadual_%28cropped%29.jpg" else if [Nome] = <font color="red">"Clécio Luis"</font> then "https://upload.wikimedia.org/wikipedia/commons/thumb/a/ab/Cl%C3%A9cio_Luis_em_fevereiro_de_2018_%282%29.jpg/225px-Cl%C3%A9cio_Luis_em_fevereiro_de_2018_%282%29.jpg" else if [Nome] = <font color="red">"Wilson Lima"</font> then "https://upload.wikimedia.org/wikipedia/commons/thumb/c/cd/Wilson_Miranda_Lima.jpg/225px-Wilson_Miranda_Lima.jpg" else if [Nome] = <font color="red">"Jerônimo Rodrigues"</font> then "https://upload.wikimedia.org/wikipedia/commons/thumb/8/8c/18_01_2023_-_Visita_de_Cortesia_Jer%C3%B4nimo_Rodrigues_%28Governador_do_Estado_da_Bahia-BA%29_%2852635213362%29_%28cropped%29.jpg/225px-18_01_2023_-_Visita_de_Cortesia_Jer%C3%B4nimo_Rodrigues_%28Governador_do_Estado_da_Bahia-BA%29_%2852635213362%29_%28cropped%29.jpg" else if [Nome] = <font color="red">"Elmano de Freitas"</font> then "https://upload.wikimedia.org/wikipedia/commons/thumb/a/a1/Elmano_de_Freitas_2023.jpg/236px-Elmano_de_Freitas_2023.jpg" else if [Nome] = <font color="red">"Ibaneis Rocha"</font> then "https://upload.wikimedia.org/wikipedia/commons/thumb/e/eb/Ibaneis_posse_no_Buriti_-_Foto_Divulga%C3%A7%C3%A3o_GDF_%2839740238043%29.jpg/190px-Ibaneis_posse_no_Buriti_-_Foto_Divulga%C3%A7%C3%A3o_GDF_%2839740238043%29.jpg" else if [Nome] = <font color="red">"Renato Casagrande"</font> then "https://upload.wikimedia.org/wikipedia/commons/thumb/7/7f/Renato_Casagrande_em_mar%C3%A7o_de_2019.jpg/225px-Renato_Casagrande_em_mar%C3%A7o_de_2019.jpg" else if [Nome] = <font color="red">"Ronaldo Caiado"</font> then "https://upload.wikimedia.org/wikipedia/commons/thumb/2/27/Ronaldo_Caiado_%28cropped%29.jpg/224px-Ronaldo_Caiado_%28cropped%29.jpg" else if [Nome] = <font color="red">"Carlos Brandão Júnior"</font> then "https://upload.wikimedia.org/wikipedia/commons/thumb/1/1b/Retrato_Oficial_de_Carlos_Brand%C3%A3o_como_governador_do_Maranh%C3%A3o.jpg/230px-Retrato_Oficial_de_Carlos_Brand%C3%A3o_como_governador_do_Maranh%C3%A3o.jpg" else if [Nome] = <font color="red">"Mauro Mendes"</font> then "https://upload.wikimedia.org/wikipedia/commons/thumb/7/7a/Mauro_Mendes_como_governador_do_Mato_Grosso.jpg/225px-Mauro_Mendes_como_governador_do_Mato_Grosso.jpg" else if [Nome] = <font color="red">"Eduardo Riedel"</font> then "https://upload.wikimedia.org/wikipedia/commons/thumb/3/35/Retrato_do_Governador_Eduardo_Riedel.jpg/240px-Retrato_do_Governador_Eduardo_Riedel.jpg" else if [Nome] = <font color="red">"Romeu Zema"</font> then "https://upload.wikimedia.org/wikipedia/commons/thumb/8/8d/Romeu_Zema_em_fevereiro_de_2019.jpg/225px-Romeu_Zema_em_fevereiro_de_2019.jpg" else if [Nome] = <font color="red">"Helder Barbalho"</font> then "https://upload.wikimedia.org/wikipedia/commons/thumb/9/9f/DSC_8092_%2852992242395%29_%28cropped%29.jpg/225px-DSC_8092_%2852992242395%29_%28cropped%29.jpg" else if [Nome] = <font color="red">"João Azevêdo"</font> then "https://upload.wikimedia.org/wikipedia/commons/thumb/b/b7/Jo%C3%A3o_Azev%C3%AAdo_em_abril_de_2019.jpg/225px-Jo%C3%A3o_Azev%C3%AAdo_em_abril_de_2019.jpg" else if [Nome] = <font color="red">"Ratinho Júnior"</font> then "https://upload.wikimedia.org/wikipedia/commons/thumb/d/db/Ratinho_J%C3%BAnior_em_fevereiro_de_2019.jpg/225px-Ratinho_J%C3%BAnior_em_fevereiro_de_2019.jpg" else if [Nome] = <font color="red">"Raquel Lyra"</font> then "https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/RL45_14-09.jpg/225px-RL45_14-09.jpg" else if [Nome] = <font color="red">"Rafael Fonteles"</font> then "https://upload.wikimedia.org/wikipedia/commons/thumb/3/30/Rafael_Tajra_Fonteles%2C_presidente_do_Comsefaz_%28cropped%29.jpg/225px-Rafael_Tajra_Fonteles%2C_presidente_do_Comsefaz_%28cropped%29.jpg" else if [Nome] = <font color="red">"Cláudio Castro"</font> then "https://upload.wikimedia.org/wikipedia/commons/thumb/c/c0/Claudio_Castro_como_Vice_Governador_do_Rio_de_Janeiro.jpg/225px-Claudio_Castro_como_Vice_Governador_do_Rio_de_Janeiro.jpg" else if [Nome] = <font color="red">"Fátima Bezerra"</font> then "https://upload.wikimedia.org/wikipedia/commons/thumb/f/fe/F%C3%A1tima_Bezerra_como_governadora_do_Rio_Grande_do_Norte.png/225px-F%C3%A1tima_Bezerra_como_governadora_do_Rio_Grande_do_Norte.png" else if [Nome] = <font color="red">"Eduardo Leite"</font> then "https://upload.wikimedia.org/wikipedia/commons/thumb/3/3b/Eduardo_Leite_no_Pal%C3%A1cio_Piratini_em_mar%C3%A7o_de_2019.jpg/225px-Eduardo_Leite_no_Pal%C3%A1cio_Piratini_em_mar%C3%A7o_de_2019.jpg" else if [Nome] = <font color="red">"Marcos Rocha"</font> then "https://upload.wikimedia.org/wikipedia/commons/thumb/9/91/Desfile_de_7_de_Setembro_08.09.22_Foto_Daiane_Mendon%C3%A7a_%28384%29_%2852342537421%29_%28cropped%29.jpg/225px-Desfile_de_7_de_Setembro_08.09.22_Foto_Daiane_Mendon%C3%A7a_%28384%29_%2852342537421%29_%28cropped%29.jpg" else if [Nome] = <font color="red">"Antonio Denarium"</font> then "https://upload.wikimedia.org/wikipedia/commons/thumb/d/d0/Foto_Governador_Antonio_Denarium.jpg/225px-Foto_Governador_Antonio_Denarium.jpg" else if [Nome] = <font color="red">"Jorginho Mello"</font> then "https://upload.wikimedia.org/wikipedia/commons/thumb/c/ce/Senador_Jorginho_Mello_%28cropped%29.jpg/225px-Senador_Jorginho_Mello_%28cropped%29.jpg" else if [Nome] = <font color="red">"Tarcísio de Freitas"</font> then "https://upload.wikimedia.org/wikipedia/commons/thumb/7/74/Governador_do_Estado_de_S%C3%A3o_Paulo%2C_Tarc%C3%ADsio_de_Freitas_-_Foto_Oficial_%28cropped%29.jpg/225px-Governador_do_Estado_de_S%C3%A3o_Paulo%2C_Tarc%C3%ADsio_de_Freitas_-_Foto_Oficial_%28cropped%29.jpg" else if [Nome] = <font color="red">"Fábio Mitidieri"</font> then "https://upload.wikimedia.org/wikipedia/commons/thumb/4/49/F%C3%A1bio_Mitidieri_em_dezembro_de_2016.jpg/226px-F%C3%A1bio_Mitidieri_em_dezembro_de_2016.jpg" else if [Nome] = <font color="red">"Wanderlei Barbosa"</font> then "https://upload.wikimedia.org/wikipedia/commons/thumb/6/6d/Wanderlei_Barbosa_como_governador_do_Tocantins.jpg/225px-Wanderlei_Barbosa_como_governador_do_Tocantins.jpg" else <font color="blue">null</font>, <font color="blue">type</font> <font color="blue">text</font>),
</font>
    #<font color="red">"Colunas Renomeadas1"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Coluna Condicional Adicionada2"</font>,{{<font color="red">"Personalizar"</font>, <font color="red">"Foto"</font>}}),<br></br>    #<font color="red">"Coluna Condicional Adicionada"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Colunas Renomeadas1"</font>, <font color="red">"Partido"</font>, each if [Nome] = <font color="red">"Gladson Cameli"</font> then <font color="red">"PP"</font> else if [Nome] = <font color="red">"Paulo Dantas"</font> then <font color="red">"MDB"</font> else if [Nome] = <font color="red">"Clécio Luis"</font> then <font color="red">"SOLIDARIEDADE"</font> else if [Nome] = <font color="red">"Wilson Lima"</font> then <font color="red">"UNIÃO"</font> else if [Nome] = <font color="red">"Jerônimo Rodrigues"</font> then <font color="red">"PT"</font> else if [Nome] = <font color="red">"Elmano de Freitas"</font> then <font color="red">"PT"</font> else if [Nome] = <font color="red">"Ibaneis Rocha"</font> then <font color="red">"MDB"</font> else if [Nome] = <font color="red">"Renato Casagrande"</font> then <font color="red">"PSB"</font> else if [Nome] = <font color="red">"Ronaldo Caiado"</font> then <font color="red">"UNIÃO"</font> else if [Nome] = <font color="red">"Carlos Brandão Júnior"</font> then <font color="red">"PSB"</font> else if [Nome] = <font color="red">"Mauro Mendes"</font> then <font color="red">"UNIÃO"</font> else if [Nome] = <font color="red">"Eduardo Riedel"</font> then <font color="red">"PSDB"</font> else if [Nome] = <font color="red">"Romeu Zema"</font> then <font color="red">"NOVO"</font> else if [Nome] = <font color="red">"Helder Barbalho"</font> then <font color="red">"MDB"</font> else if [Nome] = <font color="red">"João Azevêdo"</font> then <font color="red">"PSB"</font> else if [Nome] = <font color="red">"Ratinho Júnior"</font> then <font color="red">"PSB"</font> else if [Nome] = <font color="red">"Raquel Lyra"</font> then <font color="red">"PSDB"</font> else if [Nome] = <font color="red">"Rafael Fonteles"</font> then <font color="red">"PT"</font> else if [Nome] = <font color="red">"Cláudio Castro"</font> then <font color="red">"PL"</font> else if [Nome] = <font color="red">"Fátima Bezerra"</font> then <font color="red">"PT"</font> else if [Nome] = <font color="red">"Eduardo Leite"</font> then <font color="red">"PSDB"</font> else if [Nome] = <font color="red">"Marcos Rocha"</font> then <font color="red">"UNIÃO"</font> else if [Nome] = <font color="red">"Antonio Denarium"</font> then <font color="red">"PP"</font> else if [Nome] = <font color="red">"Jorginho Mello"</font> then <font color="red">"PL"</font> else if [Nome] = <font color="red">"Tarcísio de Freitas"</font> then <font color="red">"REPUBLICANOS"</font> else if [Nome] = <font color="red">"Fábio Mitidieri"</font> then <font color="red">"PSD"</font> else if [Nome] = <font color="red">"Wanderlei Barbosa"</font> then <font color="red">"REPUBLICANOS"</font> else <font color="blue">null</font>, <font color="blue">type</font> <font color="blue">text</font>),<br></br>    #<font color="red">"Colunas Renomeadas2"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Coluna Condicional Adicionada"</font>,{{<font color="red">"Sigla_UF"</font>, <font color="red">"Sigla"</font>}}),<br></br>    #<font color="red">"Coluna Condicional Adicionada3"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Colunas Renomeadas2"</font>, <font color="red">"Sigla_UF"</font>, each if [Nome_UF] = <font color="red">"Acre"</font> then <font color="red">"AC"</font> else if [Nome_UF] = <font color="red">"Alagoas"</font> then <font color="red">"AL"</font> else if [Nome_UF] = <font color="red">"Amapá"</font> then <font color="red">"AP"</font> else if [Nome_UF] = <font color="red">"Amazonas"</font> then <font color="red">"AM"</font> else if [Nome_UF] = <font color="red">"Bahia"</font> then <font color="red">"BA"</font> else if [Nome_UF] = <font color="red">"Ceará"</font> then <font color="red">"CE"</font> else if [Nome_UF] = <font color="red">"Distrito Federal"</font> then <font color="red">"DF"</font> else if [Nome_UF] = <font color="red">"Espírito Santo"</font> then <font color="red">"ES"</font> else if [Nome_UF] = <font color="red">"Goiás"</font> then <font color="red">"GO"</font> else if [Nome_UF] = <font color="red">"Maranhão"</font> then <font color="red">"MA"</font> else if [Nome_UF] = <font color="red">"Mato Grosso"</font> then <font color="red">"MT"</font> else if [Nome_UF] = <font color="red">"Mato Grosso do Sul"</font> then <font color="red">"MS"</font> else if [Nome_UF] = <font color="red">"Minas Gerais"</font> then <font color="red">"MG"</font> else if [Nome_UF] = <font color="red">"Pará"</font> then <font color="red">"PA"</font> else if [Nome_UF] = <font color="red">"Paraíba"</font> then <font color="red">"PB"</font> else if [Nome_UF] = <font color="red">"Paraná"</font> then <font color="red">"PR"</font> else if [Nome_UF] = <font color="red">"Pernambuco"</font> then <font color="red">"PE"</font> else if [Nome_UF] = <font color="red">"Piauí"</font> then <font color="red">"PI"</font> else if [Nome_UF] = <font color="red">"Rio de Janeiro"</font> then <font color="red">"RJ"</font> else if [Nome_UF] = <font color="red">"Rio Grande do Norte"</font> then <font color="red">"RN"</font> else if [Nome_UF] = <font color="red">"Rio Grande do Sul"</font> then <font color="red">"RS"</font> else if [Nome_UF] = <font color="red">"Rondônia"</font> then <font color="red">"RO"</font> else if [Nome_UF] = <font color="red">"Roraima"</font> then <font color="red">"RR"</font> else if [Nome_UF] = <font color="red">"Santa Catarina"</font> then <font color="red">"SC"</font> else if [Nome_UF] = <font color="red">"São Paulo"</font> then <font color="red">"SP"</font> else if [Nome_UF] = <font color="red">"Sergipe"</font> then <font color="red">"SE"</font> else if [Nome_UF] = <font color="red">"Tocantins"</font> then <font color="red">"TO"</font> else <font color="blue">null</font>, <font color="blue">type</font> <font color="blue">text</font>),<br></br>    #<font color="red">"Colunas Reordenadas"</font> = <font color="purple">Table.ReorderColumns</font>(#<font color="red">"Coluna Condicional Adicionada3"</font>,{"Nome Fanta - Nome<font color="red">", "</font>Nome_UF<font color="red">", "</font>Nome<font color="red">", "</font>Mandato<font color="red">", "</font>Sigla<font color="red">", "</font>Sigla_UF<font color="red">", "</font>Foto<font color="red">", "</font>Partido"}),<br></br>    #<font color="red">"Colunas Removidas1"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Colunas Reordenadas"</font>,{<font color="red">"Sigla"</font>}),<br></br>    #<font color="red">"Coluna Condicional Adicionada4"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Colunas Removidas1"</font>, <font color="red">"No governo desde "</font>, each if [Mandato] = "1  (2018)" then 2018 else 2022, <font color="blue">type</font> number)<br></br><font color="blue">in</font><br></br>    #<font color="red">"Coluna Condicional Adicionada4"</font><br></br><br></br><br></br>----------------------<br></br>SOC_Taxa de desemprego (IBGE - Continua)<br></br><br></br><font color="blue">let</font><br></br>    Fonte = <font color="purple">Excel.Workbook</font>(<font color="purple">File.Contents</font>("C:\Users\jan_e\OneDrive\!!Painel Politicos x Estados - PWBI\Taxa de desemprego (IBGE - Continua).xls"), <font color="blue">null</font>, <font color="blue">true</font>),<br></br>    Séries1 = Fonte{[Name=<font color="red">"Séries"</font>]}[Data],<br></br>    #<font color="red">"Cabeçalhos Promovidos"</font> = <font color="purple">Table.PromoteHeaders</font>(Séries1, [PromoteAllScalars=<font color="blue">true</font>]),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Cabeçalhos Promovidos"</font>,{{<font color="red">"Sigla"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Codigo"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Estado"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"2014 T1"</font>, <font color="blue">type</font> number}, {<font color="red">"2014 T2"</font>, <font color="blue">type</font> number}, {<font color="red">"2014 T3"</font>, <font color="blue">type</font> number}, {<font color="red">"2014 T4"</font>, <font color="blue">type</font> number}, {<font color="red">"2015 T1"</font>, <font color="blue">type</font> number}, {<font color="red">"2015 T2"</font>, <font color="blue">type</font> number}, {<font color="red">"2015 T3"</font>, <font color="blue">type</font> number}, {<font color="red">"2015 T4"</font>, <font color="blue">type</font> number}, {<font color="red">"2016 T1"</font>, <font color="blue">type</font> number}, {<font color="red">"2016 T2"</font>, <font color="blue">type</font> number}, {<font color="red">"2016 T3"</font>, <font color="blue">type</font> number}, {<font color="red">"2016 T4"</font>, <font color="blue">type</font> number}, {<font color="red">"2017 T1"</font>, <font color="blue">type</font> number}, {<font color="red">"2017 T2"</font>, <font color="blue">type</font> number}, {<font color="red">"2017 T3"</font>, <font color="blue">type</font> number}, {<font color="red">"2017 T4"</font>, <font color="blue">type</font> number}, {<font color="red">"2018 T1"</font>, <font color="blue">type</font> number}, {<font color="red">"2018 T2"</font>, <font color="blue">type</font> number}, {<font color="red">"2018 T3"</font>, <font color="blue">type</font> number}, {<font color="red">"2018 T4"</font>, <font color="blue">type</font> number}, {<font color="red">"2019 T1"</font>, <font color="blue">type</font> number}, {<font color="red">"2019 T2"</font>, <font color="blue">type</font> number}, {<font color="red">"2019 T3"</font>, <font color="blue">type</font> number}, {<font color="red">"2019 T4"</font>, <font color="blue">type</font> number}, {<font color="red">"2020 T1"</font>, <font color="blue">type</font> number}, {<font color="red">"2020 T2"</font>, <font color="blue">type</font> number}, {<font color="red">"2020 T3"</font>, <font color="blue">type</font> number}, {<font color="red">"2020 T4"</font>, <font color="blue">type</font> number}, {<font color="red">"2021 T1"</font>, <font color="blue">type</font> number}, {<font color="red">"2021 T2"</font>, <font color="blue">type</font> number}, {<font color="red">"2021 T3"</font>, <font color="blue">type</font> number}, {<font color="red">"2021 T4"</font>, <font color="blue">type</font> number}, {<font color="red">"2022 T1"</font>, <font color="blue">type</font> number}, {<font color="red">"2022 T2"</font>, <font color="blue">type</font> number}, {<font color="red">"2022 T3"</font>, <font color="blue">type</font> number}, {<font color="red">"2022 T4"</font>, <font color="blue">type</font> number}, {<font color="red">"2023 T1"</font>, <font color="blue">type</font> number}, {<font color="red">"2023 T2"</font>, <font color="blue">type</font> number}, {<font color="red">"2023 T3"</font>, <font color="blue">type</font> number}, {<font color="red">"2023 T4"</font>, <font color="blue">type</font> number}, {<font color="red">"2024 T1"</font>, <font color="blue">type</font> number}}),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Tipo Alterado"</font>,{{<font color="red">"Sigla"</font>, <font color="red">"Sigla_UF"</font>}}),<br></br>    #<font color="red">"Somente as Colunas Selecionadas Foram Transformadas em Linhas"</font> = <font color="purple">Table.Unpivot</font>(#<font color="red">"Colunas Renomeadas"</font>, {<font color="red">"2014 T1"</font>, <font color="red">"2014 T2"</font>, <font color="red">"2014 T3"</font>, <font color="red">"2014 T4"</font>, <font color="red">"2015 T1"</font>, <font color="red">"2015 T2"</font>, <font color="red">"2015 T3"</font>, <font color="red">"2015 T4"</font>, <font color="red">"2016 T1"</font>, <font color="red">"2016 T2"</font>, <font color="red">"2016 T3"</font>, <font color="red">"2016 T4"</font>, <font color="red">"2017 T1"</font>, <font color="red">"2017 T2"</font>, <font color="red">"2017 T3"</font>, <font color="red">"2017 T4"</font>, <font color="red">"2018 T1"</font>, <font color="red">"2018 T2"</font>, <font color="red">"2018 T3"</font>, <font color="red">"2018 T4"</font>, <font color="red">"2019 T1"</font>, <font color="red">"2019 T2"</font>, <font color="red">"2019 T3"</font>, <font color="red">"2019 T4"</font>, <font color="red">"2020 T1"</font>, <font color="red">"2020 T2"</font>, <font color="red">"2020 T3"</font>, <font color="red">"2020 T4"</font>, <font color="red">"2021 T1"</font>, <font color="red">"2021 T2"</font>, <font color="red">"2021 T3"</font>, <font color="red">"2021 T4"</font>, <font color="red">"2022 T1"</font>, <font color="red">"2022 T2"</font>, <font color="red">"2022 T3"</font>, <font color="red">"2022 T4"</font>, <font color="red">"2023 T1"</font>, <font color="red">"2023 T2"</font>, <font color="red">"2023 T3"</font>, <font color="red">"2023 T4"</font>, <font color="red">"2024 T1"</font>}, <font color="red">"Atributo"</font>, <font color="red">"Valor"</font>),<br></br>    #<font color="red">"Colunas Renomeadas1"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Somente as Colunas Selecionadas Foram Transformadas em Linhas"</font>,{{<font color="red">"Atributo"</font>, <font color="red">"Periodo"</font>}, {<font color="red">"Valor"</font>, "Taxa Desemprego %"}}),<br></br>    #<font color="red">"Coluna Duplicada"</font> = <font color="purple">Table.DuplicateColumn</font>(#<font color="red">"Colunas Renomeadas1"</font>, <font color="red">"Periodo"</font>, "Periodo - Copiar"),<br></br>    #<font color="red">"Colunas Renomeadas2"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Coluna Duplicada"</font>,{{"Periodo - Copiar<font color="red">", "</font>Trimestres"}}),<br></br>    #<font color="red">"Valor Substituído"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Colunas Renomeadas2"</font>,<font color="red">" T1"</font>,<font color="red">"/01/01"</font>,<font color="purple">Replacer.ReplaceText</font>,{<font color="red">"Trimestres"</font>}),<br></br>    #<font color="red">"Valor Substituído1"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Valor Substituído"</font>,<font color="red">" T2"</font>,<font color="red">"/04/01"</font>,<font color="purple">Replacer.ReplaceText</font>,{<font color="red">"Trimestres"</font>}),<br></br>    #<font color="red">"Valor Substituído2"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Valor Substituído1"</font>,<font color="red">" T3"</font>,<font color="red">"/07/01"</font>,<font color="purple">Replacer.ReplaceText</font>,{<font color="red">"Trimestres"</font>}),<br></br>    #<font color="red">"Valor Substituído3"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Valor Substituído2"</font>,<font color="red">" T4"</font>,<font color="red">"/10/01"</font>,<font color="purple">Replacer.ReplaceText</font>,{<font color="red">"Trimestres"</font>}),<br></br>    #<font color="red">"Tipo Alterado1"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Valor Substituído3"</font>,{{<font color="red">"Trimestres"</font>, <font color="blue">type</font> datetime}}),<br></br>    #<font color="red">"Ano Inserido"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tipo Alterado1"</font>, <font color="red">"Ano"</font>, each <font color="purple">Date.Year</font>([Trimestres]), <font color="purple">Int64.Type</font>),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Ano Inserido"</font>,{<font color="red">"Estado"</font>})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Colunas Removidas"</font><br></br><br></br><br></br>----------------------<br></br>SAU_Estabelecimento de saude(DataSUS)<br></br><br></br><font color="blue">let</font><br></br>    Fonte = <font color="purple">Web.BrowserContents</font>("http:<font color="green">//www.ipeadata.gov.br/ExibeSerieR.aspx?stub=1&serid=2096726972&MINDATA=2015&MAXDATA=2025&TNIVID=2&TPAID=1&module=S"),
</font>
    #<font color="red">"Tabela extraída de HTML"</font> = <font color="purple">Html.Table</font>(Fonte, {{<font color="red">"Column1"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(1)"}, {<font color="red">"Column2"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(2)"}, {<font color="red">"Column3"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(3)"}, {<font color="red">"Column4"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(4)"}, {<font color="red">"Column5"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(5)"}, {<font color="red">"Column6"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(6)"}, {<font color="red">"Column7"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(7)"}, {<font color="red">"Column8"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(8)"}, {<font color="red">"Column9"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(9)"}, {<font color="red">"Column10"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(10)"}, {<font color="red">"Column11"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(11)"}}, [RowSelector="TABLE[id='grd_DXMainTable'] > * > TR"]),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Tabela extraída de HTML"</font>,{{<font color="red">"Column1"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column2"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column3"</font>, <font color="blue">type</font> number}, {<font color="red">"Column4"</font>, <font color="blue">type</font> number}, {<font color="red">"Column5"</font>, <font color="blue">type</font> number}, {<font color="red">"Column6"</font>, <font color="blue">type</font> number}, {<font color="red">"Column7"</font>, <font color="blue">type</font> number}, {<font color="red">"Column8"</font>, <font color="blue">type</font> number}, {<font color="red">"Column9"</font>, <font color="blue">type</font> number}, {<font color="red">"Column10"</font>, <font color="blue">type</font> number}, {<font color="red">"Column11"</font>, <font color="blue">type</font> number}}),<br></br>    #<font color="red">"Cabeçalhos Promovidos"</font> = <font color="purple">Table.PromoteHeaders</font>(#<font color="red">"Tipo Alterado"</font>, [PromoteAllScalars=<font color="blue">true</font>]),<br></br>    #<font color="red">"Outras Colunas Não Dinâmicas"</font> = <font color="purple">Table.Unpivot</font>OtherColumns(#<font color="red">"Cabeçalhos Promovidos"</font>, {<font color="red">"Sigla"</font>, <font color="red">"Estado"</font>}, <font color="red">"Atributo"</font>, <font color="red">"Valor"</font>),<br></br>    #<font color="red">"Tipo Alterado2"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Outras Colunas Não Dinâmicas"</font>,{{<font color="red">"Atributo"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Tipo Alterado2"</font>,{{<font color="red">"Atributo"</font>, <font color="red">"Ano"</font>}, {<font color="red">"Sigla"</font>, <font color="red">"Sigla_UF"</font>}, {<font color="red">"Valor"</font>, <font color="red">"Num_Estabelecimentos_Saude"</font>}}),<br></br>    #<font color="red">"Tipo Alterado3"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Colunas Renomeadas"</font>,{{<font color="red">"Num_Estabelecimentos_Saude"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Tipo Alterado3"</font>,{<font color="red">"Estado"</font>})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Colunas Removidas"</font><br></br><br></br><br></br>----------------------<br></br>FIN_PIB Brasil<br></br><br></br><font color="blue">let</font><br></br>    Fonte = <font color="purple">Web.BrowserContents</font>("http:<font color="green">//www.ipeadata.gov.br/ExibeSerieR.aspx?stub=1&serid=1540855420&MINDATA=2014&MAXDATA=2030&TNIVID=0&TPAID=1&module=R"),
</font>
    #<font color="red">"Tabela extraída de HTML"</font> = <font color="purple">Html.Table</font>(Fonte, {{<font color="red">"Column1"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(1)"}, {<font color="red">"Column2"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(2)"}, {<font color="red">"Column3"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(3)"}, {<font color="red">"Column4"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(4)"}, {<font color="red">"Column5"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(5)"}, {<font color="red">"Column6"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(6)"}, {<font color="red">"Column7"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(7)"}, {<font color="red">"Column8"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(8)"}, {<font color="red">"Column9"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(9)"}, {<font color="red">"Column10"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(10)"}}, [RowSelector="TABLE[id='grd_DXMainTable'] > * > TR"]),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Tabela extraída de HTML"</font>,{{<font color="red">"Column1"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column2"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column3"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column4"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column5"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column6"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column7"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column8"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column9"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column10"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Cabeçalhos Promovidos"</font> = <font color="purple">Table.PromoteHeaders</font>(#<font color="red">"Tipo Alterado"</font>, [PromoteAllScalars=<font color="blue">true</font>]),<br></br>    #<font color="red">"Tipo Alterado1"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Cabeçalhos Promovidos"</font>,{{<font color="red">"Sigla"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Brasil"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"2014"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2015"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2016"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2017"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2018"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2019"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2020"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2021"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Tipo Alterado1"</font>,{{<font color="red">"Sigla"</font>, <font color="red">"Sigla_UF"</font>}, {<font color="red">"Brasil"</font>, <font color="red">"Estado"</font>}}),<br></br>    #<font color="red">"Colunas Não Dinâmicas"</font> = <font color="purple">Table.Unpivot</font>OtherColumns(#<font color="red">"Colunas Renomeadas"</font>, {<font color="red">"Sigla_UF"</font>, <font color="red">"Estado"</font>}, <font color="red">"Atributo"</font>, <font color="red">"Valor"</font>),<br></br>    #<font color="red">"Colunas Renomeadas1"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Colunas Não Dinâmicas"</font>,{{<font color="red">"Atributo"</font>, <font color="red">"Ano"</font>}}),<br></br>    #<font color="red">"Tipo Alterado2"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Colunas Renomeadas1"</font>,{{<font color="red">"Ano"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Colunas Renomeadas2"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Tipo Alterado2"</font>,{{<font color="red">"Valor"</font>, <font color="red">"Valor PIB Brasil em trilhao"</font>}}),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Colunas Renomeadas2"</font>,{<font color="red">"Estado"</font>})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Colunas Removidas"</font><br></br><br></br><br></br>----------------------<br></br>SAU_Medicos por 10k Habitantes<br></br><br></br><font color="blue">let</font><br></br>    Fonte = <font color="purple">Web.BrowserContents</font>("http:<font color="green">//www.ipeadata.gov.br/ExibeSerieR.aspx?stub=1&serid=2096727037&MINDATA=2015&MAXDATA=2025&TNIVID=2&TPAID=1&module=S"),
</font>
    #<font color="red">"Tabela extraída de HTML"</font> = <font color="purple">Html.Table</font>(Fonte, {{<font color="red">"Column1"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(1)"}, {<font color="red">"Column2"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(2)"}, {<font color="red">"Column3"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(3)"}, {<font color="red">"Column4"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(4)"}, {<font color="red">"Column5"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(5)"}, {<font color="red">"Column6"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(6)"}, {<font color="red">"Column7"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(7)"}, {<font color="red">"Column8"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(8)"}, {<font color="red">"Column9"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(9)"}, {<font color="red">"Column10"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(10)"}, {<font color="red">"Column11"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(11)"}}, [RowSelector="TABLE[id='grd_DXMainTable'] > * > TR"]),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Tabela extraída de HTML"</font>,{{<font color="red">"Column1"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column2"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column3"</font>, <font color="blue">type</font> number}, {<font color="red">"Column4"</font>, <font color="blue">type</font> number}, {<font color="red">"Column5"</font>, <font color="blue">type</font> number}, {<font color="red">"Column6"</font>, <font color="blue">type</font> number}, {<font color="red">"Column7"</font>, <font color="blue">type</font> number}, {<font color="red">"Column8"</font>, <font color="blue">type</font> number}, {<font color="red">"Column9"</font>, <font color="blue">type</font> number}, {<font color="red">"Column10"</font>, <font color="blue">type</font> number}, {<font color="red">"Column11"</font>, <font color="blue">type</font> number}}),<br></br>    #<font color="red">"Cabeçalhos Promovidos"</font> = <font color="purple">Table.PromoteHeaders</font>(#<font color="red">"Tipo Alterado"</font>, [PromoteAllScalars=<font color="blue">true</font>]),<br></br>    #<font color="red">"Tipo Alterado1"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Cabeçalhos Promovidos"</font>,{{<font color="red">"Sigla"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Estado"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"2015"</font>, <font color="blue">type</font> number}, {<font color="red">"2016"</font>, <font color="blue">type</font> number}, {<font color="red">"2017"</font>, <font color="blue">type</font> number}, {<font color="red">"2018"</font>, <font color="blue">type</font> number}, {<font color="red">"2019"</font>, <font color="blue">type</font> number}, {<font color="red">"2020"</font>, <font color="blue">type</font> number}, {<font color="red">"2021"</font>, <font color="blue">type</font> number}, {<font color="red">"2022"</font>, <font color="blue">type</font> number}, {<font color="red">"2023"</font>, <font color="blue">type</font> number}}),<br></br>    #<font color="red">"Outras Colunas Não Dinâmicas"</font> = <font color="purple">Table.Unpivot</font>OtherColumns(#<font color="red">"Tipo Alterado1"</font>, {<font color="red">"Sigla"</font>, <font color="red">"Estado"</font>}, <font color="red">"Atributo"</font>, <font color="red">"Valor"</font>),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Outras Colunas Não Dinâmicas"</font>,{{<font color="red">"Atributo"</font>, <font color="red">"Ano"</font>}}),<br></br>    #<font color="red">"Tipo Alterado2"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Colunas Renomeadas"</font>,{{<font color="red">"Ano"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Colunas Renomeadas1"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Tipo Alterado2"</font>,{{<font color="red">"Valor"</font>, <font color="red">"Médicos por 10.000 Habitantes"</font>}, {<font color="red">"Sigla"</font>, <font color="red">"Sigla_UF"</font>}}),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Colunas Renomeadas1"</font>,{<font color="red">"Estado"</font>})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Colunas Removidas"</font><br></br><br></br><br></br>----------------------<br></br>SEG_Homicidios por 100k Habitantes<br></br><br></br><font color="blue">let</font><br></br>    Fonte = <font color="purple">Web.BrowserContents</font>("http:<font color="green">//www.ipeadata.gov.br/ExibeSerieR.aspx?stub=1&serid=1611149422&MINDATA=2015&MAXDATA=2025&TNIVID=2&TPAID=1&module=R"),
</font>
    #<font color="red">"Tabela extraída de HTML"</font> = <font color="purple">Html.Table</font>(Fonte, {{<font color="red">"Column1"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(1)"}, {<font color="red">"Column2"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(2)"}, {<font color="red">"Column3"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(3)"}, {<font color="red">"Column4"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(4)"}, {<font color="red">"Column5"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(5)"}, {<font color="red">"Column6"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(6)"}, {<font color="red">"Column7"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(7)"}, {<font color="red">"Column8"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(8)"}, {<font color="red">"Column9"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(9)"}, {<font color="red">"Column10"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(10)"}, {<font color="red">"Column11"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(11)"}}, [RowSelector="TABLE[id='grd_DXMainTable'] > * > TR"]),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Tabela extraída de HTML"</font>,{{<font color="red">"Column1"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column2"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column3"</font>, <font color="blue">type</font> number}, {<font color="red">"Column4"</font>, <font color="blue">type</font> number}, {<font color="red">"Column5"</font>, <font color="blue">type</font> number}, {<font color="red">"Column6"</font>, <font color="blue">type</font> number}, {<font color="red">"Column7"</font>, <font color="blue">type</font> number}, {<font color="red">"Column8"</font>, <font color="blue">type</font> number}, {<font color="red">"Column9"</font>, <font color="blue">type</font> number}, {<font color="red">"Column10"</font>, <font color="blue">type</font> number}, {<font color="red">"Column11"</font>, <font color="blue">type</font> number}}),<br></br>    #<font color="red">"Cabeçalhos Promovidos"</font> = <font color="purple">Table.PromoteHeaders</font>(#<font color="red">"Tipo Alterado"</font>, [PromoteAllScalars=<font color="blue">true</font>]),<br></br>    #<font color="red">"Tipo Alterado1"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Cabeçalhos Promovidos"</font>,{{<font color="red">"Sigla"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Estado"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"2015"</font>, <font color="blue">type</font> number}, {<font color="red">"2016"</font>, <font color="blue">type</font> number}, {<font color="red">"2017"</font>, <font color="blue">type</font> number}, {<font color="red">"2018"</font>, <font color="blue">type</font> number}, {<font color="red">"2019"</font>, <font color="blue">type</font> number}, {<font color="red">"2020"</font>, <font color="blue">type</font> number}, {<font color="red">"2021"</font>, <font color="blue">type</font> number}, {<font color="red">"2022"</font>, <font color="blue">type</font> number}, {<font color="red">"Column11"</font>, <font color="blue">type</font> number}}),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Tipo Alterado1"</font>,{<font color="red">"Column11"</font>}),<br></br>    #<font color="red">"Outras Colunas Não Dinâmicas"</font> = <font color="purple">Table.Unpivot</font>OtherColumns(#<font color="red">"Colunas Removidas"</font>, {<font color="red">"Sigla"</font>, <font color="red">"Estado"</font>}, <font color="red">"Atributo"</font>, <font color="red">"Valor"</font>),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Outras Colunas Não Dinâmicas"</font>,{{<font color="red">"Atributo"</font>, <font color="red">"Ano"</font>}}),<br></br>    #<font color="red">"Tipo Alterado2"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Colunas Renomeadas"</font>,{{<font color="red">"Ano"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Colunas Renomeadas1"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Tipo Alterado2"</font>,{{<font color="red">"Valor"</font>, <font color="red">"Tx Homicidio por 100.000 Habitantes"</font>}, {<font color="red">"Sigla"</font>, <font color="red">"Sigla_UF"</font>}}),<br></br>    #<font color="red">"Colunas Removidas1"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Colunas Renomeadas1"</font>,{<font color="red">"Estado"</font>})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Colunas Removidas1"</font><br></br><br></br><br></br>----------------------<br></br>SOC_Taxa de Pobreza<br></br><br></br><font color="blue">let</font><br></br>    Fonte = <font color="purple">Web.BrowserContents</font>("http:<font color="green">//www.ipeadata.gov.br/ExibeSerieR.aspx?stub=1&serid=2096726934&MINDATA=2015&MAXDATA=2025&TNIVID=2&TPAID=1&module=S"),
</font>
    #<font color="red">"Tabela extraída de HTML"</font> = <font color="purple">Html.Table</font>(Fonte, {{<font color="red">"Column1"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(1)"}, {<font color="red">"Column2"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(2)"}, {<font color="red">"Column3"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(3)"}, {<font color="red">"Column4"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(4)"}, {<font color="red">"Column5"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(5)"}, {<font color="red">"Column6"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(6)"}, {<font color="red">"Column7"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(7)"}, {<font color="red">"Column8"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(8)"}, {<font color="red">"Column9"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(9)"}, {<font color="red">"Column10"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(10)"}, {<font color="red">"Column11"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(11)"}}, [RowSelector="TABLE[id='grd_DXMainTable'] > * > TR"]),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Tabela extraída de HTML"</font>,{{<font color="red">"Column1"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column2"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column3"</font>, <font color="blue">type</font> number}, {<font color="red">"Column4"</font>, <font color="blue">type</font> number}, {<font color="red">"Column5"</font>, <font color="blue">type</font> number}, {<font color="red">"Column6"</font>, <font color="blue">type</font> number}, {<font color="red">"Column7"</font>, <font color="blue">type</font> number}, {<font color="red">"Column8"</font>, <font color="blue">type</font> number}, {<font color="red">"Column9"</font>, <font color="blue">type</font> number}, {<font color="red">"Column10"</font>, <font color="blue">type</font> number}, {<font color="red">"Column11"</font>, <font color="blue">type</font> number}}),<br></br>    #<font color="red">"Cabeçalhos Promovidos"</font> = <font color="purple">Table.PromoteHeaders</font>(#<font color="red">"Tipo Alterado"</font>, [PromoteAllScalars=<font color="blue">true</font>]),<br></br>    #<font color="red">"Outras Colunas Não Dinâmicas"</font> = <font color="purple">Table.Unpivot</font>OtherColumns(#<font color="red">"Cabeçalhos Promovidos"</font>, {<font color="red">"Sigla"</font>, <font color="red">"Estado"</font>}, <font color="red">"Atributo"</font>, <font color="red">"Valor"</font>),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Outras Colunas Não Dinâmicas"</font>,{{<font color="red">"Atributo"</font>, <font color="red">"Ano"</font>}}),<br></br>    #<font color="red">"Tipo Alterado2"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Colunas Renomeadas"</font>,{{<font color="red">"Ano"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Colunas Renomeadas1"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Tipo Alterado2"</font>,{{<font color="red">"Valor"</font>, <font color="red">"Taxa de Pobreza"</font>}, {<font color="red">"Sigla"</font>, <font color="red">"Sigla_UF"</font>}}),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Colunas Renomeadas1"</font>,{<font color="red">"Estado"</font>})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Colunas Removidas"</font><br></br><br></br><br></br>----------------------<br></br>FIN_Receita corrente - receita bruta - estadual<br></br><br></br><font color="blue">let</font><br></br>    Fonte = <font color="purple">Web.BrowserContents</font>("http:<font color="green">//www.ipeadata.gov.br/ExibeSerieR.aspx?stub=1&serid=40177&MINDATA=1970&MAXDATA=2025&TNIVID=2&TPAID=1&module=S"),
</font>
    #<font color="red">"Tabela extraída de HTML"</font> = <font color="purple">Html.Table</font>(Fonte, {{<font color="red">"Column1"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(1)"}, {<font color="red">"Column2"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(2)"}, {<font color="red">"Column3"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(3)"}, {<font color="red">"Column4"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(4)"}, {<font color="red">"Column5"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(5)"}, {<font color="red">"Column6"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(6)"}, {<font color="red">"Column7"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(7)"}, {<font color="red">"Column8"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(8)"}, {<font color="red">"Column9"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(9)"}, {<font color="red">"Column10"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(10)"}, {<font color="red">"Column11"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(11)"}, {<font color="red">"Column12"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(12)"}, {<font color="red">"Column13"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(13)"}, {<font color="red">"Column14"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(14)"}, {<font color="red">"Column15"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(15)"}, {<font color="red">"Column16"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(16)"}, {<font color="red">"Column17"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(17)"}, {<font color="red">"Column18"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(18)"}, {<font color="red">"Column19"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(19)"}, {<font color="red">"Column20"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(20)"}, {<font color="red">"Column21"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(21)"}, {<font color="red">"Column22"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(22)"}, {<font color="red">"Column23"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(23)"}, {<font color="red">"Column24"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(24)"}, {<font color="red">"Column25"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(25)"}, {<font color="red">"Column26"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(26)"}, {<font color="red">"Column27"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(27)"}, {<font color="red">"Column28"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(28)"}, {<font color="red">"Column29"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(29)"}, {<font color="red">"Column30"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(30)"}, {<font color="red">"Column31"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(31)"}, {<font color="red">"Column32"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(32)"}, {<font color="red">"Column33"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(33)"}, {<font color="red">"Column34"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(34)"}, {<font color="red">"Column35"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(35)"}, {<font color="red">"Column36"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(36)"}, {<font color="red">"Column37"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(37)"}, {<font color="red">"Column38"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(38)"}, {<font color="red">"Column39"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(39)"}, {<font color="red">"Column40"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(40)"}, {<font color="red">"Column41"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(41)"}, {<font color="red">"Column42"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(42)"}, {<font color="red">"Column43"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(43)"}, {<font color="red">"Column44"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(44)"}, {<font color="red">"Column45"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(45)"}, {<font color="red">"Column46"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(46)"}, {<font color="red">"Column47"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(47)"}, {<font color="red">"Column48"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(48)"}, {<font color="red">"Column49"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(49)"}, {<font color="red">"Column50"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(50)"}, {<font color="red">"Column51"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(51)"}, {<font color="red">"Column52"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(52)"}, {<font color="red">"Column53"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(53)"}, {<font color="red">"Column54"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(54)"}}, [RowSelector="TABLE[id='grd_DXMainTable'] > * > TR"]),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Tabela extraída de HTML"</font>,{{<font color="red">"Column1"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column2"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column3"</font>, <font color="blue">type</font> number}, {<font color="red">"Column4"</font>, <font color="blue">type</font> number}, {<font color="red">"Column5"</font>, <font color="blue">type</font> number}, {<font color="red">"Column6"</font>, <font color="blue">type</font> number}, {<font color="red">"Column7"</font>, <font color="blue">type</font> number}, {<font color="red">"Column8"</font>, <font color="blue">type</font> number}, {<font color="red">"Column9"</font>, <font color="blue">type</font> number}, {<font color="red">"Column10"</font>, <font color="blue">type</font> number}, {<font color="red">"Column11"</font>, <font color="blue">type</font> number}, {<font color="red">"Column12"</font>, <font color="blue">type</font> number}, {<font color="red">"Column13"</font>, <font color="blue">type</font> number}, {<font color="red">"Column14"</font>, <font color="blue">type</font> number}, {<font color="red">"Column15"</font>, <font color="blue">type</font> number}, {<font color="red">"Column16"</font>, <font color="blue">type</font> number}, {<font color="red">"Column17"</font>, <font color="blue">type</font> number}, {<font color="red">"Column18"</font>, <font color="blue">type</font> number}, {<font color="red">"Column19"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column20"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column21"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column22"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column23"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column24"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column25"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column26"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column27"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column28"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column29"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column30"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column31"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column32"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column33"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column34"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column35"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column36"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column37"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column38"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column39"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column40"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column41"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column42"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column43"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column44"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column45"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column46"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column47"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column48"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column49"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column50"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column51"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column52"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column53"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column54"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Cabeçalhos Promovidos"</font> = <font color="purple">Table.PromoteHeaders</font>(#<font color="red">"Tipo Alterado"</font>, [PromoteAllScalars=<font color="blue">true</font>]),<br></br>    #<font color="red">"Tipo Alterado1"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Cabeçalhos Promovidos"</font>,{{<font color="red">"Sigla"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Estado"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"1970"</font>, <font color="blue">type</font> number}, {<font color="red">"1971"</font>, <font color="blue">type</font> number}, {<font color="red">"1972"</font>, <font color="blue">type</font> number}, {<font color="red">"1973"</font>, <font color="blue">type</font> number}, {<font color="red">"1974"</font>, <font color="blue">type</font> number}, {<font color="red">"1975"</font>, <font color="blue">type</font> number}, {<font color="red">"1976"</font>, <font color="blue">type</font> number}, {<font color="red">"1977"</font>, <font color="blue">type</font> number}, {<font color="red">"1978"</font>, <font color="blue">type</font> number}, {<font color="red">"1979"</font>, <font color="blue">type</font> number}, {<font color="red">"1980"</font>, <font color="blue">type</font> number}, {<font color="red">"1981"</font>, <font color="blue">type</font> number}, {<font color="red">"1982"</font>, <font color="blue">type</font> number}, {<font color="red">"1983"</font>, <font color="blue">type</font> number}, {<font color="red">"1985"</font>, <font color="blue">type</font> number}, {<font color="red">"1986"</font>, <font color="blue">type</font> number}, {<font color="red">"1987"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"1988"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"1989"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"1990"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"1991"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"1992"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"1993"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"1994"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"1995"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"1996"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"1997"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"1998"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"1999"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2000"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2001"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2002"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2003"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2004"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2005"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2006"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2007"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2008"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2009"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2010"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2011"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2012"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2013"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2014"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2015"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2016"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2017"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2018"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2019"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2020"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2021"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2022"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Tipo Alterado1"</font>,{<font color="red">"1970"</font>, <font color="red">"1971"</font>, <font color="red">"1972"</font>, <font color="red">"1973"</font>, <font color="red">"1974"</font>, <font color="red">"1975"</font>, <font color="red">"1976"</font>, <font color="red">"1977"</font>, <font color="red">"1978"</font>, <font color="red">"1979"</font>, <font color="red">"1980"</font>, <font color="red">"1981"</font>, <font color="red">"1982"</font>, <font color="red">"1983"</font>, <font color="red">"1985"</font>, <font color="red">"1986"</font>, <font color="red">"1987"</font>, <font color="red">"1988"</font>, <font color="red">"1989"</font>, <font color="red">"1990"</font>, <font color="red">"1991"</font>, <font color="red">"1992"</font>, <font color="red">"1993"</font>}),<br></br>    #<font color="red">"Outras Colunas Não Dinâmicas"</font> = <font color="purple">Table.Unpivot</font>OtherColumns(#<font color="red">"Colunas Removidas"</font>, {<font color="red">"Sigla"</font>, <font color="red">"Estado"</font>}, <font color="red">"Atributo"</font>, <font color="red">"Valor"</font>),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Outras Colunas Não Dinâmicas"</font>,{{<font color="red">"Atributo"</font>, <font color="red">"Ano"</font>}}),<br></br>    #<font color="red">"Tipo Alterado2"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Colunas Renomeadas"</font>,{{<font color="red">"Ano"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Colunas Renomeadas1"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Tipo Alterado2"</font>,{{<font color="red">"Valor"</font>, <font color="red">"Receita bruta"</font>}, {<font color="red">"Sigla"</font>, <font color="red">"Sigla_UF"</font>}}),<br></br>    #<font color="red">"Coluna Mesclada Inserida"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Colunas Renomeadas1"</font>, <font color="red">"Indice"</font>, each <font color="purple">Text.Combine</font>({[Sigla_UF], [Estado], <font color="purple">Text.From</font>([Ano], "pt-BR")}), <font color="blue">type</font> <font color="blue">text</font>),<br></br>    #<font color="red">"Colunas Removidas1"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Coluna Mesclada Inserida"</font>,{<font color="red">"Estado"</font>})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Colunas Removidas1"</font><br></br><br></br><br></br>----------------------<br></br>FIN_Despesas correntes - estadual<br></br><br></br><font color="blue">let</font><br></br>    Fonte = <font color="purple">Web.BrowserContents</font>("http:<font color="green">//www.ipeadata.gov.br/ExibeSerieR.aspx?stub=1&serid=40115&MINDATA=1994&MAXDATA=2025&TNIVID=2&TPAID=1&module=S"),
</font>
    #<font color="red">"Tabela extraída de HTML"</font> = <font color="purple">Html.Table</font>(Fonte, {{<font color="red">"Column1"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(1)"}, {<font color="red">"Column2"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(2)"}, {<font color="red">"Column3"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(3)"}, {<font color="red">"Column4"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(4)"}, {<font color="red">"Column5"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(5)"}, {<font color="red">"Column6"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(6)"}, {<font color="red">"Column7"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(7)"}, {<font color="red">"Column8"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(8)"}, {<font color="red">"Column9"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(9)"}, {<font color="red">"Column10"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(10)"}, {<font color="red">"Column11"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(11)"}, {<font color="red">"Column12"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(12)"}, {<font color="red">"Column13"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(13)"}, {<font color="red">"Column14"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(14)"}, {<font color="red">"Column15"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(15)"}, {<font color="red">"Column16"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(16)"}, {<font color="red">"Column17"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(17)"}, {<font color="red">"Column18"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(18)"}, {<font color="red">"Column19"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(19)"}, {<font color="red">"Column20"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(20)"}, {<font color="red">"Column21"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(21)"}, {<font color="red">"Column22"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(22)"}, {<font color="red">"Column23"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(23)"}, {<font color="red">"Column24"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(24)"}, {<font color="red">"Column25"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(25)"}, {<font color="red">"Column26"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(26)"}, {<font color="red">"Column27"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(27)"}, {<font color="red">"Column28"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(28)"}, {<font color="red">"Column29"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(29)"}, {<font color="red">"Column30"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(30)"}, {<font color="red">"Column31"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(31)"}}, [RowSelector="TABLE[id='grd_DXMainTable'] > * > TR"]),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Tabela extraída de HTML"</font>,{{<font color="red">"Column1"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column2"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column3"</font>, <font color="blue">type</font> number}, {<font color="red">"Column4"</font>, <font color="blue">type</font> number}, {<font color="red">"Column5"</font>, <font color="blue">type</font> number}, {<font color="red">"Column6"</font>, <font color="blue">type</font> number}, {<font color="red">"Column7"</font>, <font color="blue">type</font> number}, {<font color="red">"Column8"</font>, <font color="blue">type</font> number}, {<font color="red">"Column9"</font>, <font color="blue">type</font> number}, {<font color="red">"Column10"</font>, <font color="blue">type</font> number}, {<font color="red">"Column11"</font>, <font color="blue">type</font> number}, {<font color="red">"Column12"</font>, <font color="blue">type</font> number}, {<font color="red">"Column13"</font>, <font color="blue">type</font> number}, {<font color="red">"Column14"</font>, <font color="blue">type</font> number}, {<font color="red">"Column15"</font>, <font color="blue">type</font> number}, {<font color="red">"Column16"</font>, <font color="blue">type</font> number}, {<font color="red">"Column17"</font>, <font color="blue">type</font> number}, {<font color="red">"Column18"</font>, <font color="blue">type</font> number}, {<font color="red">"Column19"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column20"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column21"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column22"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column23"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column24"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column25"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column26"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column27"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column28"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column29"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column30"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column31"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Cabeçalhos Promovidos"</font> = <font color="purple">Table.PromoteHeaders</font>(#<font color="red">"Tipo Alterado"</font>, [PromoteAllScalars=<font color="blue">true</font>]),<br></br>    #<font color="red">"Tipo Alterado1"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Cabeçalhos Promovidos"</font>,{{<font color="red">"Sigla"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Estado"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"1994"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"1995"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"1996"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"1997"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"1998"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"1999"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2000"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2001"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2002"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2003"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2004"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2005"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2006"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2007"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2008"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2009"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2010"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2011"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2012"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2013"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2014"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2015"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2016"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2017"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2018"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2019"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2020"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2021"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2022"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Outras Colunas Não Dinâmicas"</font> = <font color="purple">Table.Unpivot</font>OtherColumns(#<font color="red">"Tipo Alterado1"</font>, {<font color="red">"Sigla"</font>, <font color="red">"Estado"</font>}, <font color="red">"Atributo"</font>, <font color="red">"Valor"</font>),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Outras Colunas Não Dinâmicas"</font>,{{<font color="red">"Atributo"</font>, <font color="red">"Ano"</font>}}),<br></br>    #<font color="red">"Tipo Alterado2"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Colunas Renomeadas"</font>,{{<font color="red">"Ano"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Colunas Renomeadas1"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Tipo Alterado2"</font>,{{<font color="red">"Valor"</font>, <font color="red">"Despesas Correntes"</font>}, {<font color="red">"Sigla"</font>, <font color="red">"Sigla_UF"</font>}}),<br></br>    #<font color="red">"Coluna Mesclada Inserida"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Colunas Renomeadas1"</font>, <font color="red">"Indice"</font>, each <font color="purple">Text.Combine</font>({[Sigla_UF], [Estado], <font color="purple">Text.From</font>([Ano], "pt-BR")}), <font color="blue">type</font> <font color="blue">text</font>),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Coluna Mesclada Inserida"</font>,{<font color="red">"Estado"</font>})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Colunas Removidas"</font><br></br><br></br><br></br>----------------------<br></br>FIN_Renda per capita (Atlas DH - Pnad Contínua/A)<br></br><br></br><font color="blue">let</font><br></br>    Fonte = <font color="purple">Web.BrowserContents</font>("http:<font color="green">//www.ipeadata.gov.br/ExibeSerieR.aspx?stub=1&serid=2096726936&MINDATA=2015&MAXDATA=2025&TNIVID=2&TPAID=1&module=S"),
</font>
    #<font color="red">"Tabela extraída de HTML"</font> = <font color="purple">Html.Table</font>(Fonte, {{<font color="red">"Column1"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(1)"}, {<font color="red">"Column2"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(2)"}, {<font color="red">"Column3"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(3)"}, {<font color="red">"Column4"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(4)"}, {<font color="red">"Column5"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(5)"}, {<font color="red">"Column6"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(6)"}, {<font color="red">"Column7"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(7)"}, {<font color="red">"Column8"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(8)"}, {<font color="red">"Column9"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(9)"}, {<font color="red">"Column10"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(10)"}, {<font color="red">"Column11"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(11)"}, {<font color="red">"Column12"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(12)"}}, [RowSelector="TABLE[id='grd_DXMainTable'] > * > TR"]),<br></br>    #<font color="red">"Cabeçalhos Promovidos"</font> = <font color="purple">Table.PromoteHeaders</font>(#<font color="red">"Tabela extraída de HTML"</font>, [PromoteAllScalars=<font color="blue">true</font>]),<br></br>    #<font color="red">"Outras Colunas Não Dinâmicas"</font> = <font color="purple">Table.Unpivot</font>OtherColumns(#<font color="red">"Cabeçalhos Promovidos"</font>, {<font color="red">"Sigla"</font>, <font color="red">"Estado"</font>}, <font color="red">"Atributo"</font>, <font color="red">"Valor"</font>),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Outras Colunas Não Dinâmicas"</font>,{{<font color="red">"Atributo"</font>, <font color="red">"Ano"</font>}}),<br></br>    #<font color="red">"Tipo Alterado2"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Colunas Renomeadas"</font>,{{<font color="red">"Ano"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Valor"</font>, <font color="blue">type</font> number}}),<br></br>    #<font color="red">"Colunas Renomeadas1"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Tipo Alterado2"</font>,{{<font color="red">"Valor"</font>, <font color="red">"Renda per Capita"</font>}, {<font color="red">"Sigla"</font>, <font color="red">"Sigla_UF"</font>}}),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Colunas Renomeadas1"</font>,{<font color="red">"Estado"</font>})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Colunas Removidas"</font><br></br><br></br><br></br>----------------------<br></br>FIN_Receitas x Despesas<br></br><br></br><font color="blue">let</font><br></br>    Fonte = <font color="purple">Table.NestedJoin</font>(#"FIN_Receita corrente - receita bruta - estadual", {<font color="red">"Indice"</font>}, #"FIN_Despesas correntes - estadual", {<font color="red">"Indice"</font>}, "Despesas correntes - estadual", <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #"Despesas correntes - estadual Expandido" = <font color="purple">Table.ExpandTableColumn</font>(Fonte, "Despesas correntes - estadual", {<font color="red">"Despesas Correntes"</font>}, {<font color="red">"Despesas Correntes"</font>}),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#"Despesas correntes - estadual Expandido",{<font color="red">"Indice"</font>}),<br></br>    #<font color="red">"Personalização Adicionada"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Colunas Removidas"</font>, "Receita - Despesa", each [Receita bruta] - [Despesas Correntes]),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Personalização Adicionada"</font>,{{"Receita - Despesa", <font color="blue">type</font> number}}),<br></br>    #<font color="red">"Linhas Filtradas"</font> = <font color="purple">Table.SelectRows</font>(#<font color="red">"Tipo Alterado"</font>, each ([Ano] = 2014 or [Ano] = 2015 or [Ano] = 2016 or [Ano] = 2017 or [Ano] = 2018 or [Ano] = 2019 or [Ano] = 2020 or [Ano] = 2021 or [Ano] = 2022 or [Ano] = 2023))<br></br><font color="blue">in</font><br></br>    #<font color="red">"Linhas Filtradas"</font><br></br><br></br><br></br>----------------------<br></br>SOC_Indice de Gini<br></br><br></br><font color="blue">let</font><br></br>    Fonte = <font color="purple">Web.BrowserContents</font>("http:<font color="green">//www.ipeadata.gov.br/ExibeSerieR.aspx?stub=1&serid=2096726935&MINDATA=2015&MAXDATA=2025&TNIVID=2&TPAID=1&module=S"),
</font>
    #<font color="red">"Tabela extraída de HTML"</font> = <font color="purple">Html.Table</font>(Fonte, {{<font color="red">"Column1"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(1)"}, {<font color="red">"Column2"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(2)"}, {<font color="red">"Column3"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(3)"}, {<font color="red">"Column4"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(4)"}, {<font color="red">"Column5"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(5)"}, {<font color="red">"Column6"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(6)"}, {<font color="red">"Column7"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(7)"}, {<font color="red">"Column8"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(8)"}, {<font color="red">"Column9"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(9)"}, {<font color="red">"Column10"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(10)"}, {<font color="red">"Column11"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(11)"}}, [RowSelector="TABLE[id='grd_DXMainTable'] > * > TR"]),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Tabela extraída de HTML"</font>,{{<font color="red">"Column1"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column2"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column3"</font>, <font color="blue">type</font> number}, {<font color="red">"Column4"</font>, <font color="blue">type</font> number}, {<font color="red">"Column5"</font>, <font color="blue">type</font> number}, {<font color="red">"Column6"</font>, <font color="blue">type</font> number}, {<font color="red">"Column7"</font>, <font color="blue">type</font> number}, {<font color="red">"Column8"</font>, <font color="blue">type</font> number}, {<font color="red">"Column9"</font>, <font color="blue">type</font> number}, {<font color="red">"Column10"</font>, <font color="blue">type</font> number}, {<font color="red">"Column11"</font>, <font color="blue">type</font> number}}),<br></br>    #<font color="red">"Cabeçalhos Promovidos"</font> = <font color="purple">Table.PromoteHeaders</font>(#<font color="red">"Tipo Alterado"</font>, [PromoteAllScalars=<font color="blue">true</font>]),<br></br>    #<font color="red">"Tipo Alterado1"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Cabeçalhos Promovidos"</font>,{{<font color="red">"Sigla"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Estado"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"2015"</font>, <font color="blue">type</font> number}, {<font color="red">"2016"</font>, <font color="blue">type</font> number}, {<font color="red">"2017"</font>, <font color="blue">type</font> number}, {<font color="red">"2018"</font>, <font color="blue">type</font> number}, {<font color="red">"2019"</font>, <font color="blue">type</font> number}, {<font color="red">"2020"</font>, <font color="blue">type</font> number}, {<font color="red">"2021"</font>, <font color="blue">type</font> number}, {<font color="red">"2022"</font>, <font color="blue">type</font> number}, {<font color="red">"2023"</font>, <font color="blue">type</font> number}}),<br></br>    #<font color="red">"Outras Colunas Não Dinâmicas"</font> = <font color="purple">Table.Unpivot</font>OtherColumns(#<font color="red">"Tipo Alterado1"</font>, {<font color="red">"Sigla"</font>, <font color="red">"Estado"</font>}, <font color="red">"Atributo"</font>, <font color="red">"Valor"</font>),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Outras Colunas Não Dinâmicas"</font>,{{<font color="red">"Atributo"</font>, <font color="red">"Ano"</font>}, {<font color="red">"Sigla"</font>, <font color="red">"Sigla_UF"</font>}, {<font color="red">"Valor"</font>, <font color="red">"Indice de Gini"</font>}}),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Colunas Renomeadas"</font>,{<font color="red">"Estado"</font>})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Colunas Removidas"</font><br></br><br></br><br></br>----------------------<br></br>SEG_Ocorrências Criminais<br></br><br></br><font color="blue">let</font><br></br>    Fonte = <font color="purple">Excel.Workbook</font>(<font color="purple">Web.Contents</font>("http:<font color="green">//dados.mj.gov.br/dataset/210b9ae2-21fc-4986-89c6-2006eb4db247/resource/feeae05e-faba-406c-8a4a-512aec91a9d1/download/indicadoressegurancapublicauf.xlsx"), <font color="blue">null</font>, <font color="blue">true</font>),
</font>
    Ocorrências_Sheet = Fonte{[Item=<font color="red">"Ocorrências"</font>,Kind=<font color="red">"Sheet"</font>]}[Data],<br></br>    #<font color="red">"Cabeçalhos Promovidos"</font> = <font color="purple">Table.PromoteHeaders</font>(Ocorrências_Sheet, [PromoteAllScalars=<font color="blue">true</font>]),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Cabeçalhos Promovidos"</font>,{{<font color="red">"UF"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Tipo Crime"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Ano"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Mês"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Ocorrências"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Tipo Alterado"</font>,{<font color="red">"Mês"</font>}),<br></br>    #<font color="red">"Coluna em pivô"</font> = <font color="purple">Table.Pivot</font>(#<font color="red">"Colunas Removidas"</font>, <font color="purple">List.Distinct</font>(#<font color="red">"Colunas Removidas"</font>[#<font color="red">"Tipo Crime"</font>]), <font color="red">"Tipo Crime"</font>, <font color="red">"Ocorrências"</font>, <font color="purple">List.Sum</font>),<br></br>    #<font color="red">"Outras Colunas Não Dinâmicas"</font> = <font color="purple">Table.Unpivot</font>OtherColumns(#<font color="red">"Coluna em pivô"</font>, {<font color="red">"UF"</font>, <font color="red">"Ano"</font>}, <font color="red">"Atributo"</font>, <font color="red">"Valor"</font>),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Outras Colunas Não Dinâmicas"</font>,{{<font color="red">"Atributo"</font>, <font color="red">"Tipo Crime"</font>}, {<font color="red">"Valor"</font>, <font color="red">"Vítimas"</font>}}),<br></br>    #<font color="red">"Coluna Condicional Adicionada"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Colunas Renomeadas"</font>, <font color="red">"Sigla_UF"</font>, each if [UF] = <font color="red">"Acre"</font> then <font color="red">"AC"</font> else if [UF] = <font color="red">"Alagoas"</font> then <font color="red">"AL"</font> else if [UF] = <font color="red">"Amapá"</font> then <font color="red">"AP"</font> else if [UF] = <font color="red">"Amazonas"</font> then <font color="red">"AM"</font> else if [UF] = <font color="red">"Bahia"</font> then <font color="red">"BA"</font> else if [UF] = <font color="red">"Ceará"</font> then <font color="red">"CE"</font> else if [UF] = <font color="red">"Distrito Federal"</font> then <font color="red">"DF"</font> else if [UF] = <font color="red">"Espírito Santo"</font> then <font color="red">"ES"</font> else if [UF] = <font color="red">"Goiás"</font> then <font color="red">"GO"</font> else if [UF] = <font color="red">"Maranhão"</font> then <font color="red">"MA"</font> else if [UF] = <font color="red">"Mato Grosso"</font> then <font color="red">"MT"</font> else if [UF] = <font color="red">"Mato Grosso do Sul"</font> then <font color="red">"MS"</font> else if [UF] = <font color="red">"Minas Gerais"</font> then <font color="red">"MG"</font> else if [UF] = <font color="red">"Paraná"</font> then <font color="red">"PR"</font> else if [UF] = <font color="red">"Paraíba"</font> then <font color="red">"PB"</font> else if [UF] = <font color="red">"Pará"</font> then <font color="red">"PA"</font> else if [UF] = <font color="red">"Pernambuco"</font> then <font color="red">"PE"</font> else if [UF] = <font color="red">"Piauí"</font> then <font color="red">"PI"</font> else if [UF] = <font color="red">"Rio Grande do Norte"</font> then <font color="red">"RN"</font> else if [UF] = <font color="red">"Rio Grande do Sul"</font> then <font color="red">"RS"</font> else if [UF] = <font color="red">"Rio de Janeiro"</font> then <font color="red">"RJ"</font> else if [UF] = <font color="red">"Rondônia"</font> then <font color="red">"RO"</font> else if [UF] = <font color="red">"Roraima"</font> then <font color="red">"RR"</font> else if [UF] = <font color="red">"Santa Catarina"</font> then <font color="red">"SC"</font> else if [UF] = <font color="red">"Sergipe"</font> then <font color="red">"SE"</font> else if [UF] = <font color="red">"São Paulo"</font> then <font color="red">"SP"</font> else if [UF] = <font color="red">"Tocantins"</font> then <font color="red">"TO"</font> else <font color="blue">null</font>, <font color="blue">type</font> <font color="blue">text</font>),<br></br>    #<font color="red">"Colunas Removidas1"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Coluna Condicional Adicionada"</font>,{<font color="red">"UF"</font>})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Colunas Removidas1"</font><br></br><br></br><br></br>----------------------<br></br>Calendario<br></br><br></br><br></br>ADDCOLUMNS(<br></br>    CALENDARAUTO(),<br></br>    <font color="red">"Ano"</font>, YEAR([Date]),<br></br>    <font color="red">"Mês"</font>, MONTH([Date]),<br></br>    <font color="red">"Dia"</font>, DAY([Date]),<br></br>    <font color="red">"Nome do Mês"</font>, FORMAT([Date], <font color="red">"MMMM"</font>),<br></br>    <font color="red">"Trimestre"</font>, QUARTER([Date])<br></br>)<br></br><br></br><br></br>----------------------<br></br>PIB Estadual histórico<br></br><br></br><font color="blue">let</font><br></br>    Fonte = <font color="purple">Web.BrowserContents</font>("http:<font color="green">//www.ipeadata.gov.br/ExibeSerieR.aspx?stub=1&serid=1540855420&MINDATA=1939&MAXDATA=2025&TNIVID=2&TPAID=1&module=R"),
</font>
    #<font color="red">"Tabela extraída de HTML"</font> = <font color="purple">Html.Table</font>(Fonte, {{<font color="red">"Column1"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(1)"}, {<font color="red">"Column2"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(2)"}, {<font color="red">"Column3"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(3)"}, {<font color="red">"Column4"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(4)"}, {<font color="red">"Column5"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(5)"}, {<font color="red">"Column6"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(6)"}, {<font color="red">"Column7"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(7)"}, {<font color="red">"Column8"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(8)"}, {<font color="red">"Column9"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(9)"}, {<font color="red">"Column10"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(10)"}, {<font color="red">"Column11"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(11)"}, {<font color="red">"Column12"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(12)"}, {<font color="red">"Column13"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(13)"}, {<font color="red">"Column14"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(14)"}, {<font color="red">"Column15"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(15)"}, {<font color="red">"Column16"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(16)"}, {<font color="red">"Column17"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(17)"}, {<font color="red">"Column18"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(18)"}, {<font color="red">"Column19"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(19)"}, {<font color="red">"Column20"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(20)"}, {<font color="red">"Column21"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(21)"}, {<font color="red">"Column22"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(22)"}, {<font color="red">"Column23"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(23)"}, {<font color="red">"Column24"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(24)"}, {<font color="red">"Column25"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(25)"}, {<font color="red">"Column26"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(26)"}, {<font color="red">"Column27"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(27)"}, {<font color="red">"Column28"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(28)"}, {<font color="red">"Column29"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(29)"}, {<font color="red">"Column30"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(30)"}, {<font color="red">"Column31"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(31)"}, {<font color="red">"Column32"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(32)"}, {<font color="red">"Column33"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(33)"}, {<font color="red">"Column34"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(34)"}, {<font color="red">"Column35"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(35)"}, {<font color="red">"Column36"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(36)"}, {<font color="red">"Column37"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(37)"}, {<font color="red">"Column38"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(38)"}, {<font color="red">"Column39"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(39)"}, {<font color="red">"Column40"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(40)"}, {<font color="red">"Column41"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(41)"}, {<font color="red">"Column42"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(42)"}, {<font color="red">"Column43"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(43)"}, {<font color="red">"Column44"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(44)"}, {<font color="red">"Column45"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(45)"}, {<font color="red">"Column46"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(46)"}, {<font color="red">"Column47"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(47)"}, {<font color="red">"Column48"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(48)"}, {<font color="red">"Column49"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(49)"}, {<font color="red">"Column50"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(50)"}, {<font color="red">"Column51"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(51)"}, {<font color="red">"Column52"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(52)"}, {<font color="red">"Column53"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(53)"}, {<font color="red">"Column54"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(54)"}, {<font color="red">"Column55"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(55)"}, {<font color="red">"Column56"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(56)"}, {<font color="red">"Column57"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(57)"}, {<font color="red">"Column58"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(58)"}, {<font color="red">"Column59"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(59)"}, {<font color="red">"Column60"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(60)"}, {<font color="red">"Column61"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(61)"}, {<font color="red">"Column62"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(62)"}, {<font color="red">"Column63"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(63)"}}, [RowSelector="TABLE[id='grd_DXMainTable'] > * > TR"]),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Tabela extraída de HTML"</font>,{{<font color="red">"Column1"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column2"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column3"</font>, <font color="blue">type</font> number}, {<font color="red">"Column4"</font>, <font color="blue">type</font> number}, {<font color="red">"Column5"</font>, <font color="blue">type</font> number}, {<font color="red">"Column6"</font>, <font color="blue">type</font> number}, {<font color="red">"Column7"</font>, <font color="blue">type</font> number}, {<font color="red">"Column8"</font>, <font color="blue">type</font> number}, {<font color="red">"Column9"</font>, <font color="blue">type</font> number}, {<font color="red">"Column10"</font>, <font color="blue">type</font> number}, {<font color="red">"Column11"</font>, <font color="blue">type</font> number}, {<font color="red">"Column12"</font>, <font color="blue">type</font> number}, {<font color="red">"Column13"</font>, <font color="blue">type</font> number}, {<font color="red">"Column14"</font>, <font color="blue">type</font> number}, {<font color="red">"Column15"</font>, <font color="blue">type</font> number}, {<font color="red">"Column16"</font>, <font color="blue">type</font> number}, {<font color="red">"Column17"</font>, <font color="blue">type</font> number}, {<font color="red">"Column18"</font>, <font color="blue">type</font> number}, {<font color="red">"Column19"</font>, <font color="blue">type</font> number}, {<font color="red">"Column20"</font>, <font color="blue">type</font> number}, {<font color="red">"Column21"</font>, <font color="blue">type</font> number}, {<font color="red">"Column22"</font>, <font color="blue">type</font> number}, {<font color="red">"Column23"</font>, <font color="blue">type</font> number}, {<font color="red">"Column24"</font>, <font color="blue">type</font> number}, {<font color="red">"Column25"</font>, <font color="blue">type</font> number}, {<font color="red">"Column26"</font>, <font color="blue">type</font> number}, {<font color="red">"Column27"</font>, <font color="blue">type</font> number}, {<font color="red">"Column28"</font>, <font color="blue">type</font> number}, {<font color="red">"Column29"</font>, <font color="blue">type</font> number}, {<font color="red">"Column30"</font>, <font color="blue">type</font> number}, {<font color="red">"Column31"</font>, <font color="blue">type</font> number}, {<font color="red">"Column32"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column33"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column34"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column35"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column36"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column37"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column38"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column39"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column40"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column41"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column42"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column43"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column44"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column45"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column46"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column47"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column48"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column49"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column50"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column51"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column52"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column53"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column54"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column55"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column56"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column57"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column58"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column59"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column60"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column61"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column62"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column63"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Cabeçalhos Promovidos"</font> = <font color="purple">Table.PromoteHeaders</font>(#<font color="red">"Tipo Alterado"</font>, [PromoteAllScalars=<font color="blue">true</font>]),<br></br>    #<font color="red">"Tipo Alterado1"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Cabeçalhos Promovidos"</font>,{{<font color="red">"Sigla"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Estado"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"1939"</font>, <font color="blue">type</font> number}, {<font color="red">"1947"</font>, <font color="blue">type</font> number}, {<font color="red">"1948"</font>, <font color="blue">type</font> number}, {<font color="red">"1949"</font>, <font color="blue">type</font> number}, {<font color="red">"1950"</font>, <font color="blue">type</font> number}, {<font color="red">"1951"</font>, <font color="blue">type</font> number}, {<font color="red">"1952"</font>, <font color="blue">type</font> number}, {<font color="red">"1953"</font>, <font color="blue">type</font> number}, {<font color="red">"1954"</font>, <font color="blue">type</font> number}, {<font color="red">"1955"</font>, <font color="blue">type</font> number}, {<font color="red">"1956"</font>, <font color="blue">type</font> number}, {<font color="red">"1957"</font>, <font color="blue">type</font> number}, {<font color="red">"1958"</font>, <font color="blue">type</font> number}, {<font color="red">"1959"</font>, <font color="blue">type</font> number}, {<font color="red">"1960"</font>, <font color="blue">type</font> number}, {<font color="red">"1961"</font>, <font color="blue">type</font> number}, {<font color="red">"1962"</font>, <font color="blue">type</font> number}, {<font color="red">"1963"</font>, <font color="blue">type</font> number}, {<font color="red">"1964"</font>, <font color="blue">type</font> number}, {<font color="red">"1965"</font>, <font color="blue">type</font> number}, {<font color="red">"1966"</font>, <font color="blue">type</font> number}, {<font color="red">"1970"</font>, <font color="blue">type</font> number}, {<font color="red">"1975"</font>, <font color="blue">type</font> number}, {<font color="red">"1980"</font>, <font color="blue">type</font> number}, {<font color="red">"1985"</font>, <font color="blue">type</font> number}, {<font color="red">"1986"</font>, <font color="blue">type</font> number}, {<font color="red">"1987"</font>, <font color="blue">type</font> number}, {<font color="red">"1988"</font>, <font color="blue">type</font> number}, {<font color="red">"1989"</font>, <font color="blue">type</font> number}, {<font color="red">"1990"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"1991"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"1992"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"1993"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"1994"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"1995"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"1996"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"1997"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"1998"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"1999"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2000"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2001"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2002"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2003"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2004"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2005"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2006"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2007"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2008"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2009"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2010"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2011"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2012"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2013"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2014"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2015"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2016"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2017"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2018"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2019"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2020"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2021"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Tipo Alterado1"</font>,{{<font color="red">"Sigla"</font>, <font color="red">"Sigla_UF"</font>}}),<br></br>    #<font color="red">"Outras Colunas Não Dinâmicas"</font> = <font color="purple">Table.Unpivot</font>OtherColumns(#<font color="red">"Colunas Renomeadas"</font>, {<font color="red">"Sigla_UF"</font>, <font color="red">"Estado"</font>}, <font color="red">"Atributo"</font>, <font color="red">"Valor"</font>),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Outras Colunas Não Dinâmicas"</font>,{<font color="red">"Estado"</font>})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Colunas Removidas"</font><br></br><br></br><br></br>----------------------<br></br>Raking<br></br><br></br><font color="blue">let</font><br></br>    Fonte = <font color="purple">Table.FromRows</font>(<font color="purple">Json.Document</font>(<font color="purple">Binary.Decompress</font>(<font color="purple">Binary.From</font>Text("pZJNSgNBEIWvUgwEFBKZHCGaxLiIxERXIYSa7lIb+o/uaRDv4ClcBBdeINu+mD2DBv+YSXQzMNX9vap6r5fLbGGYII6csm4WnzQXjOBcaJF+rwLq0oBCYRzY9Em1Xj9bdb9SF8PJdH0z/g4okvc18pO4xgeEIXlS1tFdAuILFwioA0ro7N+51uEEM1M4esQWEOO2pi6DWo98iQVJYkJRAvx6gaE+bFzhQ2FazcuMB5su9fOTPM9hgoUoE0u+RWUsNOq4QQ+zuC2kYFgRc9IcwZIDhjYJ/VGEUWKhV5lryafjo1MXSnPcIjfigWHcxGeTSh0YyKDTdhphTpW97y0OEamjGWiUt8nnUnhlWtKhu+DqlVJtYpRg8ZWLncU5KCEbPG4QS1EH68whyOf+QyONbxn+9zR2GZwZ56h96j0z/dfLqF5Do8LqDQ==", <font color="purple">BinaryEncoding.Base64</font>), <font color="purple">Compression.Deflate</font>)), <font color="blue">let</font> _t = ((<font color="blue">type</font> nullable <font color="blue">text</font>) meta [Serialized.Text = <font color="blue">true</font>]) <font color="blue">in</font> <font color="blue">type</font> table [Area = _t, Indice = _t, Observações = _t, Referencias = _t]),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(Fonte,{{<font color="red">"Area"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Indice"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Referencias"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Valor Substituído1"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Tipo Alterado"</font>,<font color="red">"Taxa Analfabetismo"</font>,<font color="red">"Taxa Analfabetismo"</font>,<font color="purple">Replacer.ReplaceText</font>,{<font color="red">"Indice"</font>}),<br></br>    #<font color="red">"Valor Substituído2"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Valor Substituído1"</font>,<font color="red">"Taxa Analfabetismo"</font>,<font color="red">"Taxa Analfabetismo"</font>,<font color="purple">Replacer.ReplaceText</font>,{<font color="red">"Indice"</font>})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Valor Substituído2"</font><br></br><br></br><br></br>----------------------<br></br>Indices_mais_recentes<br></br><br></br><font color="blue">let</font><br></br>    Fonte = <font color="purple">Table.Combine</font>({#<font color="red">"SOC_Taxa de Pobreza"</font>, #<font color="red">"SOC_Indice de Gini"</font>, #"SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais", SOC_IDHM_por_UF, #"FIN_Renda per capita (Atlas DH - Pnad Contínua/A)", #<font color="red">"FIN_Receitas x Despesas"</font>, #"FIN_Receita corrente - receita bruta - estadual", #<font color="red">"SEG_Ocorrências Criminais"</font>, #<font color="red">"SEG_Homicidios por 100k Habitantes"</font>, #"SAU_Estabelecimento de saude(DataSUS)", #<font color="red">"SAU_Medicos por 10k Habitantes"</font>, #"EDU_% Alunos na Rede Pública", #"SOC_Taxa de desemprego (IBGE - Continua)", #"SOC_Taxa de desemprego por Ano (IBGE - Continua)"}),<br></br>    #<font color="red">"Colunas Removidas1"</font> = <font color="purple">Table.RemoveColumns</font>(Fonte,{<font color="red">"Codigo"</font>, <font color="red">"Periodo"</font>, <font color="red">"Trimestres"</font>, <font color="red">"Indice"</font>, <font color="red">"Vítimas"</font>, <font color="red">"Ano_Data"</font>}),<br></br>    #<font color="red">"Colunas Renomeadas1"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Colunas Removidas1"</font>,{{"Valor(%)<font color="red">", "</font>% Alunos na Rede"}}),<br></br>    #<font color="red">"Outras Colunas Não Dinâmicas"</font> = <font color="purple">Table.Unpivot</font>OtherColumns(#<font color="red">"Colunas Renomeadas1"</font>, {<font color="red">"Ano"</font>, <font color="red">"Sigla_UF"</font>}, <font color="red">"Atributo"</font>, <font color="red">"Valor"</font>),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Outras Colunas Não Dinâmicas"</font>,{{<font color="red">"Atributo"</font>, <font color="red">"Indice"</font>}}),<br></br>    #<font color="red">"Linhas Filtradas"</font> = <font color="purple">Table.SelectRows</font>(#<font color="red">"Colunas Renomeadas"</font>, each ([Ano] <> <font color="blue">null</font>) and ([Indice] <> <font color="red">"Ano_Data"</font> and [Indice] <> <font color="red">"Codigo"</font> and [Indice] <> <font color="red">"Indice"</font> and [Indice] <> <font color="red">"Periodo"</font> and [Indice] <> <font color="red">"Tipo Crime"</font> and [Indice] <> <font color="red">"Trimestres"</font> and [Indice] <> <font color="red">"UF"</font>)),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Linhas Filtradas"</font>,{{<font color="red">"Valor"</font>, <font color="blue">type</font> number}, {<font color="red">"Ano"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Linhas Filtradas1"</font> = <font color="purple">Table.SelectRows</font>(#<font color="red">"Tipo Alterado"</font>, each [Ano] = #<font color="red">"Ano Filtragem Indices"</font>),<br></br>    #<font color="red">"Coluna Condicional Adicionada"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tipo Alterado"</font>, <font color="red">"Indices_Ranking"</font>, each if [Indice] = <font color="red">"Indice de Gini"</font> then <font color="red">"Índice Gini"</font> else if [Indice] = <font color="red">"Receita bruta"</font> then "Receita - Despesas (Bruto)" else if [Indice] = <font color="red">"Tx Homicidio por 100.000 Habitantes"</font> then <font color="red">"Homicídios por 100 mil Habitantes"</font> else if [Indice] = <font color="red">"Qtd Estabelecimentos de saude"</font> then <font color="red">"Estabelecimentos de Saúde"</font> else if [Indice] = "% Alunos na Rede<font color="red">" then "</font>% Alunos na Rede Pública" else [Indice], <font color="blue">type</font> <font color="blue">text</font>),<br></br>    #<font color="red">"Coluna Condicional Adicionada1"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Coluna Condicional Adicionada"</font>, <font color="red">"Area"</font>, each if [Indices_Ranking] = <font color="red">"Taxa de Pobreza"</font> then <font color="red">"Sociedade"</font> else if [Indices_Ranking] = <font color="red">"Índice Gini"</font> then <font color="red">"Sociedade"</font> else if [Indices_Ranking] = <font color="red">"Taxa Analfabetismo"</font> then <font color="red">"Educação"</font> else if [Indices_Ranking] = <font color="red">"Taxa Desemprego"</font> then <font color="red">"Sociedade"</font> else if [Indices_Ranking] = <font color="red">"IDH"</font> then <font color="red">"Sociedade"</font> else if [Indices_Ranking] = <font color="red">"Estabelecimentos de Saúde"</font> then <font color="red">"Saúde"</font> else if [Indices_Ranking] = <font color="red">"Médicos por 10 mil Habitantes"</font> then <font color="red">"Saúde"</font> else if [Indices_Ranking] = <font color="red">"Renda per capita"</font> then <font color="red">"Finanças Públicas"</font> else if [Indices_Ranking] = "Receitas - Despesas (Bruto)<font color="red">" then "</font>Finanças Públicas" else if [Indices_Ranking] = "% Alunos na Rede Pública<font color="red">" then "</font>Educação" else if [Indices_Ranking] = <font color="red">"Homicídios por 100 mil Habitantes"</font> then <font color="red">"Segurança"</font> else if [Indices_Ranking] = <font color="red">"Estupros"</font> then <font color="red">"Segurança"</font> else if [Indices_Ranking] = <font color="red">"Homicídios Doloso"</font> then <font color="red">"Segurança"</font> else <font color="red">"Finanças Públicas"</font>, <font color="blue">type</font> <font color="blue">text</font>)<br></br><font color="blue">in</font><br></br>    #<font color="red">"Coluna Condicional Adicionada1"</font><br></br><br></br><br></br>----------------------<br></br>Ano Filtragem Indices<br></br><br></br>2023 meta [IsParameterQuery=<font color="blue">true</font>, List={2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026}, DefaultValue=2022, Type=<font color="red">"Number"</font>, IsParameterQueryRequired=<font color="blue">true</font>]<br></br><br></br><br></br>----------------------<br></br>SOC_Taxa de desemprego por Ano (IBGE - Continua)<br></br><br></br><font color="blue">let</font><br></br>    Fonte = <font color="purple">Web.BrowserContents</font>("http:<font color="green">//www.ipeadata.gov.br/ExibeSerieR.aspx?stub=1&serid=2096726928&MINDATA=2014&MAXDATA=2025&TNIVID=2&TPAID=1&module=S"),
</font>
    Séries1 = <font color="purple">Html.Table</font>(Fonte, {{<font color="red">"Column1"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(1)"}, {<font color="red">"Column2"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(2)"}, {<font color="red">"Column3"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(3)"}, {<font color="red">"Column4"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(4)"}, {<font color="red">"Column5"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(5)"}, {<font color="red">"Column6"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(6)"}, {<font color="red">"Column7"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(7)"}, {<font color="red">"Column8"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(8)"}, {<font color="red">"Column9"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(9)"}, {<font color="red">"Column10"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(10)"}, {<font color="red">"Column11"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(11)"}, {<font color="red">"Column12"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(12)"}, {<font color="red">"Column13"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(13)"}, {<font color="red">"Column14"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(14)"}, {<font color="red">"Column15"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(15)"}, {<font color="red">"Column16"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(16)"}, {<font color="red">"Column17"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(17)"}, {<font color="red">"Column18"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(18)"}, {<font color="red">"Column19"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(19)"}, {<font color="red">"Column20"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(20)"}, {<font color="red">"Column21"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(21)"}, {<font color="red">"Column22"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(22)"}, {<font color="red">"Column23"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(23)"}, {<font color="red">"Column24"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(24)"}, {<font color="red">"Column25"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(25)"}, {<font color="red">"Column26"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(26)"}, {<font color="red">"Column27"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(27)"}, {<font color="red">"Column28"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(28)"}, {<font color="red">"Column29"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(29)"}, {<font color="red">"Column30"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(30)"}, {<font color="red">"Column31"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(31)"}, {<font color="red">"Column32"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(32)"}, {<font color="red">"Column33"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(33)"}, {<font color="red">"Column34"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(34)"}, {<font color="red">"Column35"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(35)"}, {<font color="red">"Column36"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(36)"}, {<font color="red">"Column37"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(37)"}, {<font color="red">"Column38"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(38)"}, {<font color="red">"Column39"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(39)"}, {<font color="red">"Column40"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(40)"}, {<font color="red">"Column41"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(41)"}, {<font color="red">"Column42"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(42)"}, {<font color="red">"Column43"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(43)"}, {<font color="red">"Column44"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(44)"}, {<font color="red">"Column45"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(45)"}}, [RowSelector="TABLE[id='grd_DXMainTable'] > * > TR"]),<br></br>    #<font color="red">"Cabeçalhos Promovidos"</font> = <font color="purple">Table.PromoteHeaders</font>(Séries1, [PromoteAllScalars=<font color="blue">true</font>]),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Cabeçalhos Promovidos"</font>,{{<font color="red">"Sigla"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Estado"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"2014 T1"</font>, <font color="blue">type</font> number}, {<font color="red">"2014 T2"</font>, <font color="blue">type</font> number}, {<font color="red">"2014 T3"</font>, <font color="blue">type</font> number}, {<font color="red">"2014 T4"</font>, <font color="blue">type</font> number}, {<font color="red">"2015 T1"</font>, <font color="blue">type</font> number}, {<font color="red">"2015 T2"</font>, <font color="blue">type</font> number}, {<font color="red">"2015 T3"</font>, <font color="blue">type</font> number}, {<font color="red">"2015 T4"</font>, <font color="blue">type</font> number}, {<font color="red">"2016 T1"</font>, <font color="blue">type</font> number}, {<font color="red">"2016 T2"</font>, <font color="blue">type</font> number}, {<font color="red">"2016 T3"</font>, <font color="blue">type</font> number}, {<font color="red">"2016 T4"</font>, <font color="blue">type</font> number}, {<font color="red">"2017 T1"</font>, <font color="blue">type</font> number}, {<font color="red">"2017 T2"</font>, <font color="blue">type</font> number}, {<font color="red">"2017 T3"</font>, <font color="blue">type</font> number}, {<font color="red">"2017 T4"</font>, <font color="blue">type</font> number}, {<font color="red">"2018 T1"</font>, <font color="blue">type</font> number}, {<font color="red">"2018 T2"</font>, <font color="blue">type</font> number}, {<font color="red">"2018 T3"</font>, <font color="blue">type</font> number}, {<font color="red">"2018 T4"</font>, <font color="blue">type</font> number}, {<font color="red">"2019 T1"</font>, <font color="blue">type</font> number}, {<font color="red">"2019 T2"</font>, <font color="blue">type</font> number}, {<font color="red">"2019 T3"</font>, <font color="blue">type</font> number}, {<font color="red">"2019 T4"</font>, <font color="blue">type</font> number}, {<font color="red">"2020 T1"</font>, <font color="blue">type</font> number}, {<font color="red">"2020 T2"</font>, <font color="blue">type</font> number}, {<font color="red">"2020 T3"</font>, <font color="blue">type</font> number}, {<font color="red">"2020 T4"</font>, <font color="blue">type</font> number}, {<font color="red">"2021 T1"</font>, <font color="blue">type</font> number}, {<font color="red">"2021 T2"</font>, <font color="blue">type</font> number}, {<font color="red">"2021 T3"</font>, <font color="blue">type</font> number}, {<font color="red">"2021 T4"</font>, <font color="blue">type</font> number}, {<font color="red">"2022 T1"</font>, <font color="blue">type</font> number}, {<font color="red">"2022 T2"</font>, <font color="blue">type</font> number}, {<font color="red">"2022 T3"</font>, <font color="blue">type</font> number}, {<font color="red">"2022 T4"</font>, <font color="blue">type</font> number}, {<font color="red">"2023 T1"</font>, <font color="blue">type</font> number}, {<font color="red">"2023 T2"</font>, <font color="blue">type</font> number}, {<font color="red">"2023 T3"</font>, <font color="blue">type</font> number}, {<font color="red">"2023 T4"</font>, <font color="blue">type</font> number}, {<font color="red">"2024 T1"</font>, <font color="blue">type</font> number}}),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Tipo Alterado"</font>,{{<font color="red">"Sigla"</font>, <font color="red">"Sigla_UF"</font>}}),<br></br>    #<font color="red">"Somente as Colunas Selecionadas Foram Transformadas em Linhas"</font> = <font color="purple">Table.Unpivot</font>(#<font color="red">"Colunas Renomeadas"</font>, {<font color="red">"2014 T1"</font>, <font color="red">"2014 T2"</font>, <font color="red">"2014 T3"</font>, <font color="red">"2014 T4"</font>, <font color="red">"2015 T1"</font>, <font color="red">"2015 T2"</font>, <font color="red">"2015 T3"</font>, <font color="red">"2015 T4"</font>, <font color="red">"2016 T1"</font>, <font color="red">"2016 T2"</font>, <font color="red">"2016 T3"</font>, <font color="red">"2016 T4"</font>, <font color="red">"2017 T1"</font>, <font color="red">"2017 T2"</font>, <font color="red">"2017 T3"</font>, <font color="red">"2017 T4"</font>, <font color="red">"2018 T1"</font>, <font color="red">"2018 T2"</font>, <font color="red">"2018 T3"</font>, <font color="red">"2018 T4"</font>, <font color="red">"2019 T1"</font>, <font color="red">"2019 T2"</font>, <font color="red">"2019 T3"</font>, <font color="red">"2019 T4"</font>, <font color="red">"2020 T1"</font>, <font color="red">"2020 T2"</font>, <font color="red">"2020 T3"</font>, <font color="red">"2020 T4"</font>, <font color="red">"2021 T1"</font>, <font color="red">"2021 T2"</font>, <font color="red">"2021 T3"</font>, <font color="red">"2021 T4"</font>, <font color="red">"2022 T1"</font>, <font color="red">"2022 T2"</font>, <font color="red">"2022 T3"</font>, <font color="red">"2022 T4"</font>, <font color="red">"2023 T1"</font>, <font color="red">"2023 T2"</font>, <font color="red">"2023 T3"</font>, <font color="red">"2023 T4"</font>, <font color="red">"2024 T1"</font>}, <font color="red">"Atributo"</font>, <font color="red">"Valor"</font>),<br></br>    #<font color="red">"Colunas Renomeadas1"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Somente as Colunas Selecionadas Foram Transformadas em Linhas"</font>,{{<font color="red">"Atributo"</font>, <font color="red">"Periodo"</font>}, {<font color="red">"Valor"</font>, "Taxa Desemprego %"}}),<br></br>    #<font color="red">"Coluna Duplicada"</font> = <font color="purple">Table.DuplicateColumn</font>(#<font color="red">"Colunas Renomeadas1"</font>, <font color="red">"Periodo"</font>, "Periodo - Copiar"),<br></br>    #<font color="red">"Colunas Renomeadas2"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Coluna Duplicada"</font>,{{"Periodo - Copiar<font color="red">", "</font>Trimestres"}}),<br></br>    #<font color="red">"Valor Substituído"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Colunas Renomeadas2"</font>,<font color="red">" T1"</font>,<font color="red">"/01/01"</font>,<font color="purple">Replacer.ReplaceText</font>,{<font color="red">"Trimestres"</font>}),<br></br>    #<font color="red">"Valor Substituído1"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Valor Substituído"</font>,<font color="red">" T2"</font>,<font color="red">"/04/01"</font>,<font color="purple">Replacer.ReplaceText</font>,{<font color="red">"Trimestres"</font>}),<br></br>    #<font color="red">"Valor Substituído2"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Valor Substituído1"</font>,<font color="red">" T3"</font>,<font color="red">"/07/01"</font>,<font color="purple">Replacer.ReplaceText</font>,{<font color="red">"Trimestres"</font>}),<br></br>    #<font color="red">"Valor Substituído3"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Valor Substituído2"</font>,<font color="red">" T4"</font>,<font color="red">"/10/01"</font>,<font color="purple">Replacer.ReplaceText</font>,{<font color="red">"Trimestres"</font>}),<br></br>    #<font color="red">"Tipo Alterado1"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Valor Substituído3"</font>,{{<font color="red">"Trimestres"</font>, <font color="blue">type</font> datetime}}),<br></br>    #<font color="red">"Ano Inserido"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tipo Alterado1"</font>, <font color="red">"Ano"</font>, each <font color="purple">Date.Year</font>([Trimestres]), <font color="purple">Int64.Type</font>),<br></br>    #<font color="red">"Linhas Agrupadas"</font> = <font color="purple">Table.Group</font>(#<font color="red">"Ano Inserido"</font>, {<font color="red">"Sigla_UF"</font>, <font color="red">"Estado"</font>, <font color="red">"Ano"</font>}, {{"Taxa Desemprego média anual %", each <font color="purple">List.Average</font>([#"Taxa Desemprego %"]), <font color="blue">type</font> number}}),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Linhas Agrupadas"</font>,{<font color="red">"Estado"</font>})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Colunas Removidas"</font><br></br><br></br><br></br>----------------------<br></br>SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais<br></br><br></br><font color="blue">let</font><br></br>    Fonte = <font color="purple">Web.BrowserContents</font>("http:<font color="green">//www.ipeadata.gov.br/ExibeSerieR.aspx?stub=1&serid=2096726941&MINDATA=2015&MAXDATA=2030&TNIVID=2&TPAID=1&module=S"),
</font>
    #<font color="red">"Tabela extraída de HTML"</font> = <font color="purple">Html.Table</font>(Fonte, {{<font color="red">"Column1"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(1)"}, {<font color="red">"Column2"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(2)"}, {<font color="red">"Column3"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(3)"}, {<font color="red">"Column4"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(4)"}, {<font color="red">"Column5"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(5)"}, {<font color="red">"Column6"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(6)"}, {<font color="red">"Column7"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(7)"}, {<font color="red">"Column8"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(8)"}}, [RowSelector="TABLE[id='grd_DXMainTable'] > * > TR"]),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Tabela extraída de HTML"</font>,{{<font color="red">"Column1"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column2"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column3"</font>, <font color="blue">type</font> number}, {<font color="red">"Column4"</font>, <font color="blue">type</font> number}, {<font color="red">"Column5"</font>, <font color="blue">type</font> number}, {<font color="red">"Column6"</font>, <font color="blue">type</font> number}, {<font color="red">"Column7"</font>, <font color="blue">type</font> number}, {<font color="red">"Column8"</font>, <font color="blue">type</font> number}}),<br></br>    #<font color="red">"Cabeçalhos Promovidos"</font> = <font color="purple">Table.PromoteHeaders</font>(#<font color="red">"Tipo Alterado"</font>, [PromoteAllScalars=<font color="blue">true</font>]),<br></br>    #<font color="red">"Tipo Alterado1"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Cabeçalhos Promovidos"</font>,{{<font color="red">"Sigla"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Estado"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"2016"</font>, <font color="blue">type</font> number}, {<font color="red">"2017"</font>, <font color="blue">type</font> number}, {<font color="red">"2018"</font>, <font color="blue">type</font> number}, {<font color="red">"2019"</font>, <font color="blue">type</font> number}, {<font color="red">"2022"</font>, <font color="blue">type</font> number}, {<font color="red">"2023"</font>, <font color="blue">type</font> number}}),<br></br>    #<font color="red">"Outras Colunas Não Dinâmicas"</font> = <font color="purple">Table.Unpivot</font>OtherColumns(#<font color="red">"Tipo Alterado1"</font>, {<font color="red">"Sigla"</font>, <font color="red">"Estado"</font>}, <font color="red">"Atributo"</font>, <font color="red">"Valor"</font>),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Outras Colunas Não Dinâmicas"</font>,{{<font color="red">"Valor"</font>, <font color="red">"Taxa Analfabetismo"</font>}, {<font color="red">"Atributo"</font>, <font color="red">"Ano"</font>}, {<font color="red">"Sigla"</font>, <font color="red">"Sigla_UF"</font>}}),<br></br>    #<font color="red">"Tipo Alterado2"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Colunas Renomeadas"</font>,{{<font color="red">"Ano"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Tipo Alterado2"</font>,{<font color="red">"Estado"</font>})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Colunas Removidas"</font><br></br><br></br><br></br>----------------------<br></br>Indices_agregados_classificados<br></br><br></br><font color="blue">let</font><br></br>    Fonte = <font color="purple">Table.Combine</font>({#<font color="red">"SOC_Taxa de Pobreza"</font>, #<font color="red">"SOC_Indice de Gini"</font>, #"SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais", SOC_IDHM_por_UF, #"FIN_Renda per capita (Atlas DH - Pnad Contínua/A)", #<font color="red">"FIN_Receitas x Despesas"</font>, #"FIN_Receita corrente - receita bruta - estadual", #<font color="red">"SEG_Ocorrências Criminais"</font>, #<font color="red">"SEG_Homicidios por 100k Habitantes"</font>, #"SAU_Estabelecimento de saude(DataSUS)", #<font color="red">"SAU_Medicos por 10k Habitantes"</font>, #"EDU_% Alunos na Rede Pública", #"SOC_Taxa de desemprego (IBGE - Continua)", #"SOC_Taxa de desemprego por Ano (IBGE - Continua)"}),<br></br>    #<font color="red">"Colunas Removidas1"</font> = <font color="purple">Table.RemoveColumns</font>(Fonte,{<font color="red">"Codigo"</font>, <font color="red">"Periodo"</font>, <font color="red">"Trimestres"</font>, <font color="red">"Indice"</font>, <font color="red">"Vítimas"</font>, <font color="red">"Ano_Data"</font>}),<br></br>    #<font color="red">"Colunas Renomeadas1"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Colunas Removidas1"</font>,{{"Valor(%)<font color="red">", "</font>% Alunos na Rede"}}),<br></br>    #<font color="red">"Outras Colunas Não Dinâmicas"</font> = <font color="purple">Table.Unpivot</font>OtherColumns(#<font color="red">"Colunas Renomeadas1"</font>, {<font color="red">"Ano"</font>, <font color="red">"Sigla_UF"</font>}, <font color="red">"Atributo"</font>, <font color="red">"Valor"</font>),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Outras Colunas Não Dinâmicas"</font>,{{<font color="red">"Atributo"</font>, <font color="red">"Indice"</font>}}),<br></br>    #<font color="red">"Linhas Filtradas"</font> = <font color="purple">Table.SelectRows</font>(#<font color="red">"Colunas Renomeadas"</font>, each ([Ano] <> <font color="blue">null</font>) and ([Indice] <> <font color="red">"Ano_Data"</font> and [Indice] <> <font color="red">"Codigo"</font> and [Indice] <> <font color="red">"Indice"</font> and [Indice] <> <font color="red">"Periodo"</font> and [Indice] <> <font color="red">"Tipo Crime"</font> and [Indice] <> <font color="red">"Trimestres"</font> and [Indice] <> <font color="red">"UF"</font>)),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Linhas Filtradas"</font>,{{<font color="red">"Valor"</font>, <font color="blue">type</font> number}, {<font color="red">"Ano"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Linhas Filtradas1"</font> = <font color="purple">Table.SelectRows</font>(#<font color="red">"Tipo Alterado"</font>, each [Ano] = #<font color="red">"Ano Filtragem Indices"</font>),<br></br>    #<font color="red">"Coluna Condicional Adicionada"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tipo Alterado"</font>, <font color="red">"Indices_Ranking"</font>, each if [Indice] = <font color="red">"Indice de Gini"</font> then <font color="red">"Índice Gini"</font> else if [Indice] = <font color="red">"Receita bruta"</font> then "Receita - Despesas (Bruto)" else if [Indice] = <font color="red">"Tx Homicidio por 100.000 Habitantes"</font> then <font color="red">"Homicídios por 100 mil Habitantes"</font> else if [Indice] = <font color="red">"Qtd Estabelecimentos de saude"</font> then <font color="red">"Estabelecimentos de Saúde"</font> else if [Indice] = "% Alunos na Rede<font color="red">" then "</font>% Alunos na Rede Pública" else [Indice], <font color="blue">type</font> <font color="blue">text</font>),<br></br>    #<font color="red">"Coluna Condicional Adicionada1"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Coluna Condicional Adicionada"</font>, <font color="red">"Area"</font>, each if [Indices_Ranking] = <font color="red">"Taxa de Pobreza"</font> then <font color="red">"Sociedade"</font> else if [Indices_Ranking] = <font color="red">"Índice Gini"</font> then <font color="red">"Sociedade"</font> else if [Indices_Ranking] = <font color="red">"Taxa Analfabetismo"</font> then <font color="red">"Educação"</font> else if [Indices_Ranking] = <font color="red">"Taxa Desemprego"</font> then <font color="red">"Sociedade"</font> else if [Indices_Ranking] = <font color="red">"IDH"</font> then <font color="red">"Sociedade"</font> else if [Indices_Ranking] = <font color="red">"Estabelecimentos de Saúde"</font> then <font color="red">"Saúde"</font> else if [Indices_Ranking] = <font color="red">"Médicos por 10 mil Habitantes"</font> then <font color="red">"Saúde"</font> else if [Indices_Ranking] = <font color="red">"Renda per capita"</font> then <font color="red">"Finanças Públicas"</font> else if [Indices_Ranking] = "Receitas - Despesas (Bruto)<font color="red">" then "</font>Finanças Públicas" else if [Indices_Ranking] = "% Alunos na Rede Pública<font color="red">" then "</font>Educação" else if [Indices_Ranking] = <font color="red">"Homicídios por 100 mil Habitantes"</font> then <font color="red">"Segurança"</font> else if [Indices_Ranking] = <font color="red">"Estupros"</font> then <font color="red">"Segurança"</font> else if [Indices_Ranking] = <font color="red">"Homicídios Doloso"</font> then <font color="red">"Segurança"</font> else <font color="red">"Finanças Públicas"</font>, <font color="blue">type</font> <font color="blue">text</font>)<br></br><font color="blue">in</font><br></br>    #<font color="red">"Coluna Condicional Adicionada1"</font><br></br><br></br><br></br>----------------------<br></br>Indices Ano mais recente<br></br><br></br><br></br>FILTER( 'Indices_agregados_classificados', 'Indices_agregados_classificados'[Ano] = CALCULATE( MAX('Indices_agregados_classificados'[Ano]), ALLEXCEPT('Indices_agregados_classificados', 'Indices_agregados_classificados'[Sigla_UF], 'Indices_agregados_classificados'[Indice], 'Indices_agregados_classificados'[Indices_Ranking], 'Indices_agregados_classificados'[Area]) ) )<br></br><br></br><br></br>----------------------<br></br></font></div><br></br><hr></hr><br></br><h3><div>Partitions:</div></h3><br></br><table border='1px' cellpadding='1' cellspacing='1'><tr ><td >Name</td><td >QueryDefinition</td></tr><tr ><td >UFs(ibge)</td><td ><font color="blue">let</font><br></br>    Fonte = <font color="purple">Json.Document</font>(<font color="purple">Web.Contents</font>("https:<font color="green">//servicodados.ibge.gov.br/api/v1/localidades/regioes/1|2|3|4|5/estados")),</font><br></br>    #<font color="red">"Convertido para Tabela"</font> = <font color="purple">Table.FromList</font>(Fonte, <font color="purple">Splitter.SplitByNothing</font>(), <font color="blue">null</font>, <font color="blue">null</font>, <font color="purple">ExtraValues.Error</font>),<br></br>    #<font color="red">"Column1 Expandido"</font> = <font color="purple">Table.ExpandRecordColumn</font>(#<font color="red">"Convertido para Tabela"</font>, <font color="red">"Column1"</font>, {<font color="red">"id"</font>, <font color="red">"sigla"</font>, <font color="red">"nome"</font>, <font color="red">"regiao"</font>}, {<font color="red">"id"</font>, <font color="red">"sigla"</font>, <font color="red">"nome"</font>, <font color="red">"regiao"</font>}),<br></br>    #<font color="red">"regiao Expandido"</font> = <font color="purple">Table.ExpandRecordColumn</font>(#<font color="red">"Column1 Expandido"</font>, <font color="red">"regiao"</font>, {<font color="red">"id"</font>, <font color="red">"sigla"</font>, <font color="red">"nome"</font>}, {<font color="red">"regiao.id"</font>, <font color="red">"regiao.sigla"</font>, <font color="red">"regiao.nome"</font>}),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"regiao Expandido"</font>,{{<font color="red">"id"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"sigla"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"nome"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"regiao.id"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"regiao.sigla"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"regiao.nome"</font>, <font color="blue">type</font> <font color="blue">text</font>}}),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Tipo Alterado"</font>,{{<font color="red">"id"</font>, <font color="red">"UF_id"</font>}, {<font color="red">"nome"</font>, <font color="red">"nome_UF"</font>}, {<font color="red">"regiao.id"</font>, <font color="red">"regiao_id"</font>}}),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Colunas Renomeadas"</font>,{<font color="red">"regiao.sigla"</font>, <font color="red">"regiao.nome"</font>}),<br></br>    #<font color="red">"Colunas Renomeadas1"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Colunas Removidas"</font>,{{<font color="red">"sigla"</font>, <font color="red">"Sigla_UF"</font>}}),<br></br>    #<font color="red">"Personalização Adicionada"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Colunas Renomeadas1"</font>, <font color="red">"Pais"</font>, each <font color="red">"Brasil"</font>),<br></br>    #<font color="red">"Colunas Renomeadas2"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Personalização Adicionada"</font>,{{<font color="red">"Pais"</font>, <font color="red">"País"</font>}}),<br></br>    #<font color="red">"Coluna Condicional Adicionada"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Colunas Renomeadas2"</font>, <font color="red">"id_map"</font>, each if [nome_UF] = <font color="red">"Rondônia"</font> then <font color="red">"Rondonia"</font> else if [nome_UF] = <font color="red">"Pará"</font> then <font color="red">"Para"</font> else if [nome_UF] = <font color="red">"Amapá"</font> then <font color="red">"Amapa"</font> else if [nome_UF] = <font color="red">"Maranhão"</font> then <font color="red">"Maranhao"</font> else if [nome_UF] = <font color="red">"Piauí"</font> then <font color="red">"Piaui"</font> else if [nome_UF] = <font color="red">"Ceará"</font> then <font color="red">"Ceara"</font> else if [nome_UF] = <font color="red">"Paraíba"</font> then <font color="red">"Paraiba"</font> else if [nome_UF] = <font color="red">"Espírito Santo"</font> then <font color="red">"Espirito Santo"</font> else if [nome_UF] = <font color="red">"São Paulo"</font> then <font color="red">"Sao Paulo"</font> else if [nome_UF] = <font color="red">"Paraná"</font> then <font color="red">"Parana"</font> else if [nome_UF] = <font color="red">"Goiás"</font> then <font color="red">"Goias"</font> else [nome_UF], <font color="blue">type</font> <font color="blue">text</font>)<br></br><font color="blue">in</font><br></br>    #<font color="red">"Coluna Condicional Adicionada"</font></td></tr><tr ><td >Populacao Historica UFs</td><td ><font color="blue">let</font><br></br>    Fonte = <font color="purple">Web.BrowserContents</font>("http:<font color="green">//www.ipeadata.gov.br/ExibeSerieR.aspx?stub=1&serid=1678536198&MINDATA=1990&MAXDATA=2025&TNIVID=2&TPAID=1&module=R"),</font><br></br>    #<font color="red">"Tabela extraída de HTML"</font> = <font color="purple">Html.Table</font>(Fonte, {{<font color="red">"Column1"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(1)"}, {<font color="red">"Column2"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(2)"}, {<font color="red">"Column3"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(3)"}, {<font color="red">"Column4"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(4)"}, {<font color="red">"Column5"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(5)"}, {<font color="red">"Column6"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(6)"}, {<font color="red">"Column7"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(7)"}, {<font color="red">"Column8"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(8)"}}, [RowSelector="TABLE[id='grd_DXMainTable'] > * > TR"]),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Tabela extraída de HTML"</font>,{{<font color="red">"Column1"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column2"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column3"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column4"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column5"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column6"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column7"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column8"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Cabeçalhos Promovidos"</font> = <font color="purple">Table.PromoteHeaders</font>(#<font color="red">"Tipo Alterado"</font>, [PromoteAllScalars=<font color="blue">true</font>]),<br></br>    #<font color="red">"Tipo Alterado1"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Cabeçalhos Promovidos"</font>,{{<font color="red">"Sigla"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Estado"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"1991"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"1996"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2000"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2007"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2010"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2022"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Somente as Colunas Selecionadas Foram Transformadas em Linhas"</font> = <font color="purple">Table.Unpivot</font>(#<font color="red">"Tipo Alterado1"</font>, {<font color="red">"1991"</font>, <font color="red">"1996"</font>, <font color="red">"2000"</font>, <font color="red">"2007"</font>, <font color="red">"2010"</font>, <font color="red">"2022"</font>}, <font color="red">"Atributo"</font>, <font color="red">"Valor"</font>),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Somente as Colunas Selecionadas Foram Transformadas em Linhas"</font>,{{<font color="red">"Atributo"</font>, <font color="red">"Ano"</font>}, {<font color="red">"Valor"</font>, <font color="red">"População"</font>}, {<font color="red">"Sigla"</font>, <font color="red">"Sigla_UF"</font>}}),<br></br>    #<font color="red">"Tipo Alterado2"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Colunas Renomeadas"</font>,{{<font color="red">"População"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Ano"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Tipo Alterado2"</font>,{<font color="red">"Estado"</font>})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Colunas Removidas"</font></td></tr><tr ><td >FIN_PIB Estadual</td><td ><font color="blue">let</font><br></br>    Fonte = <font color="purple">Web.BrowserContents</font>("http:<font color="green">//www.ipeadata.gov.br/ExibeSerieR.aspx?stub=1&serid=1540855420&MINDATA=2014&MAXDATA=2025&TNIVID=2&TPAID=1&module=R"),</font><br></br>    #<font color="red">"Tabela extraída de HTML"</font> = <font color="purple">Html.Table</font>(Fonte, {{<font color="red">"Column1"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(1)"}, {<font color="red">"Column2"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(2)"}, {<font color="red">"Column3"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(3)"}, {<font color="red">"Column4"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(4)"}, {<font color="red">"Column5"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(5)"}, {<font color="red">"Column6"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(6)"}, {<font color="red">"Column7"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(7)"}, {<font color="red">"Column8"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(8)"}, {<font color="red">"Column9"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(9)"}, {<font color="red">"Column10"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(10)"}}, [RowSelector="TABLE[id='grd_DXMainTable'] > * > TR"]),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Tabela extraída de HTML"</font>,{{<font color="red">"Column1"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column2"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column3"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column4"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column5"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column6"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column7"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column8"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column9"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column10"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Cabeçalhos Promovidos"</font> = <font color="purple">Table.PromoteHeaders</font>(#<font color="red">"Tipo Alterado"</font>, [PromoteAllScalars=<font color="blue">true</font>]),<br></br>    #<font color="red">"Tipo Alterado1"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Cabeçalhos Promovidos"</font>,{{<font color="red">"Sigla"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Estado"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"2014"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2015"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2016"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2017"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2018"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2019"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2020"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2021"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Somente as Colunas Selecionadas Foram Transformadas em Linhas"</font> = <font color="purple">Table.Unpivot</font>(#<font color="red">"Tipo Alterado1"</font>, {<font color="red">"2014"</font>, <font color="red">"2015"</font>, <font color="red">"2016"</font>, <font color="red">"2017"</font>, <font color="red">"2018"</font>, <font color="red">"2019"</font>, <font color="red">"2020"</font>, <font color="red">"2021"</font>}, <font color="red">"Atributo"</font>, <font color="red">"Valor"</font>),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Somente as Colunas Selecionadas Foram Transformadas em Linhas"</font>,{{<font color="red">"Atributo"</font>, <font color="red">"Ano"</font>}, {<font color="red">"Valor"</font>, <font color="red">"Valor PIB Estadual"</font>}, {<font color="red">"Sigla"</font>, <font color="red">"Sigla_UF"</font>}}),<br></br>    #<font color="red">"Tipo Alterado2"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Colunas Renomeadas"</font>,{{<font color="red">"Ano"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Colunas Renomeadas1"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Tipo Alterado2"</font>,{{<font color="red">"Valor PIB Estadual"</font>, <font color="red">"Valor PIB Estadual / 1000"</font>}}),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Colunas Renomeadas1"</font>,{<font color="red">"Estado"</font>})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Colunas Removidas"</font></td></tr><tr ><td >Territorios(ipea)</td><td ><font color="blue">let</font><br></br>    Fonte = <font color="purple">Json.Document</font>(<font color="purple">Web.Contents</font>(<font color="red">"http:<font color="green">//www.ipeadata.gov.br/api/odata4/Territorios"</font>)),</font><br></br>    #<font color="red">"Convertido para Tabela"</font> = <font color="purple">Table.FromRecords</font>({Fonte}),<br></br>    #<font color="red">"value Expandido"</font> = <font color="purple">Table.ExpandListColumn</font>(#<font color="red">"Convertido para Tabela"</font>, <font color="red">"value"</font>),<br></br>    #<font color="red">"value Expandido1"</font> = <font color="purple">Table.ExpandRecordColumn</font>(#<font color="red">"value Expandido"</font>, <font color="red">"value"</font>, {<font color="red">"NIVNOME"</font>, <font color="red">"TERCODIGO"</font>, <font color="red">"TERNOME"</font>, <font color="red">"TERNOMEPADRAO"</font>, <font color="red">"TERCAPITAL"</font>, <font color="red">"TERAREA"</font>, <font color="red">"NIVAMC"</font>}, {<font color="red">"value.NIVNOME"</font>, <font color="red">"value.TERCODIGO"</font>, <font color="red">"value.TERNOME"</font>, <font color="red">"value.TERNOMEPADRAO"</font>, <font color="red">"value.TERCAPITAL"</font>, <font color="red">"value.TERAREA"</font>, <font color="red">"value.NIVAMC"</font>}),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"value Expandido1"</font>,{{<font color="red">"value.TERAREA"</font>, "Área do território (em km²)"}, {<font color="red">"value.TERCAPITAL"</font>, <font color="red">"CAPITAL"</font>}}),<br></br>    #<font color="red">"Linhas Filtradas"</font> = <font color="purple">Table.SelectRows</font>(#<font color="red">"Colunas Renomeadas"</font>, each ([value.NIVNOME] <> <font color="red">""</font> and [value.NIVNOME] <> "AMC 1872-00" and [value.NIVNOME] <> "AMC 20-00" and [value.NIVNOME] <> "AMC 40-00" and [value.NIVNOME] <> "AMC 60-00" and [value.NIVNOME] <> "AMC 70-00" and [value.NIVNOME] <> "AMC 91-00")),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Linhas Filtradas"</font>,{"@odata.context"}),<br></br>    #<font color="red">"Colunas Renomeadas1"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Colunas Removidas"</font>,{{<font color="red">"value.NIVNOME"</font>, <font color="red">"Tipo Regiao"</font>}, {<font color="red">"value.TERCODIGO"</font>, <font color="red">"Municipio_id"</font>}, {<font color="red">"value.TERNOME"</font>, <font color="red">"Município"</font>}}),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Colunas Renomeadas1"</font>,{{"Área do território (em km²)", <font color="blue">type</font> number}, {<font color="red">"Tipo Regiao"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Municipio_id"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Município"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"value.TERNOMEPADRAO"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"CAPITAL"</font>, <font color="blue">type</font> logical}, {<font color="red">"value.NIVAMC"</font>, <font color="blue">type</font> logical}}),<br></br>    #<font color="red">"Colunas Removidas1"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Tipo Alterado"</font>,{<font color="red">"value.NIVAMC"</font>}),<br></br>    #<font color="red">"Erros Removidos"</font> = <font color="purple">Table.RemoveRows</font>WithErrors(#<font color="red">"Colunas Removidas1"</font>, {<font color="red">"Municipio_id"</font>}),<br></br>    #<font color="red">"Linhas Filtradas1"</font> = <font color="purple">Table.SelectRows</font>(#<font color="red">"Erros Removidos"</font>, each ([Tipo Regiao] = <font color="red">"Estados"</font>)),<br></br>    #<font color="red">"Colunas Renomeadas2"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Linhas Filtradas1"</font>,{{<font color="red">"value.TERNOMEPADRAO"</font>, <font color="red">"TERNOMEPADRAO"</font>}}),<br></br>    #<font color="red">"Coluna Condicional Adicionada"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Colunas Renomeadas2"</font>, <font color="red">"Sigla_UF"</font>, each if [TERNOMEPADRAO] = <font color="red">"RONDONIA"</font> then <font color="red">"RO"</font> else if [TERNOMEPADRAO] = <font color="red">"ACRE"</font> then <font color="red">"AC"</font> else if [TERNOMEPADRAO] = <font color="red">"RORAIMA"</font> then <font color="red">"RR"</font> else if [TERNOMEPADRAO] = <font color="red">"PARA"</font> then <font color="red">"PA"</font> else if [TERNOMEPADRAO] = <font color="red">"TOCANTINS"</font> then <font color="red">"TO"</font> else if [TERNOMEPADRAO] = <font color="red">"MARANHAO"</font> then <font color="red">"MA"</font> else if [TERNOMEPADRAO] = <font color="red">"PIAUI"</font> then <font color="red">"PI"</font> else if [TERNOMEPADRAO] = <font color="red">"CEARA"</font> then <font color="red">"CE"</font> else if [TERNOMEPADRAO] = <font color="red">"RIO GRANDE DO NORTE"</font> then <font color="red">"RN"</font> else if [TERNOMEPADRAO] = <font color="red">"PARAIBA"</font> then <font color="red">"PB"</font> else if [TERNOMEPADRAO] = <font color="red">"PERNAMBUCO"</font> then <font color="red">"PE"</font> else if [TERNOMEPADRAO] = <font color="red">"ALAGOAS"</font> then <font color="red">"AL"</font> else if [TERNOMEPADRAO] = <font color="red">"SERGIPE"</font> then <font color="red">"SE"</font> else if [TERNOMEPADRAO] = <font color="red">"BAHIA"</font> then <font color="red">"BA"</font> else if [TERNOMEPADRAO] = <font color="red">"MINAS GERAIS"</font> then <font color="red">"MG"</font> else if [TERNOMEPADRAO] = <font color="red">"ESPIRITO SANTO"</font> then <font color="red">"ES"</font> else if [TERNOMEPADRAO] = <font color="red">"RIO DE JANEIRO"</font> then <font color="red">"RJ"</font> else if [TERNOMEPADRAO] = <font color="red">"SAO PAULO"</font> then <font color="red">"SP"</font> else if [TERNOMEPADRAO] = <font color="red">"PARANA"</font> then <font color="red">"PR"</font> else if [TERNOMEPADRAO] = <font color="red">"SANTA CATARINA"</font> then <font color="red">"SC"</font> else if [TERNOMEPADRAO] = <font color="red">"RIO GRANDE DO SUL"</font> then <font color="red">"RS"</font> else if [TERNOMEPADRAO] = <font color="red">"MATO GROSSO DO SUL"</font> then <font color="red">"MS"</font> else if [TERNOMEPADRAO] = <font color="red">"MATO GROSSO"</font> then <font color="red">"MT"</font> else if [TERNOMEPADRAO] = <font color="red">"GOIAS"</font> then <font color="red">"GO"</font> else if [TERNOMEPADRAO] = <font color="red">"DISTRITO FEDERAL"</font> then <font color="red">"DF"</font> else <font color="red">"AM"</font>, <font color="blue">type</font> <font color="blue">text</font>)<br></br><font color="blue">in</font><br></br>    #<font color="red">"Coluna Condicional Adicionada"</font></td></tr><tr ><td >SOC_IDHM_por_UF</td><td ><font color="blue">let</font><br></br>    Fonte = <font color="purple">Web.BrowserContents</font>("http:<font color="green">//www.ipeadata.gov.br/ExibeSerieR.aspx?stub=1&serid=40037&MINDATA=2015&MAXDATA=2025&TNIVID=2&TPAID=1&module=S"),</font><br></br>    #<font color="red">"Tabela extraída de HTML"</font> = <font color="purple">Html.Table</font>(Fonte, {{<font color="red">"Column1"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(1)"}, {<font color="red">"Column2"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(2)"}, {<font color="red">"Column3"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(3)"}, {<font color="red">"Column4"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(4)"}, {<font color="red">"Column5"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(5)"}, {<font color="red">"Column6"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(6)"}, {<font color="red">"Column7"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(7)"}, {<font color="red">"Column8"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(8)"}, {<font color="red">"Column9"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(9)"}, {<font color="red">"Column10"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(10)"}, {<font color="red">"Column11"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(11)"}, {<font color="red">"Column12"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(12)"}, {<font color="red">"Column13"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(13)"}, {<font color="red">"Column14"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(14)"}, {<font color="red">"Column15"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(15)"}, {<font color="red">"Column16"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(16)"}, {<font color="red">"Column17"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(17)"}}, [RowSelector="TABLE[id='grd_DXMainTable'] > * > TR"]),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Tabela extraída de HTML"</font>,{{<font color="red">"Column1"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column2"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column3"</font>, <font color="blue">type</font> number}, {<font color="red">"Column4"</font>, <font color="blue">type</font> number}, {<font color="red">"Column5"</font>, <font color="blue">type</font> number}, {<font color="red">"Column6"</font>, <font color="blue">type</font> number}, {<font color="red">"Column7"</font>, <font color="blue">type</font> number}, {<font color="red">"Column8"</font>, <font color="blue">type</font> number}, {<font color="red">"Column9"</font>, <font color="blue">type</font> number}, {<font color="red">"Column10"</font>, <font color="blue">type</font> number}, {<font color="red">"Column11"</font>, <font color="blue">type</font> number}, {<font color="red">"Column12"</font>, <font color="blue">type</font> number}, {<font color="red">"Column13"</font>, <font color="blue">type</font> number}, {<font color="red">"Column14"</font>, <font color="blue">type</font> number}, {<font color="red">"Column15"</font>, <font color="blue">type</font> number}, {<font color="red">"Column16"</font>, <font color="blue">type</font> number}, {<font color="red">"Column17"</font>, <font color="blue">type</font> number}}),<br></br>    #<font color="red">"Cabeçalhos Promovidos"</font> = <font color="purple">Table.PromoteHeaders</font>(#<font color="red">"Tipo Alterado"</font>, [PromoteAllScalars=<font color="blue">true</font>]),<br></br>    #<font color="red">"Outras Colunas Não Dinâmicas"</font> = <font color="purple">Table.Unpivot</font>OtherColumns(#<font color="red">"Cabeçalhos Promovidos"</font>, {<font color="red">"Sigla"</font>, <font color="red">"Estado"</font>}, <font color="red">"Atributo"</font>, <font color="red">"Valor"</font>),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Outras Colunas Não Dinâmicas"</font>,{{<font color="red">"Valor"</font>, <font color="red">"IDHM_UF"</font>}, {<font color="red">"Atributo"</font>, <font color="red">"Ano"</font>}, {<font color="red">"Sigla"</font>, <font color="red">"Sigla_UF"</font>}}),<br></br>    #<font color="red">"Tipo Alterado2"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Colunas Renomeadas"</font>,{{<font color="red">"IDHM_UF"</font>, <font color="blue">type</font> number}}),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Tipo Alterado2"</font>,{<font color="red">"Estado"</font>})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Colunas Removidas"</font></td></tr><tr ><td >EDU_% Alunos na Rede Pública</td><td ><font color="blue">let</font><br></br>    Fonte = <font color="purple">Web.BrowserContents</font>("http:<font color="green">//www.ipeadata.gov.br/ExibeSerieR.aspx?stub=1&serid=2096726958&MINDATA=2015&MAXDATA=2025&TNIVID=2&TPAID=1&module=S"),</font><br></br>    Séries1 = <font color="purple">Html.Table</font>(Fonte, {{<font color="red">"Column1"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(1)"}, {<font color="red">"Column2"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(2)"}, {<font color="red">"Column3"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(3)"}, {<font color="red">"Column4"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(4)"}, {<font color="red">"Column5"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(5)"}, {<font color="red">"Column6"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(6)"}, {<font color="red">"Column7"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(7)"}, {<font color="red">"Column8"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(8)"}}, [RowSelector="TABLE[id='grd_DXMainTable'] > * > TR"]),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(Séries1,{{<font color="red">"Column1"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column2"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column3"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column4"</font>, <font color="blue">type</font> number}, {<font color="red">"Column5"</font>, <font color="blue">type</font> number}, {<font color="red">"Column6"</font>, <font color="blue">type</font> number}, {<font color="red">"Column7"</font>, <font color="blue">type</font> number}, {<font color="red">"Column8"</font>, <font color="blue">type</font> number}}),<br></br>    #<font color="red">"Cabeçalhos Promovidos"</font> = <font color="purple">Table.PromoteHeaders</font>(#<font color="red">"Tipo Alterado"</font>, [PromoteAllScalars=<font color="blue">true</font>]),<br></br>    #<font color="red">"Tipo Alterado1"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Cabeçalhos Promovidos"</font>,{{<font color="red">"Sigla"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Estado"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"2017"</font>, <font color="blue">type</font> number}, {<font color="red">"2018"</font>, <font color="blue">type</font> number}, {<font color="red">"2019"</font>, <font color="blue">type</font> number}, {<font color="red">"2022"</font>, <font color="blue">type</font> number}, {<font color="red">"2023"</font>, <font color="blue">type</font> number}}),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Tipo Alterado1"</font>,{{<font color="red">"Sigla"</font>, <font color="red">"Sigla_UF"</font>}}),<br></br>    #<font color="red">"Somente as Colunas Selecionadas Foram Transformadas em Linhas"</font> = <font color="purple">Table.Unpivot</font>(#<font color="red">"Colunas Renomeadas"</font>, {<font color="red">"2016"</font>, <font color="red">"2017"</font>, <font color="red">"2018"</font>, <font color="red">"2019"</font>, <font color="red">"2022"</font>, <font color="red">"2023"</font>}, <font color="red">"Atributo"</font>, <font color="red">"Valor"</font>),<br></br>    #<font color="red">"Tipo Alterado3"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Somente as Colunas Selecionadas Foram Transformadas em Linhas"</font>,{{<font color="red">"Valor"</font>, <font color="blue">type</font> number}}),<br></br>    #<font color="red">"Colunas Renomeadas1"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Tipo Alterado3"</font>,{{<font color="red">"Valor"</font>, "Valor(%)"}, {<font color="red">"Atributo"</font>, <font color="red">"Ano"</font>}}),<br></br>    #<font color="red">"Tipo Alterado2"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Colunas Renomeadas1"</font>,{{<font color="red">"Ano"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Data Inserida"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tipo Alterado2"</font>, <font color="red">"Ano_Data"</font>, each <font color="purple">Date.From</font>(<font color="purple">Text.From</font>([Ano], "pt-BR")), <font color="blue">type</font> <font color="blue">date</font>),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Data Inserida"</font>,{<font color="red">"Estado"</font>})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Colunas Removidas"</font></td></tr><tr ><td >Governadores (wikimedia)</td><td ><font color="blue">let</font><br></br>    Fonte = <font color="purple">Web.BrowserContents</font>(<font color="red">"https:<font color="green">//www.wikiwand.com/pt/Lista_de_governadores_das_unidades_federativas_do_Brasil"</font>),</font><br></br>    #<font color="red">"Tabela extraída de HTML"</font> = <font color="purple">Html.Table</font>(Fonte, {{<font color="red">"Column1"</font>, "TH + TD + *"}, {<font color="red">"Column2"</font>, "BR:nth-child(2) + A"}, {<font color="red">"Column3"</font>, ".pcs-collapse-table-container B"}, {<font color="red">"Column4"</font>, "TD:nth-child(6)"}, {<font color="red">"Column5"</font>, <font color="red">"SMALL A"</font>}, {<font color="red">"Column6"</font>, ".pcs-collapse-table-container B *"}, {<font color="red">"Column7"</font>, "TD:nth-child(6) A"}, {<font color="red">"Column8"</font>, "B + BR + *"}, {<font color="red">"Column9"</font>, "TD:nth-child(1) A:nth-child(2)"}, {<font color="red">"Column10"</font>, "P SMALL *"}, {<font color="red">"Column11"</font>, "TD .mw-redirect"}, {<font color="red">"Column12"</font>, ".default-touch-area .mw-reflink-<font color="blue">text</font>"}, {<font color="red">"Column13"</font>, "B + P SMALL"}, {<font color="red">"Column14"</font>, "BR + .<font color="blue">date</font> *"}, {<font color="red">"Column15"</font>, ".right-touch-area .mw-reflink-<font color="blue">text</font>"}, {<font color="red">"Column16"</font>, "TD:nth-child(4) .<font color="blue">date</font>:nth-child(3)"}, {<font color="red">"Column17"</font>, "TD:nth-child(4) SMALL"}}, [RowSelector="BR:nth-child(2) + A"]),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Tabela extraída de HTML"</font>,{{<font color="red">"Column1"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column2"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column3"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column4"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column5"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column6"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column7"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column8"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column9"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column10"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column11"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column12"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column13"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column14"</font>, <font color="blue">type</font> <font color="blue">date</font>}, {<font color="red">"Column15"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column16"</font>, <font color="blue">type</font> <font color="blue">date</font>}, {<font color="red">"Column17"</font>, <font color="blue">type</font> <font color="blue">text</font>}}),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Tipo Alterado"</font>,{<font color="red">"Column11"</font>, <font color="red">"Column12"</font>, <font color="red">"Column13"</font>, <font color="red">"Column14"</font>, <font color="red">"Column15"</font>, <font color="red">"Column16"</font>, <font color="red">"Column17"</font>, <font color="red">"Column7"</font>, <font color="red">"Column8"</font>, <font color="red">"Column9"</font>, <font color="red">"Column10"</font>, <font color="red">"Column5"</font>, <font color="red">"Column6"</font>}),<br></br>    #<font color="red">"Coluna Condicional Adicionada1"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Colunas Removidas"</font>, <font color="red">"Sigla_UF"</font>, each if [Column2] = <font color="red">"Acre"</font> then <font color="red">"AC"</font> else if [Column2] = <font color="red">"Alagoas"</font> then <font color="red">"AL"</font> else if [Column2] = <font color="red">"Amapá"</font> then <font color="red">"AP"</font> else if [Column2] = <font color="red">"Amazonas"</font> then <font color="red">"AM"</font> else if [Column2] = <font color="red">"Bahia"</font> then <font color="red">"BA"</font> else if [Column2] = <font color="red">"Ceará"</font> then <font color="red">"CE"</font> else if [Column2] = <font color="red">"Distrito Federal"</font> then <font color="red">"DF"</font> else if [Column2] = <font color="red">"Espírito Santo"</font> then <font color="red">"ES"</font> else if [Column2] = <font color="red">"Goiás"</font> then <font color="red">"GO"</font> else if [Column2] = <font color="red">"Maranhão"</font> then <font color="red">"MA"</font> else if [Column2] = <font color="red">"Mato Grosso do Sul"</font> then <font color="red">"MS"</font> else if [Column2] = <font color="red">"Pará"</font> then <font color="red">"PA"</font> else if [Column2] = <font color="red">"Paraíba"</font> then <font color="red">"PB"</font> else if [Column2] = <font color="red">"Paraná"</font> then <font color="red">"PR"</font> else if [Column2] = <font color="red">"Pernambuco"</font> then <font color="red">"PE"</font> else if [Column2] = <font color="red">"Piauí"</font> then <font color="red">"PI"</font> else if [Column2] = <font color="red">"Rio de Janeiro"</font> then <font color="red">"RJ"</font> else if [Column2] = <font color="red">"Rio Grande do Norte"</font> then <font color="red">"RN"</font> else if [Column2] = <font color="red">"Rio Grande do Sul"</font> then <font color="red">"RS"</font> else if [Column2] = <font color="red">"Rondônia"</font> then <font color="red">"RO"</font> else if [Column2] = <font color="red">"Roraima"</font> then <font color="red">"RR"</font> else if [Column2] = <font color="red">"Santa Catarina"</font> then <font color="red">"SC"</font> else if [Column2] = <font color="red">"São Paulo"</font> then <font color="red">"SP"</font> else if [Column2] = <font color="red">"Sergipe"</font> then <font color="red">"SE"</font> else if [Column2] = <font color="red">"Tocantins"</font> then <font color="red">"TO"</font> else <font color="red">"MG"</font>, <font color="blue">type</font> <font color="blue">text</font>),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Coluna Condicional Adicionada1"</font>,{{<font color="red">"Column1"</font>, "Nome Fanta - Nome"}, {<font color="red">"Column2"</font>, <font color="red">"Nome_UF"</font>}, {<font color="red">"Column3"</font>, <font color="red">"Nome"</font>}, {<font color="red">"Column4"</font>, <font color="red">"Mandato"</font>}}),<br></br>    #<font color="red">"Coluna Condicional Adicionada2"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Colunas Renomeadas"</font>, <font color="red">"Personalizar"</font>, each if [Nome] = <font color="red">"Gladson Cameli"</font> then "https:<font color="green">//upload.wikimedia.org/wikipedia/commons/thumb/f/f0/Retrato_oficial_Gladson_Cameli_2019.jpg/225px-Retrato_oficial_Gladson_Cameli_2019.jpg" else if [Nome] = <font color="red">"Paulo Dantas"</font> then "https://upload.wikimedia.org/wikipedia/commons/thumb/6/63/Paulo_Dantas_-_Deputado_Estadual_%28cropped%29.jpg/224px-Paulo_Dantas_-_Deputado_Estadual_%28cropped%29.jpg" else if [Nome] = <font color="red">"Clécio Luis"</font> then "https://upload.wikimedia.org/wikipedia/commons/thumb/a/ab/Cl%C3%A9cio_Luis_em_fevereiro_de_2018_%282%29.jpg/225px-Cl%C3%A9cio_Luis_em_fevereiro_de_2018_%282%29.jpg" else if [Nome] = <font color="red">"Wilson Lima"</font> then "https://upload.wikimedia.org/wikipedia/commons/thumb/c/cd/Wilson_Miranda_Lima.jpg/225px-Wilson_Miranda_Lima.jpg" else if [Nome] = <font color="red">"Jerônimo Rodrigues"</font> then "https://upload.wikimedia.org/wikipedia/commons/thumb/8/8c/18_01_2023_-_Visita_de_Cortesia_Jer%C3%B4nimo_Rodrigues_%28Governador_do_Estado_da_Bahia-BA%29_%2852635213362%29_%28cropped%29.jpg/225px-18_01_2023_-_Visita_de_Cortesia_Jer%C3%B4nimo_Rodrigues_%28Governador_do_Estado_da_Bahia-BA%29_%2852635213362%29_%28cropped%29.jpg" else if [Nome] = <font color="red">"Elmano de Freitas"</font> then "https://upload.wikimedia.org/wikipedia/commons/thumb/a/a1/Elmano_de_Freitas_2023.jpg/236px-Elmano_de_Freitas_2023.jpg" else if [Nome] = <font color="red">"Ibaneis Rocha"</font> then "https://upload.wikimedia.org/wikipedia/commons/thumb/e/eb/Ibaneis_posse_no_Buriti_-_Foto_Divulga%C3%A7%C3%A3o_GDF_%2839740238043%29.jpg/190px-Ibaneis_posse_no_Buriti_-_Foto_Divulga%C3%A7%C3%A3o_GDF_%2839740238043%29.jpg" else if [Nome] = <font color="red">"Renato Casagrande"</font> then "https://upload.wikimedia.org/wikipedia/commons/thumb/7/7f/Renato_Casagrande_em_mar%C3%A7o_de_2019.jpg/225px-Renato_Casagrande_em_mar%C3%A7o_de_2019.jpg" else if [Nome] = <font color="red">"Ronaldo Caiado"</font> then "https://upload.wikimedia.org/wikipedia/commons/thumb/2/27/Ronaldo_Caiado_%28cropped%29.jpg/224px-Ronaldo_Caiado_%28cropped%29.jpg" else if [Nome] = <font color="red">"Carlos Brandão Júnior"</font> then "https://upload.wikimedia.org/wikipedia/commons/thumb/1/1b/Retrato_Oficial_de_Carlos_Brand%C3%A3o_como_governador_do_Maranh%C3%A3o.jpg/230px-Retrato_Oficial_de_Carlos_Brand%C3%A3o_como_governador_do_Maranh%C3%A3o.jpg" else if [Nome] = <font color="red">"Mauro Mendes"</font> then "https://upload.wikimedia.org/wikipedia/commons/thumb/7/7a/Mauro_Mendes_como_governador_do_Mato_Grosso.jpg/225px-Mauro_Mendes_como_governador_do_Mato_Grosso.jpg" else if [Nome] = <font color="red">"Eduardo Riedel"</font> then "https://upload.wikimedia.org/wikipedia/commons/thumb/3/35/Retrato_do_Governador_Eduardo_Riedel.jpg/240px-Retrato_do_Governador_Eduardo_Riedel.jpg" else if [Nome] = <font color="red">"Romeu Zema"</font> then "https://upload.wikimedia.org/wikipedia/commons/thumb/8/8d/Romeu_Zema_em_fevereiro_de_2019.jpg/225px-Romeu_Zema_em_fevereiro_de_2019.jpg" else if [Nome] = <font color="red">"Helder Barbalho"</font> then "https://upload.wikimedia.org/wikipedia/commons/thumb/9/9f/DSC_8092_%2852992242395%29_%28cropped%29.jpg/225px-DSC_8092_%2852992242395%29_%28cropped%29.jpg" else if [Nome] = <font color="red">"João Azevêdo"</font> then "https://upload.wikimedia.org/wikipedia/commons/thumb/b/b7/Jo%C3%A3o_Azev%C3%AAdo_em_abril_de_2019.jpg/225px-Jo%C3%A3o_Azev%C3%AAdo_em_abril_de_2019.jpg" else if [Nome] = <font color="red">"Ratinho Júnior"</font> then "https://upload.wikimedia.org/wikipedia/commons/thumb/d/db/Ratinho_J%C3%BAnior_em_fevereiro_de_2019.jpg/225px-Ratinho_J%C3%BAnior_em_fevereiro_de_2019.jpg" else if [Nome] = <font color="red">"Raquel Lyra"</font> then "https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/RL45_14-09.jpg/225px-RL45_14-09.jpg" else if [Nome] = <font color="red">"Rafael Fonteles"</font> then "https://upload.wikimedia.org/wikipedia/commons/thumb/3/30/Rafael_Tajra_Fonteles%2C_presidente_do_Comsefaz_%28cropped%29.jpg/225px-Rafael_Tajra_Fonteles%2C_presidente_do_Comsefaz_%28cropped%29.jpg" else if [Nome] = <font color="red">"Cláudio Castro"</font> then "https://upload.wikimedia.org/wikipedia/commons/thumb/c/c0/Claudio_Castro_como_Vice_Governador_do_Rio_de_Janeiro.jpg/225px-Claudio_Castro_como_Vice_Governador_do_Rio_de_Janeiro.jpg" else if [Nome] = <font color="red">"Fátima Bezerra"</font> then "https://upload.wikimedia.org/wikipedia/commons/thumb/f/fe/F%C3%A1tima_Bezerra_como_governadora_do_Rio_Grande_do_Norte.png/225px-F%C3%A1tima_Bezerra_como_governadora_do_Rio_Grande_do_Norte.png" else if [Nome] = <font color="red">"Eduardo Leite"</font> then "https://upload.wikimedia.org/wikipedia/commons/thumb/3/3b/Eduardo_Leite_no_Pal%C3%A1cio_Piratini_em_mar%C3%A7o_de_2019.jpg/225px-Eduardo_Leite_no_Pal%C3%A1cio_Piratini_em_mar%C3%A7o_de_2019.jpg" else if [Nome] = <font color="red">"Marcos Rocha"</font> then "https://upload.wikimedia.org/wikipedia/commons/thumb/9/91/Desfile_de_7_de_Setembro_08.09.22_Foto_Daiane_Mendon%C3%A7a_%28384%29_%2852342537421%29_%28cropped%29.jpg/225px-Desfile_de_7_de_Setembro_08.09.22_Foto_Daiane_Mendon%C3%A7a_%28384%29_%2852342537421%29_%28cropped%29.jpg" else if [Nome] = <font color="red">"Antonio Denarium"</font> then "https://upload.wikimedia.org/wikipedia/commons/thumb/d/d0/Foto_Governador_Antonio_Denarium.jpg/225px-Foto_Governador_Antonio_Denarium.jpg" else if [Nome] = <font color="red">"Jorginho Mello"</font> then "https://upload.wikimedia.org/wikipedia/commons/thumb/c/ce/Senador_Jorginho_Mello_%28cropped%29.jpg/225px-Senador_Jorginho_Mello_%28cropped%29.jpg" else if [Nome] = <font color="red">"Tarcísio de Freitas"</font> then "https://upload.wikimedia.org/wikipedia/commons/thumb/7/74/Governador_do_Estado_de_S%C3%A3o_Paulo%2C_Tarc%C3%ADsio_de_Freitas_-_Foto_Oficial_%28cropped%29.jpg/225px-Governador_do_Estado_de_S%C3%A3o_Paulo%2C_Tarc%C3%ADsio_de_Freitas_-_Foto_Oficial_%28cropped%29.jpg" else if [Nome] = <font color="red">"Fábio Mitidieri"</font> then "https://upload.wikimedia.org/wikipedia/commons/thumb/4/49/F%C3%A1bio_Mitidieri_em_dezembro_de_2016.jpg/226px-F%C3%A1bio_Mitidieri_em_dezembro_de_2016.jpg" else if [Nome] = <font color="red">"Wanderlei Barbosa"</font> then "https://upload.wikimedia.org/wikipedia/commons/thumb/6/6d/Wanderlei_Barbosa_como_governador_do_Tocantins.jpg/225px-Wanderlei_Barbosa_como_governador_do_Tocantins.jpg" else <font color="blue">null</font>, <font color="blue">type</font> <font color="blue">text</font>),</font><br></br>    #<font color="red">"Colunas Renomeadas1"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Coluna Condicional Adicionada2"</font>,{{<font color="red">"Personalizar"</font>, <font color="red">"Foto"</font>}}),<br></br>    #<font color="red">"Coluna Condicional Adicionada"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Colunas Renomeadas1"</font>, <font color="red">"Partido"</font>, each if [Nome] = <font color="red">"Gladson Cameli"</font> then <font color="red">"PP"</font> else if [Nome] = <font color="red">"Paulo Dantas"</font> then <font color="red">"MDB"</font> else if [Nome] = <font color="red">"Clécio Luis"</font> then <font color="red">"SOLIDARIEDADE"</font> else if [Nome] = <font color="red">"Wilson Lima"</font> then <font color="red">"UNIÃO"</font> else if [Nome] = <font color="red">"Jerônimo Rodrigues"</font> then <font color="red">"PT"</font> else if [Nome] = <font color="red">"Elmano de Freitas"</font> then <font color="red">"PT"</font> else if [Nome] = <font color="red">"Ibaneis Rocha"</font> then <font color="red">"MDB"</font> else if [Nome] = <font color="red">"Renato Casagrande"</font> then <font color="red">"PSB"</font> else if [Nome] = <font color="red">"Ronaldo Caiado"</font> then <font color="red">"UNIÃO"</font> else if [Nome] = <font color="red">"Carlos Brandão Júnior"</font> then <font color="red">"PSB"</font> else if [Nome] = <font color="red">"Mauro Mendes"</font> then <font color="red">"UNIÃO"</font> else if [Nome] = <font color="red">"Eduardo Riedel"</font> then <font color="red">"PSDB"</font> else if [Nome] = <font color="red">"Romeu Zema"</font> then <font color="red">"NOVO"</font> else if [Nome] = <font color="red">"Helder Barbalho"</font> then <font color="red">"MDB"</font> else if [Nome] = <font color="red">"João Azevêdo"</font> then <font color="red">"PSB"</font> else if [Nome] = <font color="red">"Ratinho Júnior"</font> then <font color="red">"PSB"</font> else if [Nome] = <font color="red">"Raquel Lyra"</font> then <font color="red">"PSDB"</font> else if [Nome] = <font color="red">"Rafael Fonteles"</font> then <font color="red">"PT"</font> else if [Nome] = <font color="red">"Cláudio Castro"</font> then <font color="red">"PL"</font> else if [Nome] = <font color="red">"Fátima Bezerra"</font> then <font color="red">"PT"</font> else if [Nome] = <font color="red">"Eduardo Leite"</font> then <font color="red">"PSDB"</font> else if [Nome] = <font color="red">"Marcos Rocha"</font> then <font color="red">"UNIÃO"</font> else if [Nome] = <font color="red">"Antonio Denarium"</font> then <font color="red">"PP"</font> else if [Nome] = <font color="red">"Jorginho Mello"</font> then <font color="red">"PL"</font> else if [Nome] = <font color="red">"Tarcísio de Freitas"</font> then <font color="red">"REPUBLICANOS"</font> else if [Nome] = <font color="red">"Fábio Mitidieri"</font> then <font color="red">"PSD"</font> else if [Nome] = <font color="red">"Wanderlei Barbosa"</font> then <font color="red">"REPUBLICANOS"</font> else <font color="blue">null</font>, <font color="blue">type</font> <font color="blue">text</font>),<br></br>    #<font color="red">"Colunas Renomeadas2"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Coluna Condicional Adicionada"</font>,{{<font color="red">"Sigla_UF"</font>, <font color="red">"Sigla"</font>}}),<br></br>    #<font color="red">"Coluna Condicional Adicionada3"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Colunas Renomeadas2"</font>, <font color="red">"Sigla_UF"</font>, each if [Nome_UF] = <font color="red">"Acre"</font> then <font color="red">"AC"</font> else if [Nome_UF] = <font color="red">"Alagoas"</font> then <font color="red">"AL"</font> else if [Nome_UF] = <font color="red">"Amapá"</font> then <font color="red">"AP"</font> else if [Nome_UF] = <font color="red">"Amazonas"</font> then <font color="red">"AM"</font> else if [Nome_UF] = <font color="red">"Bahia"</font> then <font color="red">"BA"</font> else if [Nome_UF] = <font color="red">"Ceará"</font> then <font color="red">"CE"</font> else if [Nome_UF] = <font color="red">"Distrito Federal"</font> then <font color="red">"DF"</font> else if [Nome_UF] = <font color="red">"Espírito Santo"</font> then <font color="red">"ES"</font> else if [Nome_UF] = <font color="red">"Goiás"</font> then <font color="red">"GO"</font> else if [Nome_UF] = <font color="red">"Maranhão"</font> then <font color="red">"MA"</font> else if [Nome_UF] = <font color="red">"Mato Grosso"</font> then <font color="red">"MT"</font> else if [Nome_UF] = <font color="red">"Mato Grosso do Sul"</font> then <font color="red">"MS"</font> else if [Nome_UF] = <font color="red">"Minas Gerais"</font> then <font color="red">"MG"</font> else if [Nome_UF] = <font color="red">"Pará"</font> then <font color="red">"PA"</font> else if [Nome_UF] = <font color="red">"Paraíba"</font> then <font color="red">"PB"</font> else if [Nome_UF] = <font color="red">"Paraná"</font> then <font color="red">"PR"</font> else if [Nome_UF] = <font color="red">"Pernambuco"</font> then <font color="red">"PE"</font> else if [Nome_UF] = <font color="red">"Piauí"</font> then <font color="red">"PI"</font> else if [Nome_UF] = <font color="red">"Rio de Janeiro"</font> then <font color="red">"RJ"</font> else if [Nome_UF] = <font color="red">"Rio Grande do Norte"</font> then <font color="red">"RN"</font> else if [Nome_UF] = <font color="red">"Rio Grande do Sul"</font> then <font color="red">"RS"</font> else if [Nome_UF] = <font color="red">"Rondônia"</font> then <font color="red">"RO"</font> else if [Nome_UF] = <font color="red">"Roraima"</font> then <font color="red">"RR"</font> else if [Nome_UF] = <font color="red">"Santa Catarina"</font> then <font color="red">"SC"</font> else if [Nome_UF] = <font color="red">"São Paulo"</font> then <font color="red">"SP"</font> else if [Nome_UF] = <font color="red">"Sergipe"</font> then <font color="red">"SE"</font> else if [Nome_UF] = <font color="red">"Tocantins"</font> then <font color="red">"TO"</font> else <font color="blue">null</font>, <font color="blue">type</font> <font color="blue">text</font>),<br></br>    #<font color="red">"Colunas Reordenadas"</font> = <font color="purple">Table.ReorderColumns</font>(#<font color="red">"Coluna Condicional Adicionada3"</font>,{"Nome Fanta - Nome<font color="red">", "</font>Nome_UF<font color="red">", "</font>Nome<font color="red">", "</font>Mandato<font color="red">", "</font>Sigla<font color="red">", "</font>Sigla_UF<font color="red">", "</font>Foto<font color="red">", "</font>Partido"}),<br></br>    #<font color="red">"Colunas Removidas1"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Colunas Reordenadas"</font>,{<font color="red">"Sigla"</font>}),<br></br>    #<font color="red">"Coluna Condicional Adicionada4"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Colunas Removidas1"</font>, <font color="red">"No governo desde "</font>, each if [Mandato] = "1  (2018)" then 2018 else 2022, <font color="blue">type</font> number)<br></br><font color="blue">in</font><br></br>    #<font color="red">"Coluna Condicional Adicionada4"</font></td></tr><tr ><td >SOC_Taxa de desemprego (IBGE - Continua)</td><td ><font color="blue">let</font><br></br>    Fonte = <font color="purple">Excel.Workbook</font>(<font color="purple">File.Contents</font>("C:\Users\jan_e\OneDrive\!!Painel Politicos x Estados - PWBI\Taxa de desemprego (IBGE - Continua).xls"), <font color="blue">null</font>, <font color="blue">true</font>),<br></br>    Séries1 = Fonte{[Name=<font color="red">"Séries"</font>]}[Data],<br></br>    #<font color="red">"Cabeçalhos Promovidos"</font> = <font color="purple">Table.PromoteHeaders</font>(Séries1, [PromoteAllScalars=<font color="blue">true</font>]),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Cabeçalhos Promovidos"</font>,{{<font color="red">"Sigla"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Codigo"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Estado"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"2014 T1"</font>, <font color="blue">type</font> number}, {<font color="red">"2014 T2"</font>, <font color="blue">type</font> number}, {<font color="red">"2014 T3"</font>, <font color="blue">type</font> number}, {<font color="red">"2014 T4"</font>, <font color="blue">type</font> number}, {<font color="red">"2015 T1"</font>, <font color="blue">type</font> number}, {<font color="red">"2015 T2"</font>, <font color="blue">type</font> number}, {<font color="red">"2015 T3"</font>, <font color="blue">type</font> number}, {<font color="red">"2015 T4"</font>, <font color="blue">type</font> number}, {<font color="red">"2016 T1"</font>, <font color="blue">type</font> number}, {<font color="red">"2016 T2"</font>, <font color="blue">type</font> number}, {<font color="red">"2016 T3"</font>, <font color="blue">type</font> number}, {<font color="red">"2016 T4"</font>, <font color="blue">type</font> number}, {<font color="red">"2017 T1"</font>, <font color="blue">type</font> number}, {<font color="red">"2017 T2"</font>, <font color="blue">type</font> number}, {<font color="red">"2017 T3"</font>, <font color="blue">type</font> number}, {<font color="red">"2017 T4"</font>, <font color="blue">type</font> number}, {<font color="red">"2018 T1"</font>, <font color="blue">type</font> number}, {<font color="red">"2018 T2"</font>, <font color="blue">type</font> number}, {<font color="red">"2018 T3"</font>, <font color="blue">type</font> number}, {<font color="red">"2018 T4"</font>, <font color="blue">type</font> number}, {<font color="red">"2019 T1"</font>, <font color="blue">type</font> number}, {<font color="red">"2019 T2"</font>, <font color="blue">type</font> number}, {<font color="red">"2019 T3"</font>, <font color="blue">type</font> number}, {<font color="red">"2019 T4"</font>, <font color="blue">type</font> number}, {<font color="red">"2020 T1"</font>, <font color="blue">type</font> number}, {<font color="red">"2020 T2"</font>, <font color="blue">type</font> number}, {<font color="red">"2020 T3"</font>, <font color="blue">type</font> number}, {<font color="red">"2020 T4"</font>, <font color="blue">type</font> number}, {<font color="red">"2021 T1"</font>, <font color="blue">type</font> number}, {<font color="red">"2021 T2"</font>, <font color="blue">type</font> number}, {<font color="red">"2021 T3"</font>, <font color="blue">type</font> number}, {<font color="red">"2021 T4"</font>, <font color="blue">type</font> number}, {<font color="red">"2022 T1"</font>, <font color="blue">type</font> number}, {<font color="red">"2022 T2"</font>, <font color="blue">type</font> number}, {<font color="red">"2022 T3"</font>, <font color="blue">type</font> number}, {<font color="red">"2022 T4"</font>, <font color="blue">type</font> number}, {<font color="red">"2023 T1"</font>, <font color="blue">type</font> number}, {<font color="red">"2023 T2"</font>, <font color="blue">type</font> number}, {<font color="red">"2023 T3"</font>, <font color="blue">type</font> number}, {<font color="red">"2023 T4"</font>, <font color="blue">type</font> number}, {<font color="red">"2024 T1"</font>, <font color="blue">type</font> number}}),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Tipo Alterado"</font>,{{<font color="red">"Sigla"</font>, <font color="red">"Sigla_UF"</font>}}),<br></br>    #<font color="red">"Somente as Colunas Selecionadas Foram Transformadas em Linhas"</font> = <font color="purple">Table.Unpivot</font>(#<font color="red">"Colunas Renomeadas"</font>, {<font color="red">"2014 T1"</font>, <font color="red">"2014 T2"</font>, <font color="red">"2014 T3"</font>, <font color="red">"2014 T4"</font>, <font color="red">"2015 T1"</font>, <font color="red">"2015 T2"</font>, <font color="red">"2015 T3"</font>, <font color="red">"2015 T4"</font>, <font color="red">"2016 T1"</font>, <font color="red">"2016 T2"</font>, <font color="red">"2016 T3"</font>, <font color="red">"2016 T4"</font>, <font color="red">"2017 T1"</font>, <font color="red">"2017 T2"</font>, <font color="red">"2017 T3"</font>, <font color="red">"2017 T4"</font>, <font color="red">"2018 T1"</font>, <font color="red">"2018 T2"</font>, <font color="red">"2018 T3"</font>, <font color="red">"2018 T4"</font>, <font color="red">"2019 T1"</font>, <font color="red">"2019 T2"</font>, <font color="red">"2019 T3"</font>, <font color="red">"2019 T4"</font>, <font color="red">"2020 T1"</font>, <font color="red">"2020 T2"</font>, <font color="red">"2020 T3"</font>, <font color="red">"2020 T4"</font>, <font color="red">"2021 T1"</font>, <font color="red">"2021 T2"</font>, <font color="red">"2021 T3"</font>, <font color="red">"2021 T4"</font>, <font color="red">"2022 T1"</font>, <font color="red">"2022 T2"</font>, <font color="red">"2022 T3"</font>, <font color="red">"2022 T4"</font>, <font color="red">"2023 T1"</font>, <font color="red">"2023 T2"</font>, <font color="red">"2023 T3"</font>, <font color="red">"2023 T4"</font>, <font color="red">"2024 T1"</font>}, <font color="red">"Atributo"</font>, <font color="red">"Valor"</font>),<br></br>    #<font color="red">"Colunas Renomeadas1"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Somente as Colunas Selecionadas Foram Transformadas em Linhas"</font>,{{<font color="red">"Atributo"</font>, <font color="red">"Periodo"</font>}, {<font color="red">"Valor"</font>, "Taxa Desemprego %"}}),<br></br>    #<font color="red">"Coluna Duplicada"</font> = <font color="purple">Table.DuplicateColumn</font>(#<font color="red">"Colunas Renomeadas1"</font>, <font color="red">"Periodo"</font>, "Periodo - Copiar"),<br></br>    #<font color="red">"Colunas Renomeadas2"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Coluna Duplicada"</font>,{{"Periodo - Copiar<font color="red">", "</font>Trimestres"}}),<br></br>    #<font color="red">"Valor Substituído"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Colunas Renomeadas2"</font>,<font color="red">" T1"</font>,<font color="red">"/01/01"</font>,<font color="purple">Replacer.ReplaceText</font>,{<font color="red">"Trimestres"</font>}),<br></br>    #<font color="red">"Valor Substituído1"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Valor Substituído"</font>,<font color="red">" T2"</font>,<font color="red">"/04/01"</font>,<font color="purple">Replacer.ReplaceText</font>,{<font color="red">"Trimestres"</font>}),<br></br>    #<font color="red">"Valor Substituído2"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Valor Substituído1"</font>,<font color="red">" T3"</font>,<font color="red">"/07/01"</font>,<font color="purple">Replacer.ReplaceText</font>,{<font color="red">"Trimestres"</font>}),<br></br>    #<font color="red">"Valor Substituído3"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Valor Substituído2"</font>,<font color="red">" T4"</font>,<font color="red">"/10/01"</font>,<font color="purple">Replacer.ReplaceText</font>,{<font color="red">"Trimestres"</font>}),<br></br>    #<font color="red">"Tipo Alterado1"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Valor Substituído3"</font>,{{<font color="red">"Trimestres"</font>, <font color="blue">type</font> datetime}}),<br></br>    #<font color="red">"Ano Inserido"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tipo Alterado1"</font>, <font color="red">"Ano"</font>, each <font color="purple">Date.Year</font>([Trimestres]), <font color="purple">Int64.Type</font>),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Ano Inserido"</font>,{<font color="red">"Estado"</font>})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Colunas Removidas"</font></td></tr><tr ><td >SAU_Estabelecimento de saude(DataSUS)</td><td ><font color="blue">let</font><br></br>    Fonte = <font color="purple">Web.BrowserContents</font>("http:<font color="green">//www.ipeadata.gov.br/ExibeSerieR.aspx?stub=1&serid=2096726972&MINDATA=2015&MAXDATA=2025&TNIVID=2&TPAID=1&module=S"),</font><br></br>    #<font color="red">"Tabela extraída de HTML"</font> = <font color="purple">Html.Table</font>(Fonte, {{<font color="red">"Column1"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(1)"}, {<font color="red">"Column2"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(2)"}, {<font color="red">"Column3"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(3)"}, {<font color="red">"Column4"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(4)"}, {<font color="red">"Column5"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(5)"}, {<font color="red">"Column6"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(6)"}, {<font color="red">"Column7"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(7)"}, {<font color="red">"Column8"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(8)"}, {<font color="red">"Column9"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(9)"}, {<font color="red">"Column10"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(10)"}, {<font color="red">"Column11"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(11)"}}, [RowSelector="TABLE[id='grd_DXMainTable'] > * > TR"]),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Tabela extraída de HTML"</font>,{{<font color="red">"Column1"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column2"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column3"</font>, <font color="blue">type</font> number}, {<font color="red">"Column4"</font>, <font color="blue">type</font> number}, {<font color="red">"Column5"</font>, <font color="blue">type</font> number}, {<font color="red">"Column6"</font>, <font color="blue">type</font> number}, {<font color="red">"Column7"</font>, <font color="blue">type</font> number}, {<font color="red">"Column8"</font>, <font color="blue">type</font> number}, {<font color="red">"Column9"</font>, <font color="blue">type</font> number}, {<font color="red">"Column10"</font>, <font color="blue">type</font> number}, {<font color="red">"Column11"</font>, <font color="blue">type</font> number}}),<br></br>    #<font color="red">"Cabeçalhos Promovidos"</font> = <font color="purple">Table.PromoteHeaders</font>(#<font color="red">"Tipo Alterado"</font>, [PromoteAllScalars=<font color="blue">true</font>]),<br></br>    #<font color="red">"Outras Colunas Não Dinâmicas"</font> = <font color="purple">Table.Unpivot</font>OtherColumns(#<font color="red">"Cabeçalhos Promovidos"</font>, {<font color="red">"Sigla"</font>, <font color="red">"Estado"</font>}, <font color="red">"Atributo"</font>, <font color="red">"Valor"</font>),<br></br>    #<font color="red">"Tipo Alterado2"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Outras Colunas Não Dinâmicas"</font>,{{<font color="red">"Atributo"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Tipo Alterado2"</font>,{{<font color="red">"Atributo"</font>, <font color="red">"Ano"</font>}, {<font color="red">"Sigla"</font>, <font color="red">"Sigla_UF"</font>}, {<font color="red">"Valor"</font>, <font color="red">"Num_Estabelecimentos_Saude"</font>}}),<br></br>    #<font color="red">"Tipo Alterado3"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Colunas Renomeadas"</font>,{{<font color="red">"Num_Estabelecimentos_Saude"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Tipo Alterado3"</font>,{<font color="red">"Estado"</font>})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Colunas Removidas"</font></td></tr><tr ><td >FIN_PIB Brasil</td><td ><font color="blue">let</font><br></br>    Fonte = <font color="purple">Web.BrowserContents</font>("http:<font color="green">//www.ipeadata.gov.br/ExibeSerieR.aspx?stub=1&serid=1540855420&MINDATA=2014&MAXDATA=2030&TNIVID=0&TPAID=1&module=R"),</font><br></br>    #<font color="red">"Tabela extraída de HTML"</font> = <font color="purple">Html.Table</font>(Fonte, {{<font color="red">"Column1"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(1)"}, {<font color="red">"Column2"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(2)"}, {<font color="red">"Column3"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(3)"}, {<font color="red">"Column4"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(4)"}, {<font color="red">"Column5"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(5)"}, {<font color="red">"Column6"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(6)"}, {<font color="red">"Column7"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(7)"}, {<font color="red">"Column8"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(8)"}, {<font color="red">"Column9"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(9)"}, {<font color="red">"Column10"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(10)"}}, [RowSelector="TABLE[id='grd_DXMainTable'] > * > TR"]),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Tabela extraída de HTML"</font>,{{<font color="red">"Column1"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column2"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column3"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column4"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column5"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column6"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column7"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column8"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column9"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column10"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Cabeçalhos Promovidos"</font> = <font color="purple">Table.PromoteHeaders</font>(#<font color="red">"Tipo Alterado"</font>, [PromoteAllScalars=<font color="blue">true</font>]),<br></br>    #<font color="red">"Tipo Alterado1"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Cabeçalhos Promovidos"</font>,{{<font color="red">"Sigla"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Brasil"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"2014"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2015"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2016"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2017"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2018"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2019"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2020"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2021"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Tipo Alterado1"</font>,{{<font color="red">"Sigla"</font>, <font color="red">"Sigla_UF"</font>}, {<font color="red">"Brasil"</font>, <font color="red">"Estado"</font>}}),<br></br>    #<font color="red">"Colunas Não Dinâmicas"</font> = <font color="purple">Table.Unpivot</font>OtherColumns(#<font color="red">"Colunas Renomeadas"</font>, {<font color="red">"Sigla_UF"</font>, <font color="red">"Estado"</font>}, <font color="red">"Atributo"</font>, <font color="red">"Valor"</font>),<br></br>    #<font color="red">"Colunas Renomeadas1"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Colunas Não Dinâmicas"</font>,{{<font color="red">"Atributo"</font>, <font color="red">"Ano"</font>}}),<br></br>    #<font color="red">"Tipo Alterado2"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Colunas Renomeadas1"</font>,{{<font color="red">"Ano"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Colunas Renomeadas2"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Tipo Alterado2"</font>,{{<font color="red">"Valor"</font>, <font color="red">"Valor PIB Brasil em trilhao"</font>}}),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Colunas Renomeadas2"</font>,{<font color="red">"Estado"</font>})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Colunas Removidas"</font></td></tr><tr ><td >SAU_Medicos por 10k Habitantes</td><td ><font color="blue">let</font><br></br>    Fonte = <font color="purple">Web.BrowserContents</font>("http:<font color="green">//www.ipeadata.gov.br/ExibeSerieR.aspx?stub=1&serid=2096727037&MINDATA=2015&MAXDATA=2025&TNIVID=2&TPAID=1&module=S"),</font><br></br>    #<font color="red">"Tabela extraída de HTML"</font> = <font color="purple">Html.Table</font>(Fonte, {{<font color="red">"Column1"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(1)"}, {<font color="red">"Column2"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(2)"}, {<font color="red">"Column3"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(3)"}, {<font color="red">"Column4"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(4)"}, {<font color="red">"Column5"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(5)"}, {<font color="red">"Column6"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(6)"}, {<font color="red">"Column7"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(7)"}, {<font color="red">"Column8"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(8)"}, {<font color="red">"Column9"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(9)"}, {<font color="red">"Column10"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(10)"}, {<font color="red">"Column11"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(11)"}}, [RowSelector="TABLE[id='grd_DXMainTable'] > * > TR"]),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Tabela extraída de HTML"</font>,{{<font color="red">"Column1"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column2"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column3"</font>, <font color="blue">type</font> number}, {<font color="red">"Column4"</font>, <font color="blue">type</font> number}, {<font color="red">"Column5"</font>, <font color="blue">type</font> number}, {<font color="red">"Column6"</font>, <font color="blue">type</font> number}, {<font color="red">"Column7"</font>, <font color="blue">type</font> number}, {<font color="red">"Column8"</font>, <font color="blue">type</font> number}, {<font color="red">"Column9"</font>, <font color="blue">type</font> number}, {<font color="red">"Column10"</font>, <font color="blue">type</font> number}, {<font color="red">"Column11"</font>, <font color="blue">type</font> number}}),<br></br>    #<font color="red">"Cabeçalhos Promovidos"</font> = <font color="purple">Table.PromoteHeaders</font>(#<font color="red">"Tipo Alterado"</font>, [PromoteAllScalars=<font color="blue">true</font>]),<br></br>    #<font color="red">"Tipo Alterado1"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Cabeçalhos Promovidos"</font>,{{<font color="red">"Sigla"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Estado"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"2015"</font>, <font color="blue">type</font> number}, {<font color="red">"2016"</font>, <font color="blue">type</font> number}, {<font color="red">"2017"</font>, <font color="blue">type</font> number}, {<font color="red">"2018"</font>, <font color="blue">type</font> number}, {<font color="red">"2019"</font>, <font color="blue">type</font> number}, {<font color="red">"2020"</font>, <font color="blue">type</font> number}, {<font color="red">"2021"</font>, <font color="blue">type</font> number}, {<font color="red">"2022"</font>, <font color="blue">type</font> number}, {<font color="red">"2023"</font>, <font color="blue">type</font> number}}),<br></br>    #<font color="red">"Outras Colunas Não Dinâmicas"</font> = <font color="purple">Table.Unpivot</font>OtherColumns(#<font color="red">"Tipo Alterado1"</font>, {<font color="red">"Sigla"</font>, <font color="red">"Estado"</font>}, <font color="red">"Atributo"</font>, <font color="red">"Valor"</font>),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Outras Colunas Não Dinâmicas"</font>,{{<font color="red">"Atributo"</font>, <font color="red">"Ano"</font>}}),<br></br>    #<font color="red">"Tipo Alterado2"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Colunas Renomeadas"</font>,{{<font color="red">"Ano"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Colunas Renomeadas1"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Tipo Alterado2"</font>,{{<font color="red">"Valor"</font>, <font color="red">"Médicos por 10.000 Habitantes"</font>}, {<font color="red">"Sigla"</font>, <font color="red">"Sigla_UF"</font>}}),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Colunas Renomeadas1"</font>,{<font color="red">"Estado"</font>})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Colunas Removidas"</font></td></tr><tr ><td >SEG_Homicidios por 100k Habitantes</td><td ><font color="blue">let</font><br></br>    Fonte = <font color="purple">Web.BrowserContents</font>("http:<font color="green">//www.ipeadata.gov.br/ExibeSerieR.aspx?stub=1&serid=1611149422&MINDATA=2015&MAXDATA=2025&TNIVID=2&TPAID=1&module=R"),</font><br></br>    #<font color="red">"Tabela extraída de HTML"</font> = <font color="purple">Html.Table</font>(Fonte, {{<font color="red">"Column1"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(1)"}, {<font color="red">"Column2"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(2)"}, {<font color="red">"Column3"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(3)"}, {<font color="red">"Column4"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(4)"}, {<font color="red">"Column5"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(5)"}, {<font color="red">"Column6"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(6)"}, {<font color="red">"Column7"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(7)"}, {<font color="red">"Column8"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(8)"}, {<font color="red">"Column9"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(9)"}, {<font color="red">"Column10"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(10)"}, {<font color="red">"Column11"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(11)"}}, [RowSelector="TABLE[id='grd_DXMainTable'] > * > TR"]),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Tabela extraída de HTML"</font>,{{<font color="red">"Column1"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column2"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column3"</font>, <font color="blue">type</font> number}, {<font color="red">"Column4"</font>, <font color="blue">type</font> number}, {<font color="red">"Column5"</font>, <font color="blue">type</font> number}, {<font color="red">"Column6"</font>, <font color="blue">type</font> number}, {<font color="red">"Column7"</font>, <font color="blue">type</font> number}, {<font color="red">"Column8"</font>, <font color="blue">type</font> number}, {<font color="red">"Column9"</font>, <font color="blue">type</font> number}, {<font color="red">"Column10"</font>, <font color="blue">type</font> number}, {<font color="red">"Column11"</font>, <font color="blue">type</font> number}}),<br></br>    #<font color="red">"Cabeçalhos Promovidos"</font> = <font color="purple">Table.PromoteHeaders</font>(#<font color="red">"Tipo Alterado"</font>, [PromoteAllScalars=<font color="blue">true</font>]),<br></br>    #<font color="red">"Tipo Alterado1"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Cabeçalhos Promovidos"</font>,{{<font color="red">"Sigla"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Estado"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"2015"</font>, <font color="blue">type</font> number}, {<font color="red">"2016"</font>, <font color="blue">type</font> number}, {<font color="red">"2017"</font>, <font color="blue">type</font> number}, {<font color="red">"2018"</font>, <font color="blue">type</font> number}, {<font color="red">"2019"</font>, <font color="blue">type</font> number}, {<font color="red">"2020"</font>, <font color="blue">type</font> number}, {<font color="red">"2021"</font>, <font color="blue">type</font> number}, {<font color="red">"2022"</font>, <font color="blue">type</font> number}, {<font color="red">"Column11"</font>, <font color="blue">type</font> number}}),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Tipo Alterado1"</font>,{<font color="red">"Column11"</font>}),<br></br>    #<font color="red">"Outras Colunas Não Dinâmicas"</font> = <font color="purple">Table.Unpivot</font>OtherColumns(#<font color="red">"Colunas Removidas"</font>, {<font color="red">"Sigla"</font>, <font color="red">"Estado"</font>}, <font color="red">"Atributo"</font>, <font color="red">"Valor"</font>),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Outras Colunas Não Dinâmicas"</font>,{{<font color="red">"Atributo"</font>, <font color="red">"Ano"</font>}}),<br></br>    #<font color="red">"Tipo Alterado2"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Colunas Renomeadas"</font>,{{<font color="red">"Ano"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Colunas Renomeadas1"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Tipo Alterado2"</font>,{{<font color="red">"Valor"</font>, <font color="red">"Tx Homicidio por 100.000 Habitantes"</font>}, {<font color="red">"Sigla"</font>, <font color="red">"Sigla_UF"</font>}}),<br></br>    #<font color="red">"Colunas Removidas1"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Colunas Renomeadas1"</font>,{<font color="red">"Estado"</font>})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Colunas Removidas1"</font></td></tr><tr ><td >SOC_Taxa de Pobreza</td><td ><font color="blue">let</font><br></br>    Fonte = <font color="purple">Web.BrowserContents</font>("http:<font color="green">//www.ipeadata.gov.br/ExibeSerieR.aspx?stub=1&serid=2096726934&MINDATA=2015&MAXDATA=2025&TNIVID=2&TPAID=1&module=S"),</font><br></br>    #<font color="red">"Tabela extraída de HTML"</font> = <font color="purple">Html.Table</font>(Fonte, {{<font color="red">"Column1"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(1)"}, {<font color="red">"Column2"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(2)"}, {<font color="red">"Column3"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(3)"}, {<font color="red">"Column4"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(4)"}, {<font color="red">"Column5"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(5)"}, {<font color="red">"Column6"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(6)"}, {<font color="red">"Column7"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(7)"}, {<font color="red">"Column8"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(8)"}, {<font color="red">"Column9"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(9)"}, {<font color="red">"Column10"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(10)"}, {<font color="red">"Column11"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(11)"}}, [RowSelector="TABLE[id='grd_DXMainTable'] > * > TR"]),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Tabela extraída de HTML"</font>,{{<font color="red">"Column1"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column2"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column3"</font>, <font color="blue">type</font> number}, {<font color="red">"Column4"</font>, <font color="blue">type</font> number}, {<font color="red">"Column5"</font>, <font color="blue">type</font> number}, {<font color="red">"Column6"</font>, <font color="blue">type</font> number}, {<font color="red">"Column7"</font>, <font color="blue">type</font> number}, {<font color="red">"Column8"</font>, <font color="blue">type</font> number}, {<font color="red">"Column9"</font>, <font color="blue">type</font> number}, {<font color="red">"Column10"</font>, <font color="blue">type</font> number}, {<font color="red">"Column11"</font>, <font color="blue">type</font> number}}),<br></br>    #<font color="red">"Cabeçalhos Promovidos"</font> = <font color="purple">Table.PromoteHeaders</font>(#<font color="red">"Tipo Alterado"</font>, [PromoteAllScalars=<font color="blue">true</font>]),<br></br>    #<font color="red">"Outras Colunas Não Dinâmicas"</font> = <font color="purple">Table.Unpivot</font>OtherColumns(#<font color="red">"Cabeçalhos Promovidos"</font>, {<font color="red">"Sigla"</font>, <font color="red">"Estado"</font>}, <font color="red">"Atributo"</font>, <font color="red">"Valor"</font>),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Outras Colunas Não Dinâmicas"</font>,{{<font color="red">"Atributo"</font>, <font color="red">"Ano"</font>}}),<br></br>    #<font color="red">"Tipo Alterado2"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Colunas Renomeadas"</font>,{{<font color="red">"Ano"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Colunas Renomeadas1"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Tipo Alterado2"</font>,{{<font color="red">"Valor"</font>, <font color="red">"Taxa de Pobreza"</font>}, {<font color="red">"Sigla"</font>, <font color="red">"Sigla_UF"</font>}}),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Colunas Renomeadas1"</font>,{<font color="red">"Estado"</font>})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Colunas Removidas"</font></td></tr><tr ><td >FIN_Receita corrente - receita bruta - estadual</td><td ><font color="blue">let</font><br></br>    Fonte = <font color="purple">Web.BrowserContents</font>("http:<font color="green">//www.ipeadata.gov.br/ExibeSerieR.aspx?stub=1&serid=40177&MINDATA=1970&MAXDATA=2025&TNIVID=2&TPAID=1&module=S"),</font><br></br>    #<font color="red">"Tabela extraída de HTML"</font> = <font color="purple">Html.Table</font>(Fonte, {{<font color="red">"Column1"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(1)"}, {<font color="red">"Column2"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(2)"}, {<font color="red">"Column3"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(3)"}, {<font color="red">"Column4"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(4)"}, {<font color="red">"Column5"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(5)"}, {<font color="red">"Column6"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(6)"}, {<font color="red">"Column7"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(7)"}, {<font color="red">"Column8"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(8)"}, {<font color="red">"Column9"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(9)"}, {<font color="red">"Column10"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(10)"}, {<font color="red">"Column11"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(11)"}, {<font color="red">"Column12"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(12)"}, {<font color="red">"Column13"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(13)"}, {<font color="red">"Column14"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(14)"}, {<font color="red">"Column15"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(15)"}, {<font color="red">"Column16"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(16)"}, {<font color="red">"Column17"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(17)"}, {<font color="red">"Column18"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(18)"}, {<font color="red">"Column19"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(19)"}, {<font color="red">"Column20"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(20)"}, {<font color="red">"Column21"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(21)"}, {<font color="red">"Column22"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(22)"}, {<font color="red">"Column23"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(23)"}, {<font color="red">"Column24"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(24)"}, {<font color="red">"Column25"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(25)"}, {<font color="red">"Column26"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(26)"}, {<font color="red">"Column27"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(27)"}, {<font color="red">"Column28"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(28)"}, {<font color="red">"Column29"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(29)"}, {<font color="red">"Column30"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(30)"}, {<font color="red">"Column31"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(31)"}, {<font color="red">"Column32"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(32)"}, {<font color="red">"Column33"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(33)"}, {<font color="red">"Column34"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(34)"}, {<font color="red">"Column35"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(35)"}, {<font color="red">"Column36"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(36)"}, {<font color="red">"Column37"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(37)"}, {<font color="red">"Column38"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(38)"}, {<font color="red">"Column39"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(39)"}, {<font color="red">"Column40"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(40)"}, {<font color="red">"Column41"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(41)"}, {<font color="red">"Column42"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(42)"}, {<font color="red">"Column43"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(43)"}, {<font color="red">"Column44"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(44)"}, {<font color="red">"Column45"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(45)"}, {<font color="red">"Column46"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(46)"}, {<font color="red">"Column47"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(47)"}, {<font color="red">"Column48"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(48)"}, {<font color="red">"Column49"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(49)"}, {<font color="red">"Column50"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(50)"}, {<font color="red">"Column51"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(51)"}, {<font color="red">"Column52"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(52)"}, {<font color="red">"Column53"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(53)"}, {<font color="red">"Column54"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(54)"}}, [RowSelector="TABLE[id='grd_DXMainTable'] > * > TR"]),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Tabela extraída de HTML"</font>,{{<font color="red">"Column1"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column2"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column3"</font>, <font color="blue">type</font> number}, {<font color="red">"Column4"</font>, <font color="blue">type</font> number}, {<font color="red">"Column5"</font>, <font color="blue">type</font> number}, {<font color="red">"Column6"</font>, <font color="blue">type</font> number}, {<font color="red">"Column7"</font>, <font color="blue">type</font> number}, {<font color="red">"Column8"</font>, <font color="blue">type</font> number}, {<font color="red">"Column9"</font>, <font color="blue">type</font> number}, {<font color="red">"Column10"</font>, <font color="blue">type</font> number}, {<font color="red">"Column11"</font>, <font color="blue">type</font> number}, {<font color="red">"Column12"</font>, <font color="blue">type</font> number}, {<font color="red">"Column13"</font>, <font color="blue">type</font> number}, {<font color="red">"Column14"</font>, <font color="blue">type</font> number}, {<font color="red">"Column15"</font>, <font color="blue">type</font> number}, {<font color="red">"Column16"</font>, <font color="blue">type</font> number}, {<font color="red">"Column17"</font>, <font color="blue">type</font> number}, {<font color="red">"Column18"</font>, <font color="blue">type</font> number}, {<font color="red">"Column19"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column20"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column21"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column22"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column23"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column24"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column25"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column26"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column27"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column28"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column29"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column30"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column31"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column32"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column33"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column34"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column35"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column36"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column37"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column38"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column39"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column40"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column41"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column42"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column43"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column44"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column45"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column46"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column47"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column48"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column49"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column50"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column51"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column52"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column53"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column54"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Cabeçalhos Promovidos"</font> = <font color="purple">Table.PromoteHeaders</font>(#<font color="red">"Tipo Alterado"</font>, [PromoteAllScalars=<font color="blue">true</font>]),<br></br>    #<font color="red">"Tipo Alterado1"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Cabeçalhos Promovidos"</font>,{{<font color="red">"Sigla"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Estado"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"1970"</font>, <font color="blue">type</font> number}, {<font color="red">"1971"</font>, <font color="blue">type</font> number}, {<font color="red">"1972"</font>, <font color="blue">type</font> number}, {<font color="red">"1973"</font>, <font color="blue">type</font> number}, {<font color="red">"1974"</font>, <font color="blue">type</font> number}, {<font color="red">"1975"</font>, <font color="blue">type</font> number}, {<font color="red">"1976"</font>, <font color="blue">type</font> number}, {<font color="red">"1977"</font>, <font color="blue">type</font> number}, {<font color="red">"1978"</font>, <font color="blue">type</font> number}, {<font color="red">"1979"</font>, <font color="blue">type</font> number}, {<font color="red">"1980"</font>, <font color="blue">type</font> number}, {<font color="red">"1981"</font>, <font color="blue">type</font> number}, {<font color="red">"1982"</font>, <font color="blue">type</font> number}, {<font color="red">"1983"</font>, <font color="blue">type</font> number}, {<font color="red">"1985"</font>, <font color="blue">type</font> number}, {<font color="red">"1986"</font>, <font color="blue">type</font> number}, {<font color="red">"1987"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"1988"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"1989"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"1990"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"1991"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"1992"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"1993"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"1994"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"1995"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"1996"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"1997"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"1998"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"1999"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2000"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2001"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2002"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2003"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2004"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2005"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2006"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2007"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2008"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2009"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2010"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2011"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2012"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2013"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2014"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2015"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2016"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2017"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2018"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2019"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2020"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2021"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2022"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Tipo Alterado1"</font>,{<font color="red">"1970"</font>, <font color="red">"1971"</font>, <font color="red">"1972"</font>, <font color="red">"1973"</font>, <font color="red">"1974"</font>, <font color="red">"1975"</font>, <font color="red">"1976"</font>, <font color="red">"1977"</font>, <font color="red">"1978"</font>, <font color="red">"1979"</font>, <font color="red">"1980"</font>, <font color="red">"1981"</font>, <font color="red">"1982"</font>, <font color="red">"1983"</font>, <font color="red">"1985"</font>, <font color="red">"1986"</font>, <font color="red">"1987"</font>, <font color="red">"1988"</font>, <font color="red">"1989"</font>, <font color="red">"1990"</font>, <font color="red">"1991"</font>, <font color="red">"1992"</font>, <font color="red">"1993"</font>}),<br></br>    #<font color="red">"Outras Colunas Não Dinâmicas"</font> = <font color="purple">Table.Unpivot</font>OtherColumns(#<font color="red">"Colunas Removidas"</font>, {<font color="red">"Sigla"</font>, <font color="red">"Estado"</font>}, <font color="red">"Atributo"</font>, <font color="red">"Valor"</font>),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Outras Colunas Não Dinâmicas"</font>,{{<font color="red">"Atributo"</font>, <font color="red">"Ano"</font>}}),<br></br>    #<font color="red">"Tipo Alterado2"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Colunas Renomeadas"</font>,{{<font color="red">"Ano"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Colunas Renomeadas1"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Tipo Alterado2"</font>,{{<font color="red">"Valor"</font>, <font color="red">"Receita bruta"</font>}, {<font color="red">"Sigla"</font>, <font color="red">"Sigla_UF"</font>}}),<br></br>    #<font color="red">"Coluna Mesclada Inserida"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Colunas Renomeadas1"</font>, <font color="red">"Indice"</font>, each <font color="purple">Text.Combine</font>({[Sigla_UF], [Estado], <font color="purple">Text.From</font>([Ano], "pt-BR")}), <font color="blue">type</font> <font color="blue">text</font>),<br></br>    #<font color="red">"Colunas Removidas1"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Coluna Mesclada Inserida"</font>,{<font color="red">"Estado"</font>})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Colunas Removidas1"</font></td></tr><tr ><td >FIN_Despesas correntes - estadual</td><td ><font color="blue">let</font><br></br>    Fonte = <font color="purple">Web.BrowserContents</font>("http:<font color="green">//www.ipeadata.gov.br/ExibeSerieR.aspx?stub=1&serid=40115&MINDATA=1994&MAXDATA=2025&TNIVID=2&TPAID=1&module=S"),</font><br></br>    #<font color="red">"Tabela extraída de HTML"</font> = <font color="purple">Html.Table</font>(Fonte, {{<font color="red">"Column1"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(1)"}, {<font color="red">"Column2"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(2)"}, {<font color="red">"Column3"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(3)"}, {<font color="red">"Column4"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(4)"}, {<font color="red">"Column5"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(5)"}, {<font color="red">"Column6"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(6)"}, {<font color="red">"Column7"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(7)"}, {<font color="red">"Column8"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(8)"}, {<font color="red">"Column9"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(9)"}, {<font color="red">"Column10"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(10)"}, {<font color="red">"Column11"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(11)"}, {<font color="red">"Column12"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(12)"}, {<font color="red">"Column13"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(13)"}, {<font color="red">"Column14"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(14)"}, {<font color="red">"Column15"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(15)"}, {<font color="red">"Column16"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(16)"}, {<font color="red">"Column17"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(17)"}, {<font color="red">"Column18"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(18)"}, {<font color="red">"Column19"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(19)"}, {<font color="red">"Column20"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(20)"}, {<font color="red">"Column21"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(21)"}, {<font color="red">"Column22"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(22)"}, {<font color="red">"Column23"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(23)"}, {<font color="red">"Column24"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(24)"}, {<font color="red">"Column25"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(25)"}, {<font color="red">"Column26"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(26)"}, {<font color="red">"Column27"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(27)"}, {<font color="red">"Column28"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(28)"}, {<font color="red">"Column29"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(29)"}, {<font color="red">"Column30"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(30)"}, {<font color="red">"Column31"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(31)"}}, [RowSelector="TABLE[id='grd_DXMainTable'] > * > TR"]),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Tabela extraída de HTML"</font>,{{<font color="red">"Column1"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column2"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column3"</font>, <font color="blue">type</font> number}, {<font color="red">"Column4"</font>, <font color="blue">type</font> number}, {<font color="red">"Column5"</font>, <font color="blue">type</font> number}, {<font color="red">"Column6"</font>, <font color="blue">type</font> number}, {<font color="red">"Column7"</font>, <font color="blue">type</font> number}, {<font color="red">"Column8"</font>, <font color="blue">type</font> number}, {<font color="red">"Column9"</font>, <font color="blue">type</font> number}, {<font color="red">"Column10"</font>, <font color="blue">type</font> number}, {<font color="red">"Column11"</font>, <font color="blue">type</font> number}, {<font color="red">"Column12"</font>, <font color="blue">type</font> number}, {<font color="red">"Column13"</font>, <font color="blue">type</font> number}, {<font color="red">"Column14"</font>, <font color="blue">type</font> number}, {<font color="red">"Column15"</font>, <font color="blue">type</font> number}, {<font color="red">"Column16"</font>, <font color="blue">type</font> number}, {<font color="red">"Column17"</font>, <font color="blue">type</font> number}, {<font color="red">"Column18"</font>, <font color="blue">type</font> number}, {<font color="red">"Column19"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column20"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column21"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column22"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column23"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column24"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column25"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column26"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column27"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column28"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column29"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column30"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column31"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Cabeçalhos Promovidos"</font> = <font color="purple">Table.PromoteHeaders</font>(#<font color="red">"Tipo Alterado"</font>, [PromoteAllScalars=<font color="blue">true</font>]),<br></br>    #<font color="red">"Tipo Alterado1"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Cabeçalhos Promovidos"</font>,{{<font color="red">"Sigla"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Estado"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"1994"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"1995"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"1996"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"1997"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"1998"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"1999"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2000"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2001"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2002"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2003"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2004"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2005"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2006"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2007"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2008"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2009"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2010"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2011"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2012"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2013"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2014"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2015"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2016"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2017"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2018"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2019"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2020"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2021"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2022"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Outras Colunas Não Dinâmicas"</font> = <font color="purple">Table.Unpivot</font>OtherColumns(#<font color="red">"Tipo Alterado1"</font>, {<font color="red">"Sigla"</font>, <font color="red">"Estado"</font>}, <font color="red">"Atributo"</font>, <font color="red">"Valor"</font>),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Outras Colunas Não Dinâmicas"</font>,{{<font color="red">"Atributo"</font>, <font color="red">"Ano"</font>}}),<br></br>    #<font color="red">"Tipo Alterado2"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Colunas Renomeadas"</font>,{{<font color="red">"Ano"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Colunas Renomeadas1"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Tipo Alterado2"</font>,{{<font color="red">"Valor"</font>, <font color="red">"Despesas Correntes"</font>}, {<font color="red">"Sigla"</font>, <font color="red">"Sigla_UF"</font>}}),<br></br>    #<font color="red">"Coluna Mesclada Inserida"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Colunas Renomeadas1"</font>, <font color="red">"Indice"</font>, each <font color="purple">Text.Combine</font>({[Sigla_UF], [Estado], <font color="purple">Text.From</font>([Ano], "pt-BR")}), <font color="blue">type</font> <font color="blue">text</font>),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Coluna Mesclada Inserida"</font>,{<font color="red">"Estado"</font>})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Colunas Removidas"</font></td></tr><tr ><td >FIN_Renda per capita (Atlas DH - Pnad Contínua/A)</td><td ><font color="blue">let</font><br></br>    Fonte = <font color="purple">Web.BrowserContents</font>("http:<font color="green">//www.ipeadata.gov.br/ExibeSerieR.aspx?stub=1&serid=2096726936&MINDATA=2015&MAXDATA=2025&TNIVID=2&TPAID=1&module=S"),</font><br></br>    #<font color="red">"Tabela extraída de HTML"</font> = <font color="purple">Html.Table</font>(Fonte, {{<font color="red">"Column1"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(1)"}, {<font color="red">"Column2"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(2)"}, {<font color="red">"Column3"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(3)"}, {<font color="red">"Column4"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(4)"}, {<font color="red">"Column5"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(5)"}, {<font color="red">"Column6"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(6)"}, {<font color="red">"Column7"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(7)"}, {<font color="red">"Column8"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(8)"}, {<font color="red">"Column9"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(9)"}, {<font color="red">"Column10"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(10)"}, {<font color="red">"Column11"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(11)"}, {<font color="red">"Column12"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(12)"}}, [RowSelector="TABLE[id='grd_DXMainTable'] > * > TR"]),<br></br>    #<font color="red">"Cabeçalhos Promovidos"</font> = <font color="purple">Table.PromoteHeaders</font>(#<font color="red">"Tabela extraída de HTML"</font>, [PromoteAllScalars=<font color="blue">true</font>]),<br></br>    #<font color="red">"Outras Colunas Não Dinâmicas"</font> = <font color="purple">Table.Unpivot</font>OtherColumns(#<font color="red">"Cabeçalhos Promovidos"</font>, {<font color="red">"Sigla"</font>, <font color="red">"Estado"</font>}, <font color="red">"Atributo"</font>, <font color="red">"Valor"</font>),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Outras Colunas Não Dinâmicas"</font>,{{<font color="red">"Atributo"</font>, <font color="red">"Ano"</font>}}),<br></br>    #<font color="red">"Tipo Alterado2"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Colunas Renomeadas"</font>,{{<font color="red">"Ano"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Valor"</font>, <font color="blue">type</font> number}}),<br></br>    #<font color="red">"Colunas Renomeadas1"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Tipo Alterado2"</font>,{{<font color="red">"Valor"</font>, <font color="red">"Renda per Capita"</font>}, {<font color="red">"Sigla"</font>, <font color="red">"Sigla_UF"</font>}}),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Colunas Renomeadas1"</font>,{<font color="red">"Estado"</font>})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Colunas Removidas"</font></td></tr><tr ><td >FIN_Receitas x Despesas</td><td ><font color="blue">let</font><br></br>    Fonte = <font color="purple">Table.NestedJoin</font>(#"FIN_Receita corrente - receita bruta - estadual", {<font color="red">"Indice"</font>}, #"FIN_Despesas correntes - estadual", {<font color="red">"Indice"</font>}, "Despesas correntes - estadual", <font color="purple">JoinKind.LeftOuter</font>),<br></br>    #"Despesas correntes - estadual Expandido" = <font color="purple">Table.ExpandTableColumn</font>(Fonte, "Despesas correntes - estadual", {<font color="red">"Despesas Correntes"</font>}, {<font color="red">"Despesas Correntes"</font>}),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#"Despesas correntes - estadual Expandido",{<font color="red">"Indice"</font>}),<br></br>    #<font color="red">"Personalização Adicionada"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Colunas Removidas"</font>, "Receita - Despesa", each [Receita bruta] - [Despesas Correntes]),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Personalização Adicionada"</font>,{{"Receita - Despesa", <font color="blue">type</font> number}}),<br></br>    #<font color="red">"Linhas Filtradas"</font> = <font color="purple">Table.SelectRows</font>(#<font color="red">"Tipo Alterado"</font>, each ([Ano] = 2014 or [Ano] = 2015 or [Ano] = 2016 or [Ano] = 2017 or [Ano] = 2018 or [Ano] = 2019 or [Ano] = 2020 or [Ano] = 2021 or [Ano] = 2022 or [Ano] = 2023))<br></br><font color="blue">in</font><br></br>    #<font color="red">"Linhas Filtradas"</font></td></tr><tr ><td >SOC_Indice de Gini</td><td ><font color="blue">let</font><br></br>    Fonte = <font color="purple">Web.BrowserContents</font>("http:<font color="green">//www.ipeadata.gov.br/ExibeSerieR.aspx?stub=1&serid=2096726935&MINDATA=2015&MAXDATA=2025&TNIVID=2&TPAID=1&module=S"),</font><br></br>    #<font color="red">"Tabela extraída de HTML"</font> = <font color="purple">Html.Table</font>(Fonte, {{<font color="red">"Column1"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(1)"}, {<font color="red">"Column2"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(2)"}, {<font color="red">"Column3"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(3)"}, {<font color="red">"Column4"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(4)"}, {<font color="red">"Column5"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(5)"}, {<font color="red">"Column6"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(6)"}, {<font color="red">"Column7"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(7)"}, {<font color="red">"Column8"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(8)"}, {<font color="red">"Column9"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(9)"}, {<font color="red">"Column10"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(10)"}, {<font color="red">"Column11"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(11)"}}, [RowSelector="TABLE[id='grd_DXMainTable'] > * > TR"]),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Tabela extraída de HTML"</font>,{{<font color="red">"Column1"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column2"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column3"</font>, <font color="blue">type</font> number}, {<font color="red">"Column4"</font>, <font color="blue">type</font> number}, {<font color="red">"Column5"</font>, <font color="blue">type</font> number}, {<font color="red">"Column6"</font>, <font color="blue">type</font> number}, {<font color="red">"Column7"</font>, <font color="blue">type</font> number}, {<font color="red">"Column8"</font>, <font color="blue">type</font> number}, {<font color="red">"Column9"</font>, <font color="blue">type</font> number}, {<font color="red">"Column10"</font>, <font color="blue">type</font> number}, {<font color="red">"Column11"</font>, <font color="blue">type</font> number}}),<br></br>    #<font color="red">"Cabeçalhos Promovidos"</font> = <font color="purple">Table.PromoteHeaders</font>(#<font color="red">"Tipo Alterado"</font>, [PromoteAllScalars=<font color="blue">true</font>]),<br></br>    #<font color="red">"Tipo Alterado1"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Cabeçalhos Promovidos"</font>,{{<font color="red">"Sigla"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Estado"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"2015"</font>, <font color="blue">type</font> number}, {<font color="red">"2016"</font>, <font color="blue">type</font> number}, {<font color="red">"2017"</font>, <font color="blue">type</font> number}, {<font color="red">"2018"</font>, <font color="blue">type</font> number}, {<font color="red">"2019"</font>, <font color="blue">type</font> number}, {<font color="red">"2020"</font>, <font color="blue">type</font> number}, {<font color="red">"2021"</font>, <font color="blue">type</font> number}, {<font color="red">"2022"</font>, <font color="blue">type</font> number}, {<font color="red">"2023"</font>, <font color="blue">type</font> number}}),<br></br>    #<font color="red">"Outras Colunas Não Dinâmicas"</font> = <font color="purple">Table.Unpivot</font>OtherColumns(#<font color="red">"Tipo Alterado1"</font>, {<font color="red">"Sigla"</font>, <font color="red">"Estado"</font>}, <font color="red">"Atributo"</font>, <font color="red">"Valor"</font>),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Outras Colunas Não Dinâmicas"</font>,{{<font color="red">"Atributo"</font>, <font color="red">"Ano"</font>}, {<font color="red">"Sigla"</font>, <font color="red">"Sigla_UF"</font>}, {<font color="red">"Valor"</font>, <font color="red">"Indice de Gini"</font>}}),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Colunas Renomeadas"</font>,{<font color="red">"Estado"</font>})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Colunas Removidas"</font></td></tr><tr ><td >SEG_Ocorrências Criminais</td><td ><font color="blue">let</font><br></br>    Fonte = <font color="purple">Excel.Workbook</font>(<font color="purple">Web.Contents</font>("http:<font color="green">//dados.mj.gov.br/dataset/210b9ae2-21fc-4986-89c6-2006eb4db247/resource/feeae05e-faba-406c-8a4a-512aec91a9d1/download/indicadoressegurancapublicauf.xlsx"), <font color="blue">null</font>, <font color="blue">true</font>),</font><br></br>    Ocorrências_Sheet = Fonte{[Item=<font color="red">"Ocorrências"</font>,Kind=<font color="red">"Sheet"</font>]}[Data],<br></br>    #<font color="red">"Cabeçalhos Promovidos"</font> = <font color="purple">Table.PromoteHeaders</font>(Ocorrências_Sheet, [PromoteAllScalars=<font color="blue">true</font>]),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Cabeçalhos Promovidos"</font>,{{<font color="red">"UF"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Tipo Crime"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Ano"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Mês"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Ocorrências"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Tipo Alterado"</font>,{<font color="red">"Mês"</font>}),<br></br>    #<font color="red">"Coluna em pivô"</font> = <font color="purple">Table.Pivot</font>(#<font color="red">"Colunas Removidas"</font>, <font color="purple">List.Distinct</font>(#<font color="red">"Colunas Removidas"</font>[#<font color="red">"Tipo Crime"</font>]), <font color="red">"Tipo Crime"</font>, <font color="red">"Ocorrências"</font>, <font color="purple">List.Sum</font>),<br></br>    #<font color="red">"Outras Colunas Não Dinâmicas"</font> = <font color="purple">Table.Unpivot</font>OtherColumns(#<font color="red">"Coluna em pivô"</font>, {<font color="red">"UF"</font>, <font color="red">"Ano"</font>}, <font color="red">"Atributo"</font>, <font color="red">"Valor"</font>),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Outras Colunas Não Dinâmicas"</font>,{{<font color="red">"Atributo"</font>, <font color="red">"Tipo Crime"</font>}, {<font color="red">"Valor"</font>, <font color="red">"Vítimas"</font>}}),<br></br>    #<font color="red">"Coluna Condicional Adicionada"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Colunas Renomeadas"</font>, <font color="red">"Sigla_UF"</font>, each if [UF] = <font color="red">"Acre"</font> then <font color="red">"AC"</font> else if [UF] = <font color="red">"Alagoas"</font> then <font color="red">"AL"</font> else if [UF] = <font color="red">"Amapá"</font> then <font color="red">"AP"</font> else if [UF] = <font color="red">"Amazonas"</font> then <font color="red">"AM"</font> else if [UF] = <font color="red">"Bahia"</font> then <font color="red">"BA"</font> else if [UF] = <font color="red">"Ceará"</font> then <font color="red">"CE"</font> else if [UF] = <font color="red">"Distrito Federal"</font> then <font color="red">"DF"</font> else if [UF] = <font color="red">"Espírito Santo"</font> then <font color="red">"ES"</font> else if [UF] = <font color="red">"Goiás"</font> then <font color="red">"GO"</font> else if [UF] = <font color="red">"Maranhão"</font> then <font color="red">"MA"</font> else if [UF] = <font color="red">"Mato Grosso"</font> then <font color="red">"MT"</font> else if [UF] = <font color="red">"Mato Grosso do Sul"</font> then <font color="red">"MS"</font> else if [UF] = <font color="red">"Minas Gerais"</font> then <font color="red">"MG"</font> else if [UF] = <font color="red">"Paraná"</font> then <font color="red">"PR"</font> else if [UF] = <font color="red">"Paraíba"</font> then <font color="red">"PB"</font> else if [UF] = <font color="red">"Pará"</font> then <font color="red">"PA"</font> else if [UF] = <font color="red">"Pernambuco"</font> then <font color="red">"PE"</font> else if [UF] = <font color="red">"Piauí"</font> then <font color="red">"PI"</font> else if [UF] = <font color="red">"Rio Grande do Norte"</font> then <font color="red">"RN"</font> else if [UF] = <font color="red">"Rio Grande do Sul"</font> then <font color="red">"RS"</font> else if [UF] = <font color="red">"Rio de Janeiro"</font> then <font color="red">"RJ"</font> else if [UF] = <font color="red">"Rondônia"</font> then <font color="red">"RO"</font> else if [UF] = <font color="red">"Roraima"</font> then <font color="red">"RR"</font> else if [UF] = <font color="red">"Santa Catarina"</font> then <font color="red">"SC"</font> else if [UF] = <font color="red">"Sergipe"</font> then <font color="red">"SE"</font> else if [UF] = <font color="red">"São Paulo"</font> then <font color="red">"SP"</font> else if [UF] = <font color="red">"Tocantins"</font> then <font color="red">"TO"</font> else <font color="blue">null</font>, <font color="blue">type</font> <font color="blue">text</font>),<br></br>    #<font color="red">"Colunas Removidas1"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Coluna Condicional Adicionada"</font>,{<font color="red">"UF"</font>})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Colunas Removidas1"</font></td></tr><tr ><td >Calendario</td><td ><br></br>ADDCOLUMNS(<br></br>    CALENDARAUTO(),<br></br>    <font color="red">"Ano"</font>, YEAR([Date]),<br></br>    <font color="red">"Mês"</font>, MONTH([Date]),<br></br>    <font color="red">"Dia"</font>, DAY([Date]),<br></br>    <font color="red">"Nome do Mês"</font>, FORMAT([Date], <font color="red">"MMMM"</font>),<br></br>    <font color="red">"Trimestre"</font>, QUARTER([Date])<br></br>)</td></tr><tr ><td >PIB Estadual histórico</td><td ><font color="blue">let</font><br></br>    Fonte = <font color="purple">Web.BrowserContents</font>("http:<font color="green">//www.ipeadata.gov.br/ExibeSerieR.aspx?stub=1&serid=1540855420&MINDATA=1939&MAXDATA=2025&TNIVID=2&TPAID=1&module=R"),</font><br></br>    #<font color="red">"Tabela extraída de HTML"</font> = <font color="purple">Html.Table</font>(Fonte, {{<font color="red">"Column1"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(1)"}, {<font color="red">"Column2"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(2)"}, {<font color="red">"Column3"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(3)"}, {<font color="red">"Column4"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(4)"}, {<font color="red">"Column5"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(5)"}, {<font color="red">"Column6"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(6)"}, {<font color="red">"Column7"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(7)"}, {<font color="red">"Column8"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(8)"}, {<font color="red">"Column9"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(9)"}, {<font color="red">"Column10"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(10)"}, {<font color="red">"Column11"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(11)"}, {<font color="red">"Column12"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(12)"}, {<font color="red">"Column13"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(13)"}, {<font color="red">"Column14"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(14)"}, {<font color="red">"Column15"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(15)"}, {<font color="red">"Column16"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(16)"}, {<font color="red">"Column17"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(17)"}, {<font color="red">"Column18"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(18)"}, {<font color="red">"Column19"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(19)"}, {<font color="red">"Column20"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(20)"}, {<font color="red">"Column21"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(21)"}, {<font color="red">"Column22"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(22)"}, {<font color="red">"Column23"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(23)"}, {<font color="red">"Column24"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(24)"}, {<font color="red">"Column25"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(25)"}, {<font color="red">"Column26"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(26)"}, {<font color="red">"Column27"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(27)"}, {<font color="red">"Column28"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(28)"}, {<font color="red">"Column29"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(29)"}, {<font color="red">"Column30"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(30)"}, {<font color="red">"Column31"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(31)"}, {<font color="red">"Column32"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(32)"}, {<font color="red">"Column33"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(33)"}, {<font color="red">"Column34"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(34)"}, {<font color="red">"Column35"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(35)"}, {<font color="red">"Column36"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(36)"}, {<font color="red">"Column37"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(37)"}, {<font color="red">"Column38"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(38)"}, {<font color="red">"Column39"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(39)"}, {<font color="red">"Column40"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(40)"}, {<font color="red">"Column41"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(41)"}, {<font color="red">"Column42"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(42)"}, {<font color="red">"Column43"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(43)"}, {<font color="red">"Column44"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(44)"}, {<font color="red">"Column45"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(45)"}, {<font color="red">"Column46"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(46)"}, {<font color="red">"Column47"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(47)"}, {<font color="red">"Column48"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(48)"}, {<font color="red">"Column49"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(49)"}, {<font color="red">"Column50"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(50)"}, {<font color="red">"Column51"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(51)"}, {<font color="red">"Column52"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(52)"}, {<font color="red">"Column53"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(53)"}, {<font color="red">"Column54"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(54)"}, {<font color="red">"Column55"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(55)"}, {<font color="red">"Column56"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(56)"}, {<font color="red">"Column57"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(57)"}, {<font color="red">"Column58"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(58)"}, {<font color="red">"Column59"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(59)"}, {<font color="red">"Column60"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(60)"}, {<font color="red">"Column61"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(61)"}, {<font color="red">"Column62"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(62)"}, {<font color="red">"Column63"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(63)"}}, [RowSelector="TABLE[id='grd_DXMainTable'] > * > TR"]),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Tabela extraída de HTML"</font>,{{<font color="red">"Column1"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column2"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column3"</font>, <font color="blue">type</font> number}, {<font color="red">"Column4"</font>, <font color="blue">type</font> number}, {<font color="red">"Column5"</font>, <font color="blue">type</font> number}, {<font color="red">"Column6"</font>, <font color="blue">type</font> number}, {<font color="red">"Column7"</font>, <font color="blue">type</font> number}, {<font color="red">"Column8"</font>, <font color="blue">type</font> number}, {<font color="red">"Column9"</font>, <font color="blue">type</font> number}, {<font color="red">"Column10"</font>, <font color="blue">type</font> number}, {<font color="red">"Column11"</font>, <font color="blue">type</font> number}, {<font color="red">"Column12"</font>, <font color="blue">type</font> number}, {<font color="red">"Column13"</font>, <font color="blue">type</font> number}, {<font color="red">"Column14"</font>, <font color="blue">type</font> number}, {<font color="red">"Column15"</font>, <font color="blue">type</font> number}, {<font color="red">"Column16"</font>, <font color="blue">type</font> number}, {<font color="red">"Column17"</font>, <font color="blue">type</font> number}, {<font color="red">"Column18"</font>, <font color="blue">type</font> number}, {<font color="red">"Column19"</font>, <font color="blue">type</font> number}, {<font color="red">"Column20"</font>, <font color="blue">type</font> number}, {<font color="red">"Column21"</font>, <font color="blue">type</font> number}, {<font color="red">"Column22"</font>, <font color="blue">type</font> number}, {<font color="red">"Column23"</font>, <font color="blue">type</font> number}, {<font color="red">"Column24"</font>, <font color="blue">type</font> number}, {<font color="red">"Column25"</font>, <font color="blue">type</font> number}, {<font color="red">"Column26"</font>, <font color="blue">type</font> number}, {<font color="red">"Column27"</font>, <font color="blue">type</font> number}, {<font color="red">"Column28"</font>, <font color="blue">type</font> number}, {<font color="red">"Column29"</font>, <font color="blue">type</font> number}, {<font color="red">"Column30"</font>, <font color="blue">type</font> number}, {<font color="red">"Column31"</font>, <font color="blue">type</font> number}, {<font color="red">"Column32"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column33"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column34"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column35"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column36"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column37"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column38"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column39"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column40"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column41"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column42"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column43"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column44"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column45"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column46"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column47"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column48"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column49"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column50"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column51"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column52"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column53"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column54"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column55"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column56"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column57"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column58"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column59"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column60"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column61"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column62"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column63"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Cabeçalhos Promovidos"</font> = <font color="purple">Table.PromoteHeaders</font>(#<font color="red">"Tipo Alterado"</font>, [PromoteAllScalars=<font color="blue">true</font>]),<br></br>    #<font color="red">"Tipo Alterado1"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Cabeçalhos Promovidos"</font>,{{<font color="red">"Sigla"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Estado"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"1939"</font>, <font color="blue">type</font> number}, {<font color="red">"1947"</font>, <font color="blue">type</font> number}, {<font color="red">"1948"</font>, <font color="blue">type</font> number}, {<font color="red">"1949"</font>, <font color="blue">type</font> number}, {<font color="red">"1950"</font>, <font color="blue">type</font> number}, {<font color="red">"1951"</font>, <font color="blue">type</font> number}, {<font color="red">"1952"</font>, <font color="blue">type</font> number}, {<font color="red">"1953"</font>, <font color="blue">type</font> number}, {<font color="red">"1954"</font>, <font color="blue">type</font> number}, {<font color="red">"1955"</font>, <font color="blue">type</font> number}, {<font color="red">"1956"</font>, <font color="blue">type</font> number}, {<font color="red">"1957"</font>, <font color="blue">type</font> number}, {<font color="red">"1958"</font>, <font color="blue">type</font> number}, {<font color="red">"1959"</font>, <font color="blue">type</font> number}, {<font color="red">"1960"</font>, <font color="blue">type</font> number}, {<font color="red">"1961"</font>, <font color="blue">type</font> number}, {<font color="red">"1962"</font>, <font color="blue">type</font> number}, {<font color="red">"1963"</font>, <font color="blue">type</font> number}, {<font color="red">"1964"</font>, <font color="blue">type</font> number}, {<font color="red">"1965"</font>, <font color="blue">type</font> number}, {<font color="red">"1966"</font>, <font color="blue">type</font> number}, {<font color="red">"1970"</font>, <font color="blue">type</font> number}, {<font color="red">"1975"</font>, <font color="blue">type</font> number}, {<font color="red">"1980"</font>, <font color="blue">type</font> number}, {<font color="red">"1985"</font>, <font color="blue">type</font> number}, {<font color="red">"1986"</font>, <font color="blue">type</font> number}, {<font color="red">"1987"</font>, <font color="blue">type</font> number}, {<font color="red">"1988"</font>, <font color="blue">type</font> number}, {<font color="red">"1989"</font>, <font color="blue">type</font> number}, {<font color="red">"1990"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"1991"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"1992"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"1993"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"1994"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"1995"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"1996"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"1997"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"1998"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"1999"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2000"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2001"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2002"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2003"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2004"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2005"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2006"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2007"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2008"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2009"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2010"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2011"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2012"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2013"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2014"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2015"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2016"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2017"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2018"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2019"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2020"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"2021"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Tipo Alterado1"</font>,{{<font color="red">"Sigla"</font>, <font color="red">"Sigla_UF"</font>}}),<br></br>    #<font color="red">"Outras Colunas Não Dinâmicas"</font> = <font color="purple">Table.Unpivot</font>OtherColumns(#<font color="red">"Colunas Renomeadas"</font>, {<font color="red">"Sigla_UF"</font>, <font color="red">"Estado"</font>}, <font color="red">"Atributo"</font>, <font color="red">"Valor"</font>),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Outras Colunas Não Dinâmicas"</font>,{<font color="red">"Estado"</font>})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Colunas Removidas"</font></td></tr><tr ><td >Raking</td><td ><font color="blue">let</font><br></br>    Fonte = <font color="purple">Table.FromRows</font>(<font color="purple">Json.Document</font>(<font color="purple">Binary.Decompress</font>(<font color="purple">Binary.From</font>Text("pZJNSgNBEIWvUgwEFBKZHCGaxLiIxERXIYSa7lIb+o/uaRDv4ClcBBdeINu+mD2DBv+YSXQzMNX9vap6r5fLbGGYII6csm4WnzQXjOBcaJF+rwLq0oBCYRzY9Em1Xj9bdb9SF8PJdH0z/g4okvc18pO4xgeEIXlS1tFdAuILFwioA0ro7N+51uEEM1M4esQWEOO2pi6DWo98iQVJYkJRAvx6gaE+bFzhQ2FazcuMB5su9fOTPM9hgoUoE0u+RWUsNOq4QQ+zuC2kYFgRc9IcwZIDhjYJ/VGEUWKhV5lryafjo1MXSnPcIjfigWHcxGeTSh0YyKDTdhphTpW97y0OEamjGWiUt8nnUnhlWtKhu+DqlVJtYpRg8ZWLncU5KCEbPG4QS1EH68whyOf+QyONbxn+9zR2GZwZ56h96j0z/dfLqF5Do8LqDQ==", <font color="purple">BinaryEncoding.Base64</font>), <font color="purple">Compression.Deflate</font>)), <font color="blue">let</font> _t = ((<font color="blue">type</font> nullable <font color="blue">text</font>) meta [Serialized.Text = <font color="blue">true</font>]) <font color="blue">in</font> <font color="blue">type</font> table [Area = _t, Indice = _t, Observações = _t, Referencias = _t]),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(Fonte,{{<font color="red">"Area"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Indice"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Referencias"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Valor Substituído1"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Tipo Alterado"</font>,<font color="red">"Taxa Analfabetismo"</font>,<font color="red">"Taxa Analfabetismo"</font>,<font color="purple">Replacer.ReplaceText</font>,{<font color="red">"Indice"</font>}),<br></br>    #<font color="red">"Valor Substituído2"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Valor Substituído1"</font>,<font color="red">"Taxa Analfabetismo"</font>,<font color="red">"Taxa Analfabetismo"</font>,<font color="purple">Replacer.ReplaceText</font>,{<font color="red">"Indice"</font>})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Valor Substituído2"</font></td></tr><tr ><td >Indices_mais_recentes</td><td ><font color="blue">let</font><br></br>    Fonte = <font color="purple">Table.Combine</font>({#<font color="red">"SOC_Taxa de Pobreza"</font>, #<font color="red">"SOC_Indice de Gini"</font>, #"SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais", SOC_IDHM_por_UF, #"FIN_Renda per capita (Atlas DH - Pnad Contínua/A)", #<font color="red">"FIN_Receitas x Despesas"</font>, #"FIN_Receita corrente - receita bruta - estadual", #<font color="red">"SEG_Ocorrências Criminais"</font>, #<font color="red">"SEG_Homicidios por 100k Habitantes"</font>, #"SAU_Estabelecimento de saude(DataSUS)", #<font color="red">"SAU_Medicos por 10k Habitantes"</font>, #"EDU_% Alunos na Rede Pública", #"SOC_Taxa de desemprego (IBGE - Continua)", #"SOC_Taxa de desemprego por Ano (IBGE - Continua)"}),<br></br>    #<font color="red">"Colunas Removidas1"</font> = <font color="purple">Table.RemoveColumns</font>(Fonte,{<font color="red">"Codigo"</font>, <font color="red">"Periodo"</font>, <font color="red">"Trimestres"</font>, <font color="red">"Indice"</font>, <font color="red">"Vítimas"</font>, <font color="red">"Ano_Data"</font>}),<br></br>    #<font color="red">"Colunas Renomeadas1"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Colunas Removidas1"</font>,{{"Valor(%)<font color="red">", "</font>% Alunos na Rede"}}),<br></br>    #<font color="red">"Outras Colunas Não Dinâmicas"</font> = <font color="purple">Table.Unpivot</font>OtherColumns(#<font color="red">"Colunas Renomeadas1"</font>, {<font color="red">"Ano"</font>, <font color="red">"Sigla_UF"</font>}, <font color="red">"Atributo"</font>, <font color="red">"Valor"</font>),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Outras Colunas Não Dinâmicas"</font>,{{<font color="red">"Atributo"</font>, <font color="red">"Indice"</font>}}),<br></br>    #<font color="red">"Linhas Filtradas"</font> = <font color="purple">Table.SelectRows</font>(#<font color="red">"Colunas Renomeadas"</font>, each ([Ano] <> <font color="blue">null</font>) and ([Indice] <> <font color="red">"Ano_Data"</font> and [Indice] <> <font color="red">"Codigo"</font> and [Indice] <> <font color="red">"Indice"</font> and [Indice] <> <font color="red">"Periodo"</font> and [Indice] <> <font color="red">"Tipo Crime"</font> and [Indice] <> <font color="red">"Trimestres"</font> and [Indice] <> <font color="red">"UF"</font>)),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Linhas Filtradas"</font>,{{<font color="red">"Valor"</font>, <font color="blue">type</font> number}, {<font color="red">"Ano"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Linhas Filtradas1"</font> = <font color="purple">Table.SelectRows</font>(#<font color="red">"Tipo Alterado"</font>, each [Ano] = #<font color="red">"Ano Filtragem Indices"</font>),<br></br>    #<font color="red">"Coluna Condicional Adicionada"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tipo Alterado"</font>, <font color="red">"Indices_Ranking"</font>, each if [Indice] = <font color="red">"Indice de Gini"</font> then <font color="red">"Índice Gini"</font> else if [Indice] = <font color="red">"Receita bruta"</font> then "Receita - Despesas (Bruto)" else if [Indice] = <font color="red">"Tx Homicidio por 100.000 Habitantes"</font> then <font color="red">"Homicídios por 100 mil Habitantes"</font> else if [Indice] = <font color="red">"Qtd Estabelecimentos de saude"</font> then <font color="red">"Estabelecimentos de Saúde"</font> else if [Indice] = "% Alunos na Rede<font color="red">" then "</font>% Alunos na Rede Pública" else [Indice], <font color="blue">type</font> <font color="blue">text</font>),<br></br>    #<font color="red">"Coluna Condicional Adicionada1"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Coluna Condicional Adicionada"</font>, <font color="red">"Area"</font>, each if [Indices_Ranking] = <font color="red">"Taxa de Pobreza"</font> then <font color="red">"Sociedade"</font> else if [Indices_Ranking] = <font color="red">"Índice Gini"</font> then <font color="red">"Sociedade"</font> else if [Indices_Ranking] = <font color="red">"Taxa Analfabetismo"</font> then <font color="red">"Educação"</font> else if [Indices_Ranking] = <font color="red">"Taxa Desemprego"</font> then <font color="red">"Sociedade"</font> else if [Indices_Ranking] = <font color="red">"IDH"</font> then <font color="red">"Sociedade"</font> else if [Indices_Ranking] = <font color="red">"Estabelecimentos de Saúde"</font> then <font color="red">"Saúde"</font> else if [Indices_Ranking] = <font color="red">"Médicos por 10 mil Habitantes"</font> then <font color="red">"Saúde"</font> else if [Indices_Ranking] = <font color="red">"Renda per capita"</font> then <font color="red">"Finanças Públicas"</font> else if [Indices_Ranking] = "Receitas - Despesas (Bruto)<font color="red">" then "</font>Finanças Públicas" else if [Indices_Ranking] = "% Alunos na Rede Pública<font color="red">" then "</font>Educação" else if [Indices_Ranking] = <font color="red">"Homicídios por 100 mil Habitantes"</font> then <font color="red">"Segurança"</font> else if [Indices_Ranking] = <font color="red">"Estupros"</font> then <font color="red">"Segurança"</font> else if [Indices_Ranking] = <font color="red">"Homicídios Doloso"</font> then <font color="red">"Segurança"</font> else <font color="red">"Finanças Públicas"</font>, <font color="blue">type</font> <font color="blue">text</font>)<br></br><font color="blue">in</font><br></br>    #<font color="red">"Coluna Condicional Adicionada1"</font></td></tr><tr ><td >Ano Filtragem Indices</td><td >2023 meta [IsParameterQuery=<font color="blue">true</font>, List={2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026}, DefaultValue=2022, Type=<font color="red">"Number"</font>, IsParameterQueryRequired=<font color="blue">true</font>]</td></tr><tr ><td >SOC_Taxa de desemprego por Ano (IBGE - Continua)</td><td ><font color="blue">let</font><br></br>    Fonte = <font color="purple">Web.BrowserContents</font>("http:<font color="green">//www.ipeadata.gov.br/ExibeSerieR.aspx?stub=1&serid=2096726928&MINDATA=2014&MAXDATA=2025&TNIVID=2&TPAID=1&module=S"),</font><br></br>    Séries1 = <font color="purple">Html.Table</font>(Fonte, {{<font color="red">"Column1"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(1)"}, {<font color="red">"Column2"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(2)"}, {<font color="red">"Column3"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(3)"}, {<font color="red">"Column4"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(4)"}, {<font color="red">"Column5"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(5)"}, {<font color="red">"Column6"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(6)"}, {<font color="red">"Column7"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(7)"}, {<font color="red">"Column8"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(8)"}, {<font color="red">"Column9"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(9)"}, {<font color="red">"Column10"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(10)"}, {<font color="red">"Column11"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(11)"}, {<font color="red">"Column12"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(12)"}, {<font color="red">"Column13"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(13)"}, {<font color="red">"Column14"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(14)"}, {<font color="red">"Column15"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(15)"}, {<font color="red">"Column16"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(16)"}, {<font color="red">"Column17"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(17)"}, {<font color="red">"Column18"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(18)"}, {<font color="red">"Column19"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(19)"}, {<font color="red">"Column20"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(20)"}, {<font color="red">"Column21"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(21)"}, {<font color="red">"Column22"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(22)"}, {<font color="red">"Column23"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(23)"}, {<font color="red">"Column24"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(24)"}, {<font color="red">"Column25"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(25)"}, {<font color="red">"Column26"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(26)"}, {<font color="red">"Column27"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(27)"}, {<font color="red">"Column28"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(28)"}, {<font color="red">"Column29"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(29)"}, {<font color="red">"Column30"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(30)"}, {<font color="red">"Column31"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(31)"}, {<font color="red">"Column32"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(32)"}, {<font color="red">"Column33"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(33)"}, {<font color="red">"Column34"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(34)"}, {<font color="red">"Column35"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(35)"}, {<font color="red">"Column36"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(36)"}, {<font color="red">"Column37"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(37)"}, {<font color="red">"Column38"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(38)"}, {<font color="red">"Column39"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(39)"}, {<font color="red">"Column40"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(40)"}, {<font color="red">"Column41"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(41)"}, {<font color="red">"Column42"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(42)"}, {<font color="red">"Column43"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(43)"}, {<font color="red">"Column44"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(44)"}, {<font color="red">"Column45"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(45)"}}, [RowSelector="TABLE[id='grd_DXMainTable'] > * > TR"]),<br></br>    #<font color="red">"Cabeçalhos Promovidos"</font> = <font color="purple">Table.PromoteHeaders</font>(Séries1, [PromoteAllScalars=<font color="blue">true</font>]),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Cabeçalhos Promovidos"</font>,{{<font color="red">"Sigla"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Estado"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"2014 T1"</font>, <font color="blue">type</font> number}, {<font color="red">"2014 T2"</font>, <font color="blue">type</font> number}, {<font color="red">"2014 T3"</font>, <font color="blue">type</font> number}, {<font color="red">"2014 T4"</font>, <font color="blue">type</font> number}, {<font color="red">"2015 T1"</font>, <font color="blue">type</font> number}, {<font color="red">"2015 T2"</font>, <font color="blue">type</font> number}, {<font color="red">"2015 T3"</font>, <font color="blue">type</font> number}, {<font color="red">"2015 T4"</font>, <font color="blue">type</font> number}, {<font color="red">"2016 T1"</font>, <font color="blue">type</font> number}, {<font color="red">"2016 T2"</font>, <font color="blue">type</font> number}, {<font color="red">"2016 T3"</font>, <font color="blue">type</font> number}, {<font color="red">"2016 T4"</font>, <font color="blue">type</font> number}, {<font color="red">"2017 T1"</font>, <font color="blue">type</font> number}, {<font color="red">"2017 T2"</font>, <font color="blue">type</font> number}, {<font color="red">"2017 T3"</font>, <font color="blue">type</font> number}, {<font color="red">"2017 T4"</font>, <font color="blue">type</font> number}, {<font color="red">"2018 T1"</font>, <font color="blue">type</font> number}, {<font color="red">"2018 T2"</font>, <font color="blue">type</font> number}, {<font color="red">"2018 T3"</font>, <font color="blue">type</font> number}, {<font color="red">"2018 T4"</font>, <font color="blue">type</font> number}, {<font color="red">"2019 T1"</font>, <font color="blue">type</font> number}, {<font color="red">"2019 T2"</font>, <font color="blue">type</font> number}, {<font color="red">"2019 T3"</font>, <font color="blue">type</font> number}, {<font color="red">"2019 T4"</font>, <font color="blue">type</font> number}, {<font color="red">"2020 T1"</font>, <font color="blue">type</font> number}, {<font color="red">"2020 T2"</font>, <font color="blue">type</font> number}, {<font color="red">"2020 T3"</font>, <font color="blue">type</font> number}, {<font color="red">"2020 T4"</font>, <font color="blue">type</font> number}, {<font color="red">"2021 T1"</font>, <font color="blue">type</font> number}, {<font color="red">"2021 T2"</font>, <font color="blue">type</font> number}, {<font color="red">"2021 T3"</font>, <font color="blue">type</font> number}, {<font color="red">"2021 T4"</font>, <font color="blue">type</font> number}, {<font color="red">"2022 T1"</font>, <font color="blue">type</font> number}, {<font color="red">"2022 T2"</font>, <font color="blue">type</font> number}, {<font color="red">"2022 T3"</font>, <font color="blue">type</font> number}, {<font color="red">"2022 T4"</font>, <font color="blue">type</font> number}, {<font color="red">"2023 T1"</font>, <font color="blue">type</font> number}, {<font color="red">"2023 T2"</font>, <font color="blue">type</font> number}, {<font color="red">"2023 T3"</font>, <font color="blue">type</font> number}, {<font color="red">"2023 T4"</font>, <font color="blue">type</font> number}, {<font color="red">"2024 T1"</font>, <font color="blue">type</font> number}}),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Tipo Alterado"</font>,{{<font color="red">"Sigla"</font>, <font color="red">"Sigla_UF"</font>}}),<br></br>    #<font color="red">"Somente as Colunas Selecionadas Foram Transformadas em Linhas"</font> = <font color="purple">Table.Unpivot</font>(#<font color="red">"Colunas Renomeadas"</font>, {<font color="red">"2014 T1"</font>, <font color="red">"2014 T2"</font>, <font color="red">"2014 T3"</font>, <font color="red">"2014 T4"</font>, <font color="red">"2015 T1"</font>, <font color="red">"2015 T2"</font>, <font color="red">"2015 T3"</font>, <font color="red">"2015 T4"</font>, <font color="red">"2016 T1"</font>, <font color="red">"2016 T2"</font>, <font color="red">"2016 T3"</font>, <font color="red">"2016 T4"</font>, <font color="red">"2017 T1"</font>, <font color="red">"2017 T2"</font>, <font color="red">"2017 T3"</font>, <font color="red">"2017 T4"</font>, <font color="red">"2018 T1"</font>, <font color="red">"2018 T2"</font>, <font color="red">"2018 T3"</font>, <font color="red">"2018 T4"</font>, <font color="red">"2019 T1"</font>, <font color="red">"2019 T2"</font>, <font color="red">"2019 T3"</font>, <font color="red">"2019 T4"</font>, <font color="red">"2020 T1"</font>, <font color="red">"2020 T2"</font>, <font color="red">"2020 T3"</font>, <font color="red">"2020 T4"</font>, <font color="red">"2021 T1"</font>, <font color="red">"2021 T2"</font>, <font color="red">"2021 T3"</font>, <font color="red">"2021 T4"</font>, <font color="red">"2022 T1"</font>, <font color="red">"2022 T2"</font>, <font color="red">"2022 T3"</font>, <font color="red">"2022 T4"</font>, <font color="red">"2023 T1"</font>, <font color="red">"2023 T2"</font>, <font color="red">"2023 T3"</font>, <font color="red">"2023 T4"</font>, <font color="red">"2024 T1"</font>}, <font color="red">"Atributo"</font>, <font color="red">"Valor"</font>),<br></br>    #<font color="red">"Colunas Renomeadas1"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Somente as Colunas Selecionadas Foram Transformadas em Linhas"</font>,{{<font color="red">"Atributo"</font>, <font color="red">"Periodo"</font>}, {<font color="red">"Valor"</font>, "Taxa Desemprego %"}}),<br></br>    #<font color="red">"Coluna Duplicada"</font> = <font color="purple">Table.DuplicateColumn</font>(#<font color="red">"Colunas Renomeadas1"</font>, <font color="red">"Periodo"</font>, "Periodo - Copiar"),<br></br>    #<font color="red">"Colunas Renomeadas2"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Coluna Duplicada"</font>,{{"Periodo - Copiar<font color="red">", "</font>Trimestres"}}),<br></br>    #<font color="red">"Valor Substituído"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Colunas Renomeadas2"</font>,<font color="red">" T1"</font>,<font color="red">"/01/01"</font>,<font color="purple">Replacer.ReplaceText</font>,{<font color="red">"Trimestres"</font>}),<br></br>    #<font color="red">"Valor Substituído1"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Valor Substituído"</font>,<font color="red">" T2"</font>,<font color="red">"/04/01"</font>,<font color="purple">Replacer.ReplaceText</font>,{<font color="red">"Trimestres"</font>}),<br></br>    #<font color="red">"Valor Substituído2"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Valor Substituído1"</font>,<font color="red">" T3"</font>,<font color="red">"/07/01"</font>,<font color="purple">Replacer.ReplaceText</font>,{<font color="red">"Trimestres"</font>}),<br></br>    #<font color="red">"Valor Substituído3"</font> = <font color="purple">Table.ReplaceValue</font>(#<font color="red">"Valor Substituído2"</font>,<font color="red">" T4"</font>,<font color="red">"/10/01"</font>,<font color="purple">Replacer.ReplaceText</font>,{<font color="red">"Trimestres"</font>}),<br></br>    #<font color="red">"Tipo Alterado1"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Valor Substituído3"</font>,{{<font color="red">"Trimestres"</font>, <font color="blue">type</font> datetime}}),<br></br>    #<font color="red">"Ano Inserido"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tipo Alterado1"</font>, <font color="red">"Ano"</font>, each <font color="purple">Date.Year</font>([Trimestres]), <font color="purple">Int64.Type</font>),<br></br>    #<font color="red">"Linhas Agrupadas"</font> = <font color="purple">Table.Group</font>(#<font color="red">"Ano Inserido"</font>, {<font color="red">"Sigla_UF"</font>, <font color="red">"Estado"</font>, <font color="red">"Ano"</font>}, {{"Taxa Desemprego média anual %", each <font color="purple">List.Average</font>([#"Taxa Desemprego %"]), <font color="blue">type</font> number}}),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Linhas Agrupadas"</font>,{<font color="red">"Estado"</font>})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Colunas Removidas"</font></td></tr><tr ><td >SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais</td><td ><font color="blue">let</font><br></br>    Fonte = <font color="purple">Web.BrowserContents</font>("http:<font color="green">//www.ipeadata.gov.br/ExibeSerieR.aspx?stub=1&serid=2096726941&MINDATA=2015&MAXDATA=2030&TNIVID=2&TPAID=1&module=S"),</font><br></br>    #<font color="red">"Tabela extraída de HTML"</font> = <font color="purple">Html.Table</font>(Fonte, {{<font color="red">"Column1"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(1)"}, {<font color="red">"Column2"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(2)"}, {<font color="red">"Column3"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(3)"}, {<font color="red">"Column4"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(4)"}, {<font color="red">"Column5"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(5)"}, {<font color="red">"Column6"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(6)"}, {<font color="red">"Column7"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(7)"}, {<font color="red">"Column8"</font>, "TABLE[id='grd_DXMainTable'] > * > TR > :nth-child(8)"}}, [RowSelector="TABLE[id='grd_DXMainTable'] > * > TR"]),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Tabela extraída de HTML"</font>,{{<font color="red">"Column1"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column2"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column3"</font>, <font color="blue">type</font> number}, {<font color="red">"Column4"</font>, <font color="blue">type</font> number}, {<font color="red">"Column5"</font>, <font color="blue">type</font> number}, {<font color="red">"Column6"</font>, <font color="blue">type</font> number}, {<font color="red">"Column7"</font>, <font color="blue">type</font> number}, {<font color="red">"Column8"</font>, <font color="blue">type</font> number}}),<br></br>    #<font color="red">"Cabeçalhos Promovidos"</font> = <font color="purple">Table.PromoteHeaders</font>(#<font color="red">"Tipo Alterado"</font>, [PromoteAllScalars=<font color="blue">true</font>]),<br></br>    #<font color="red">"Tipo Alterado1"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Cabeçalhos Promovidos"</font>,{{<font color="red">"Sigla"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Estado"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"2016"</font>, <font color="blue">type</font> number}, {<font color="red">"2017"</font>, <font color="blue">type</font> number}, {<font color="red">"2018"</font>, <font color="blue">type</font> number}, {<font color="red">"2019"</font>, <font color="blue">type</font> number}, {<font color="red">"2022"</font>, <font color="blue">type</font> number}, {<font color="red">"2023"</font>, <font color="blue">type</font> number}}),<br></br>    #<font color="red">"Outras Colunas Não Dinâmicas"</font> = <font color="purple">Table.Unpivot</font>OtherColumns(#<font color="red">"Tipo Alterado1"</font>, {<font color="red">"Sigla"</font>, <font color="red">"Estado"</font>}, <font color="red">"Atributo"</font>, <font color="red">"Valor"</font>),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Outras Colunas Não Dinâmicas"</font>,{{<font color="red">"Valor"</font>, <font color="red">"Taxa Analfabetismo"</font>}, {<font color="red">"Atributo"</font>, <font color="red">"Ano"</font>}, {<font color="red">"Sigla"</font>, <font color="red">"Sigla_UF"</font>}}),<br></br>    #<font color="red">"Tipo Alterado2"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Colunas Renomeadas"</font>,{{<font color="red">"Ano"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Tipo Alterado2"</font>,{<font color="red">"Estado"</font>})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Colunas Removidas"</font></td></tr><tr ><td >Indices_agregados_classificados</td><td ><font color="blue">let</font><br></br>    Fonte = <font color="purple">Table.Combine</font>({#<font color="red">"SOC_Taxa de Pobreza"</font>, #<font color="red">"SOC_Indice de Gini"</font>, #"SOC_Taxa de analfabetismo - pessoas com 15 anos ou mais", SOC_IDHM_por_UF, #"FIN_Renda per capita (Atlas DH - Pnad Contínua/A)", #<font color="red">"FIN_Receitas x Despesas"</font>, #"FIN_Receita corrente - receita bruta - estadual", #<font color="red">"SEG_Ocorrências Criminais"</font>, #<font color="red">"SEG_Homicidios por 100k Habitantes"</font>, #"SAU_Estabelecimento de saude(DataSUS)", #<font color="red">"SAU_Medicos por 10k Habitantes"</font>, #"EDU_% Alunos na Rede Pública", #"SOC_Taxa de desemprego (IBGE - Continua)", #"SOC_Taxa de desemprego por Ano (IBGE - Continua)"}),<br></br>    #<font color="red">"Colunas Removidas1"</font> = <font color="purple">Table.RemoveColumns</font>(Fonte,{<font color="red">"Codigo"</font>, <font color="red">"Periodo"</font>, <font color="red">"Trimestres"</font>, <font color="red">"Indice"</font>, <font color="red">"Vítimas"</font>, <font color="red">"Ano_Data"</font>}),<br></br>    #<font color="red">"Colunas Renomeadas1"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Colunas Removidas1"</font>,{{"Valor(%)<font color="red">", "</font>% Alunos na Rede"}}),<br></br>    #<font color="red">"Outras Colunas Não Dinâmicas"</font> = <font color="purple">Table.Unpivot</font>OtherColumns(#<font color="red">"Colunas Renomeadas1"</font>, {<font color="red">"Ano"</font>, <font color="red">"Sigla_UF"</font>}, <font color="red">"Atributo"</font>, <font color="red">"Valor"</font>),<br></br>    #<font color="red">"Colunas Renomeadas"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Outras Colunas Não Dinâmicas"</font>,{{<font color="red">"Atributo"</font>, <font color="red">"Indice"</font>}}),<br></br>    #<font color="red">"Linhas Filtradas"</font> = <font color="purple">Table.SelectRows</font>(#<font color="red">"Colunas Renomeadas"</font>, each ([Ano] <> <font color="blue">null</font>) and ([Indice] <> <font color="red">"Ano_Data"</font> and [Indice] <> <font color="red">"Codigo"</font> and [Indice] <> <font color="red">"Indice"</font> and [Indice] <> <font color="red">"Periodo"</font> and [Indice] <> <font color="red">"Tipo Crime"</font> and [Indice] <> <font color="red">"Trimestres"</font> and [Indice] <> <font color="red">"UF"</font>)),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Linhas Filtradas"</font>,{{<font color="red">"Valor"</font>, <font color="blue">type</font> number}, {<font color="red">"Ano"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Linhas Filtradas1"</font> = <font color="purple">Table.SelectRows</font>(#<font color="red">"Tipo Alterado"</font>, each [Ano] = #<font color="red">"Ano Filtragem Indices"</font>),<br></br>    #<font color="red">"Coluna Condicional Adicionada"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Tipo Alterado"</font>, <font color="red">"Indices_Ranking"</font>, each if [Indice] = <font color="red">"Indice de Gini"</font> then <font color="red">"Índice Gini"</font> else if [Indice] = <font color="red">"Receita bruta"</font> then "Receita - Despesas (Bruto)" else if [Indice] = <font color="red">"Tx Homicidio por 100.000 Habitantes"</font> then <font color="red">"Homicídios por 100 mil Habitantes"</font> else if [Indice] = <font color="red">"Qtd Estabelecimentos de saude"</font> then <font color="red">"Estabelecimentos de Saúde"</font> else if [Indice] = "% Alunos na Rede<font color="red">" then "</font>% Alunos na Rede Pública" else [Indice], <font color="blue">type</font> <font color="blue">text</font>),<br></br>    #<font color="red">"Coluna Condicional Adicionada1"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Coluna Condicional Adicionada"</font>, <font color="red">"Area"</font>, each if [Indices_Ranking] = <font color="red">"Taxa de Pobreza"</font> then <font color="red">"Sociedade"</font> else if [Indices_Ranking] = <font color="red">"Índice Gini"</font> then <font color="red">"Sociedade"</font> else if [Indices_Ranking] = <font color="red">"Taxa Analfabetismo"</font> then <font color="red">"Educação"</font> else if [Indices_Ranking] = <font color="red">"Taxa Desemprego"</font> then <font color="red">"Sociedade"</font> else if [Indices_Ranking] = <font color="red">"IDH"</font> then <font color="red">"Sociedade"</font> else if [Indices_Ranking] = <font color="red">"Estabelecimentos de Saúde"</font> then <font color="red">"Saúde"</font> else if [Indices_Ranking] = <font color="red">"Médicos por 10 mil Habitantes"</font> then <font color="red">"Saúde"</font> else if [Indices_Ranking] = <font color="red">"Renda per capita"</font> then <font color="red">"Finanças Públicas"</font> else if [Indices_Ranking] = "Receitas - Despesas (Bruto)<font color="red">" then "</font>Finanças Públicas" else if [Indices_Ranking] = "% Alunos na Rede Pública<font color="red">" then "</font>Educação" else if [Indices_Ranking] = <font color="red">"Homicídios por 100 mil Habitantes"</font> then <font color="red">"Segurança"</font> else if [Indices_Ranking] = <font color="red">"Estupros"</font> then <font color="red">"Segurança"</font> else if [Indices_Ranking] = <font color="red">"Homicídios Doloso"</font> then <font color="red">"Segurança"</font> else <font color="red">"Finanças Públicas"</font>, <font color="blue">type</font> <font color="blue">text</font>)<br></br><font color="blue">in</font><br></br>    #<font color="red">"Coluna Condicional Adicionada1"</font></td></tr><tr ><td >Indices Ano mais recente</td><td ><br></br>FILTER( 'Indices_agregados_classificados', 'Indices_agregados_classificados'[Ano] = CALCULATE( MAX('Indices_agregados_classificados'[Ano]), ALLEXCEPT('Indices_agregados_classificados', 'Indices_agregados_classificados'[Sigla_UF], 'Indices_agregados_classificados'[Indice], 'Indices_agregados_classificados'[Indices_Ranking], 'Indices_agregados_classificados'[Area]) ) )</td></tr></table><script>
	var toggler = document.getElementsByClassName("caret");
	for (var i = 0; i < toggler.length; i++){
		toggler[i].addEventListener("click", function() {
			this.parentElement.querySelector(".nested").classList.toggle("active");
		});
	}
		
	var togglerAll = document.getElementsByClassName("dropDownCaret");
	for (var j=0; j<togglerAll.length; j++){
		togglerAll[j].addEventListener("click", function(event){
			if (event.currentTarget != event.target) return;
			if(this.parentElement.querySelector(".nested").classList.contains("active")){
				this.querySelectorAll(".nested").forEach(function(currentValue, currentIndex, listObj) {
					if(currentValue.classList.contains("active")){
						currentValue.classList.remove("active");
					}
				});
			}
			else{
				this.querySelectorAll(".nested").forEach(function(currentValue, currentIndex, listObj) {
					if(!currentValue.classList.contains("active")){
						currentValue.classList.add("active");
					}
				});
			}
		});
	}
</script></body></html>
